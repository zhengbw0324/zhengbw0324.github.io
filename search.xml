<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>模板</title>
      <link href="/2021/07/18/%E6%A8%A1%E6%9D%BF/"/>
      <url>/2021/07/18/%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>模板</title>
      <link href="/2021/07/18/CSAPP/%E5%AE%9E%E9%AA%8C%E8%AE%B0%E5%BD%95/"/>
      <url>/2021/07/18/CSAPP/%E5%AE%9E%E9%AA%8C%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python基础语法</title>
      <link href="/2021/07/18/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/2021/07/18/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>Python关键语法总结</p><span id="more"></span><h3 id="一、基础语法与数据类型"><a href="#一、基础语法与数据类型" class="headerlink" title="一、基础语法与数据类型"></a>一、基础语法与数据类型</h3><h4 id="（一）多行语句"><a href="#（一）多行语句" class="headerlink" title="（一）多行语句"></a>（一）多行语句</h4><p>Python 通常是一行写完一条语句，但如果语句很长，我们可以<strong>使用反斜杠 \ 来实现多行语句</strong>，例如：</p><pre class=" language-python"><code class="language-python">total <span class="token operator">=</span> item_one <span class="token operator">+</span> \        item_two <span class="token operator">+</span> \        item_three</code></pre><p>在  [], {}, 或 () 中的多行语句，不需要使用反斜杠 \，例如：</p><pre class=" language-python"><code class="language-python">total <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'item_one'</span><span class="token punctuation">,</span> <span class="token string">'item_two'</span><span class="token punctuation">,</span> <span class="token string">'item_three'</span><span class="token punctuation">,</span>        <span class="token string">'item_four'</span><span class="token punctuation">,</span> <span class="token string">'item_five'</span><span class="token punctuation">]</span></code></pre><h4 id="（二）字符串-String"><a href="#（二）字符串-String" class="headerlink" title="（二）字符串(String)"></a>（二）字符串(String)</h4><ul><li><strong>python中单引号和双引号使用完全相同。</strong></li><li><strong>使用三引号(‘’’ 或 “””)可以指定一个多行字符串。</strong></li><li>转义符 \。</li><li><strong>反斜杠可以用来转义，使用r可以让反斜杠不发生转义。。 如 r”this is a line with \n” 则\n会显示，并不是换行。</strong></li><li>按字面意义级联字符串，如”this “ “is “ “string”会被自动转换为this is string。</li><li><strong>字符串可以用 + 运算符连接在一起，用 * 运算符重复。</strong></li><li>Python 中的字符串有两种索引方式，从左往右以 0 开始，从右往左以 -1 开始。</li><li><strong>Python中的字符串不能改变。</strong></li><li>Python 没有单独的字符类型，一个字符就是长度为 1 的字符串。</li><li>字符串的截取的语法格式如下：<strong>变量[头下标:尾下标:步长]。</strong></li></ul><pre class=" language-python"><code class="language-python">paragraph <span class="token operator">=</span> <span class="token triple-quoted-string string">"""这是一个段落，可以由多行组成"""</span></code></pre><h4 id="（三）print-输出"><a href="#（三）print-输出" class="headerlink" title="（三）print 输出"></a>（三）print 输出</h4><p><strong>print</strong> 默认输出是换行的，如果要实现不换行需要在变量末尾加上 end=””。</p><h4 id="（四）Number（数字）"><a href="#（四）Number（数字）" class="headerlink" title="（四）Number（数字）"></a>（四）Number（数字）</h4><p>Python3 支持 <strong>int、float、bool、complex（复数）</strong>。</p><p>内置的 type(变量) 函数可以用来查询变量所指的对象类型，此外还可以用 isinstance (变量，类型)来判断。</p><p>isinstance 和 type 的区别在于：</p><ul><li>type()不会认为子类是一种父类类型。</li><li>isinstance()会认为子类是一种父类类型。</li></ul><p>Python3 中，bool 是 int 的子类，True 和 False 可以和数字相加 <strong>True==1，False==0</strong> 是会返回 <strong>Ture</strong>，但可以通过 is 来判断类型。</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token number">1</span> <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token boolean">False</span><span class="token operator">>></span><span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">is</span> <span class="token boolean">False</span><span class="token boolean">False</span></code></pre><p>您也可以使用del语句删除一些对象引用。</p><p>del语句的语法是：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">del</span> var1<span class="token punctuation">[</span><span class="token punctuation">,</span>var2<span class="token punctuation">[</span><span class="token punctuation">,</span>var3<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>varN<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><p>您可以通过使用del语句删除单个或多个对象。例如：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">del</span> var<span class="token keyword">del</span> var_a<span class="token punctuation">,</span> var_b</code></pre><h4 id="（五）数值运算"><a href="#（五）数值运算" class="headerlink" title="（五）数值运算"></a>（五）数值运算</h4><p><strong>注意：</strong></p><ul><li>1、Python可以同时为多个变量赋值，如a, b = 1, 2。</li><li>2、一个变量可以通过赋值指向不同类型的对象。</li><li><strong>3、数值的除法包含两个运算符：/ 返回一个浮点数，// 返回一个整数。</strong></li><li>4、在混合计算时，Python会把整型转换成为浮点数。</li></ul><h4 id="（六）Set（集合）"><a href="#（六）Set（集合）" class="headerlink" title="（六）Set（集合）"></a>（六）Set（集合）</h4><p>成员不可重复元素。</p><p>可以使用大括号 { } 或者 set() 函数创建集合，<strong>注意：创建一个空集合必须用 set() 而不是 { }，因为 { } 是用来创建一个空字典。</strong></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># set可以进行集合运算</span>a <span class="token operator">=</span> set<span class="token punctuation">(</span><span class="token string">'abracadabra'</span><span class="token punctuation">)</span>b <span class="token operator">=</span> set<span class="token punctuation">(</span><span class="token string">'alacazam'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">-</span> b<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># a 和 b 的差集</span><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">|</span> b<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># a 和 b 的并集</span><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">&amp;</span> b<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># a 和 b 的交集</span><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">^</span> b<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># a 和 b 中不同时存在的元素</span></code></pre><h4 id="七）Dictionary（字典）"><a href="#七）Dictionary（字典）" class="headerlink" title="(七）Dictionary（字典）"></a>(七）Dictionary（字典）</h4><p>字典是一种映射类型，字典用 { } 标识，它是一个无序的 <strong>键(key) : 值(value)</strong> 的集合。</p><p>键(key)必须使用不可变类型。</p><p>在同一个字典中，键(key)必须是唯一的。<br>构造函数 dict() 可以直接从键值对序列中构建字典如下：</p><pre class=" language-python"><code class="language-python">dict<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'Taobao'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#&amp;#123;'Runoob': 1, 'Google': 2, 'Taobao': 3&amp;#125;</span>dict<span class="token punctuation">(</span>Runoob<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> Google<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> Taobao<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#&amp;#123;'Runoob': 1, 'Google': 2, 'Taobao': 3&amp;#125;</span></code></pre><p><strong>注意：</strong></p><ul><li>1、字典是一种映射类型，它的元素是键值对。</li><li>2、字典的关键字必须为不可变类型，且不能重复。</li><li>3、创建空字典使用 **{ }**。</li></ul><h4 id="九）Python数据类型转换"><a href="#九）Python数据类型转换" class="headerlink" title="(九）Python数据类型转换"></a>(九）Python数据类型转换</h4><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>int(x [,base])</td><td>将x转换为一个整数</td></tr><tr><td>float(x)</td><td>将x转换到一个浮点数</td></tr><tr><td>complex(real [,imag])</td><td>创建一个复数</td></tr><tr><td>str(x)</td><td>将对象 x 转换为字符串</td></tr><tr><td>repr(x)</td><td>将对象 x 转换为表达式字符串</td></tr><tr><td>eval(str)</td><td>用来计算在字符串中的有效Python表达式,并返回一个对象</td></tr><tr><td>tuple(s)</td><td>将序列 s 转换为一个元组</td></tr><tr><td>list(s)</td><td>将序列 s 转换为一个列表</td></tr><tr><td>set(s)</td><td>转换为可变集合</td></tr><tr><td>dict(d)</td><td>创建一个字典。d 必须是一个 (key, value)元组序列。</td></tr><tr><td>frozenset(s)</td><td>转换为不可变集合</td></tr><tr><td>chr(x)</td><td>将一个整数转换为一个字符</td></tr><tr><td>ord(x)</td><td>将一个字符转换为它的整数值</td></tr><tr><td>hex(x)</td><td>将一个整数转换为一个十六进制字符串</td></tr><tr><td>oct(x)</td><td>将一个整数转换为一个八进制字符串</td></tr></tbody></table><h3 id="二、Python运算符"><a href="#二、Python运算符" class="headerlink" title="二、Python运算符"></a>二、Python运算符</h3><h4 id="（一）Python算术运算符"><a href="#（一）Python算术运算符" class="headerlink" title="（一）Python算术运算符"></a>（一）Python算术运算符</h4><p>以下假设变量 a=10，变量 b=21：</p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>+</td><td>加 - 两个对象相加</td><td>a + b 输出结果 31</td></tr><tr><td>-</td><td>减 - 得到负数或是一个数减去另一个数</td><td>a - b 输出结果 -11</td></tr><tr><td>*</td><td>乘 - 两个数相乘或是返回一个被重复若干次的字符串</td><td>a * b 输出结果 210</td></tr><tr><td>/</td><td>除 - x 除以 y</td><td>b / a 输出结果 2.1</td></tr><tr><td>%</td><td>取模 - 返回除法的余数</td><td>b % a 输出结果 1</td></tr><tr><td>**</td><td>幂 - 返回x的y次幂</td><td>a**b 为10的21次方</td></tr><tr><td>//</td><td>取整除 - 向下取接近商的整数</td><td>9//2=4        -9//2=-5</td></tr></tbody></table><h4 id="（二）Python比较运算符"><a href="#（二）Python比较运算符" class="headerlink" title="（二）Python比较运算符"></a>（二）Python比较运算符</h4><p>以下假设变量a为10，变量b为20：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">==</td><td align="left">等于 - 比较对象是否相等</td><td align="left">(a == b) 返回 False。</td></tr><tr><td align="left">!=</td><td align="left">不等于 - 比较两个对象是否不相等</td><td align="left">(a != b) 返回 True。</td></tr><tr><td align="left">&gt;</td><td align="left">大于 - 返回x是否大于y</td><td align="left">(a &gt; b) 返回 False。</td></tr><tr><td align="left">&lt;</td><td align="left">小于 - 返回x是否小于y。</td><td align="left">(a &lt; b) 返回 True。</td></tr><tr><td align="left">&gt;=</td><td align="left">大于等于 - 返回x是否大于等于y。</td><td align="left">(a &gt;= b) 返回 False。</td></tr><tr><td align="left">&lt;=</td><td align="left">小于等于 - 返回x是否小于等于y。</td><td align="left">(a &lt;= b) 返回 True。</td></tr></tbody></table><h4 id="（三）Python赋值运算符"><a href="#（三）Python赋值运算符" class="headerlink" title="（三）Python赋值运算符"></a>（三）Python赋值运算符</h4><p>以下假设变量a为10，变量b为20：</p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>=</td><td>简单的赋值运算符</td><td>c = a + b 将 a + b 的运算结果赋值为 c</td></tr><tr><td>+=</td><td>加法赋值运算符</td><td>c += a 等效于 c = c + a</td></tr><tr><td>-=</td><td>减法赋值运算符</td><td>c -= a 等效于 c = c - a</td></tr><tr><td>*=</td><td>乘法赋值运算符</td><td>c *= a 等效于 c = c * a</td></tr><tr><td>/=</td><td>除法赋值运算符</td><td>c /= a 等效于 c = c / a</td></tr><tr><td>%=</td><td>取模赋值运算符</td><td>c %= a 等效于 c = c % a</td></tr><tr><td>**=</td><td>幂赋值运算符</td><td>c **= a 等效于 c = c ** a</td></tr><tr><td>//=</td><td>取整除赋值运算符</td><td>c //= a 等效于 c = c // a</td></tr></tbody></table><h4 id="（四）Python位运算符"><a href="#（四）Python位运算符" class="headerlink" title="（四）Python位运算符"></a>（四）Python位运算符</h4><p>按位运算符是把数字看作二进制来进行计算的。Python中的按位运算法则如下：</p><p>下表中变量 a 为 60，b 为 13二进制格式如下：</p><pre class=" language-python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">0011</span> <span class="token number">1100</span>b <span class="token operator">=</span> <span class="token number">0000</span> <span class="token number">1101</span></code></pre><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>&amp;</td><td>按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0</td><td>(a &amp; b) 输出结果 12 ，二进制解释： 0000 1100</td></tr><tr><td>|</td><td>按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。</td><td>(a | b) 输出结果 61 ，二进制解释： 0011 1101</td></tr><tr><td>^</td><td>按位异或运算符：当两对应的二进位相异时，结果为1</td><td>(a ^ b) 输出结果 49 ，二进制解释： 0011 0001</td></tr><tr><td>~</td><td>按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1。~x 类似于 -x-1</td><td>(~a ) 输出结果 -61 ，二进制解释： 1100 0011， 在一个有符号二进制数的补码形式。</td></tr><tr><td>&lt;&lt;</td><td>左移动运算符：运算数的各二进位全部左移若干位，由”&lt;&lt;”右边的数指定移动的位数，高位丢弃，低位补0。</td><td>a &lt;&lt; 2 输出结果 240 ，二进制解释： 1111 0000</td></tr><tr><td>&gt;&gt;</td><td>右移动运算符：把”&gt;&gt;”左边的运算数的各二进位全部右移若干位，”&gt;&gt;”右边的数指定移动的位数</td><td>a &gt;&gt; 2 输出结果 15 ，二进制解释： 0000 1111</td></tr></tbody></table><h4 id="（五）Python逻辑运算符"><a href="#（五）Python逻辑运算符" class="headerlink" title="（五）Python逻辑运算符"></a>（五）Python逻辑运算符</h4><p>Python语言支持逻辑运算符，以下假设变量 a 为 10, b为 20:</p><table><thead><tr><th>运算符</th><th>逻辑表达式</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>and</td><td>x and y</td><td>布尔”与” - 如果 x 为 False，x and y 返回 x 的值，否则返回 y 的计算值。</td><td>(a and b) 返回 20。</td></tr><tr><td>or</td><td>x or y</td><td>布尔”或” - 如果 x 是 True，它返回 x 的值，否则它返回 y 的计算值。</td><td>(a or b) 返回 10。</td></tr><tr><td>not</td><td>not x</td><td>布尔”非” - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</td><td>not(a and b) 返回 False。</td></tr></tbody></table><h4 id="（六）Python成员运算符"><a href="#（六）Python成员运算符" class="headerlink" title="（六）Python成员运算符"></a>（六）Python成员运算符</h4><p>除了以上的一些运算符之外，Python还支持成员运算符，测试实例中包含了一系列的成员，包括字符串，列表或元组。</p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>in</td><td>如果在指定的序列中找到值返回 True，否则返回 False。</td><td>x 在 y 序列中 , 如果 x 在 y 序列中返回 True。</td></tr><tr><td>not in</td><td>如果在指定的序列中没有找到值返回 True，否则返回 False。</td><td>x 不在 y 序列中 , 如果 x 不在 y 序列中返回 True。</td></tr></tbody></table><h4 id="（七）Python身份运算符"><a href="#（七）Python身份运算符" class="headerlink" title="（七）Python身份运算符"></a>（七）Python身份运算符</h4><p>  身份运算符用于比较两个对象的存储单元</p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>is</td><td>is 是判断两个标识符是不是引用自一个对象</td><td>x is y, 类似 id(x) == id(y) , 如果引用的是同一个对象则返回 True，否则返回 False。</td></tr><tr><td>is not</td><td>is not 是判断两个标识符是不是引用自不同对象</td><td>x is not y ， 类似 id(a) != id(b)。如果引用的不是同一个对象则返回结果 True，否则返回 False。</td></tr></tbody></table><h3 id="三、数字-Number"><a href="#三、数字-Number" class="headerlink" title="三、数字(Number)"></a>三、数字(Number)</h3><h4 id="（一）数学函数"><a href="#（一）数学函数" class="headerlink" title="（一）数学函数"></a>（一）数学函数</h4><table><thead><tr><th>函数</th><th>返回值 ( 描述 )</th></tr></thead><tbody><tr><td>abs(x)</td><td>返回数字的绝对值，如abs(-10) 返回 10。</td></tr><tr><td>ceil(x)</td><td>返回数字的上入整数，如math.ceil(4.1) 返回 5。</td></tr><tr><td>cmp(x, y)</td><td>如果 x &lt; y 返回 -1, 如果 x == y 返回 0, 如果 x &gt; y 返回 1。 Python 3 已废弃，使用 (x&gt;y)-(x&lt;y) 替换。</td></tr><tr><td>exp(x)</td><td>返回e的x次幂(e^x),如math.exp(1) 返回2.718281828459045。</td></tr><tr><td>fabs(x)</td><td>返回数字的绝对值，如math.fabs(-10) 返回10.0。</td></tr><tr><td>floor(x)</td><td>返回数字的下舍整数，如math.floor(4.9)返回 4。</td></tr><tr><td>log(x)</td><td>如math.log(math.e)返回1.0，math.log(100,10)返回2.0。</td></tr><tr><td>log10(x)</td><td>返回以10为基数的x的对数，如math.log10(100)返回 2.0。</td></tr><tr><td>max(x1, x2,…)</td><td>返回给定参数的最大值，参数可以为序列。</td></tr><tr><td>min(x1, x2,…)</td><td>返回给定参数的最小值，参数可以为序列。</td></tr><tr><td>modf(x)</td><td>返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。</td></tr><tr><td>pow(x, y)</td><td>x^y 运算后的值。</td></tr><tr><td>round(x [,n])</td><td>返回浮点数 x 的四舍五入值，如给出 n 值，则代表舍入到小数点后的位数。 其实准确的说是保留值将保留到离上一位更近的一端。</td></tr><tr><td>sqrt(x)</td><td>返回数字x的平方根。</td></tr></tbody></table><h4 id="（二）随机数函数"><a href="#（二）随机数函数" class="headerlink" title="（二）随机数函数"></a>（二）随机数函数</h4><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>choice(seq)</td><td>从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。</td></tr><tr><td>randrange ([start,] stop [,step])</td><td>从指定范围内，按指定基数递增的集合中获取一个随机数，基数默认值为 1。</td></tr><tr><td>random()</td><td>随机生成下一个实数，它在[0,1)范围内。</td></tr><tr><td>seed([x])</td><td>改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，Python会帮你选择seed。</td></tr><tr><td>shuffle(list)</td><td>将序列的所有元素随机排序。</td></tr><tr><td>uniform(x, y)</td><td>随机生成下一个实数，它在[x,y]范围内。</td></tr></tbody></table><h4 id="（三）三角函数"><a href="#（三）三角函数" class="headerlink" title="（三）三角函数"></a>（三）三角函数</h4><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>acos(x)</td><td>返回x的反余弦弧度值。</td></tr><tr><td>asin(x)</td><td>返回x的反正弦弧度值。</td></tr><tr><td>atan(x)</td><td>返回x的反正切弧度值。</td></tr><tr><td>atan2(y, x)</td><td>返回给定的 X 及 Y 坐标值的反正切值。</td></tr><tr><td>cos(x)</td><td>返回x的弧度的余弦值。</td></tr><tr><td>hypot(x, y)</td><td>返回欧几里德范数 sqrt(x*x + y*y)。</td></tr><tr><td>sin(x)</td><td>返回的x弧度的正弦值。</td></tr><tr><td>tan(x)</td><td>返回x弧度的正切值。</td></tr><tr><td>degrees(x)</td><td>将弧度转换为角度,如degrees(math.pi/2) ，  返回90.0。</td></tr><tr><td>radians(x)</td><td>将角度转换为弧度。</td></tr></tbody></table><h4 id="（四）数学常量"><a href="#（四）数学常量" class="headerlink" title="（四）数学常量"></a>（四）数学常量</h4><table><thead><tr><th>常量</th><th>描述</th></tr></thead><tbody><tr><td>pi</td><td>数学常量 pi（圆周率，一般以π来表示）。</td></tr><tr><td>e</td><td>数学常量 e，e即自然常数（自然常数）。</td></tr></tbody></table><h3 id="四、字符串"><a href="#四、字符串" class="headerlink" title="四、字符串"></a>四、字符串</h3><h4 id="（一）Python-字符串格式化"><a href="#（一）Python-字符串格式化" class="headerlink" title="（一）Python 字符串格式化"></a>（一）Python 字符串格式化</h4><p>Python 支持格式化字符串的输出 。尽管这样可能会用到非常复杂的表达式，但最基本的用法是将一个值插入到一个有字符串格式符 %s 的字符串中。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"我叫 %s 今年 %d 岁!"</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token string">'小明'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>python字符串格式化符号：</p><table><thead><tr><th>符  号</th><th>描述</th></tr></thead><tbody><tr><td>%c</td><td>格式化字符及其ASCII码</td></tr><tr><td>%s</td><td>格式化字符串</td></tr><tr><td>%d</td><td>格式化整数</td></tr><tr><td>%u</td><td>格式化无符号整型</td></tr><tr><td>%o</td><td>格式化无符号八进制数</td></tr><tr><td>%x</td><td>格式化无符号十六进制数</td></tr><tr><td>%X</td><td>格式化无符号十六进制数（大写）</td></tr><tr><td>%f</td><td>格式化浮点数字，可指定小数点后的精度</td></tr><tr><td>%e</td><td>用科学计数法格式化浮点数</td></tr><tr><td>%E</td><td>作用同%e，用科学计数法格式化浮点数</td></tr><tr><td>%g</td><td>%f和%e的简写</td></tr><tr><td>%G</td><td>%f 和 %E 的简写</td></tr><tr><td>%p</td><td>用十六进制数格式化变量的地址</td></tr></tbody></table><p>格式化操作符辅助指令:</p><table><thead><tr><th>符号</th><th>功能</th></tr></thead><tbody><tr><td>*</td><td>定义宽度或者小数点精度</td></tr><tr><td>-</td><td>用做左对齐</td></tr><tr><td>+</td><td>在正数前面显示加号( + )</td></tr><tr><td><sp></td><td>在正数前面显示空格</td></tr><tr><td>#</td><td>在八进制数前面显示零(‘0’)，在十六进制前面显示’0x’或者’0X’(取决于用的是’x’还是’X’)</td></tr><tr><td>0</td><td>显示的数字前面填充’0’而不是默认的空格</td></tr><tr><td>%</td><td>‘%%’输出一个单一的’%’</td></tr><tr><td>(var)</td><td>映射变量(字典参数)</td></tr><tr><td>m.n.</td><td>m 是显示的最小总宽度,n 是小数点后的位数(如果可用的话)</td></tr></tbody></table><h4 id="（二）Python-的字符串内建函数"><a href="#（二）Python-的字符串内建函数" class="headerlink" title="（二）Python 的字符串内建函数"></a>（二）Python 的字符串内建函数</h4><p><a href="https://www.runoob.com/python3/python3-string.html">Python 的字符串常用函数</a></p><h4 id="（三）Python-format-格式化函数"><a href="#（三）Python-format-格式化函数" class="headerlink" title="（三）Python format 格式化函数"></a>（三）Python format 格式化函数</h4><p>基本语法是通过 {} 和 : 来代替以前的 % 。</p><p>format 函数可以接受不限个参数，位置可以不按顺序。</p><pre class=" language-python"><code class="language-python"><span class="token string">"&amp;#123;&amp;#125; &amp;#123;&amp;#125;"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">,</span> <span class="token string">"world"</span><span class="token punctuation">)</span>    # 不设置指定位置，按默认顺序 <span class="token string">'hello world'</span>  <span class="token string">"&amp;#123;0&amp;#125; &amp;#123;1&amp;#125;"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">,</span> <span class="token string">"world"</span><span class="token punctuation">)</span>  # 设置指定位置 <span class="token string">'hello world'</span> <span class="token string">"&amp;#123;1&amp;#125; &amp;#123;0&amp;#125; &amp;#123;1&amp;#125;"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">,</span> <span class="token string">"world"</span><span class="token punctuation">)</span>  # 设置指定位置 'world hello world</code></pre><p>也可以设置参数：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"网站名：&amp;#123;name&amp;#125;, 地址 &amp;#123;url&amp;#125;"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"菜鸟教程"</span><span class="token punctuation">,</span> url<span class="token operator">=</span><span class="token string">"www.runoob.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#通过字典设置参数 </span>site <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;"name": "菜鸟教程", "url": "www.runoob.com"&amp;#125; </span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"网站名：&amp;#123;name&amp;#125;, 地址 &amp;#123;url&amp;#125;"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token operator">**</span>site<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 通过列表索引设置参数</span>my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'菜鸟教程'</span><span class="token punctuation">,</span> <span class="token string">'www.runoob.com'</span><span class="token punctuation">]</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"网站名：&amp;#123;0[0]&amp;#125;, 地址 &amp;#123;0[1]&amp;#125;"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>my_list<span class="token punctuation">)</span><span class="token punctuation">)</span>  # <span class="token string">"0"</span> 是必须的</code></pre><p>也可以向 str.format() 传入对象：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">AssignValue</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>value <span class="token operator">=</span> value         my_value <span class="token operator">=</span> AssignValue<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'value 为: &amp;#123;0.value&amp;#125;'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>my_value<span class="token punctuation">)</span><span class="token punctuation">)</span>  # <span class="token string">"0"</span> 是可选</code></pre><p>输出结果为：</p><pre><code>value 为: 6</code></pre><p>数字格式化：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&amp;#123;:.2f&amp;#125;"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token number">3.1415926</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><table><thead><tr><th>数字</th><th>格式</th><th>输出</th><th>描述</th></tr></thead><tbody><tr><td>3.1415926</td><td>{:.2f}</td><td>3.14</td><td>保留小数点后两位</td></tr><tr><td>3.1415926</td><td>{:+.2f}</td><td>+3.14</td><td>带符号保留小数点后两位</td></tr><tr><td>-1</td><td>{:+.2f}</td><td>-1.00</td><td>带符号保留小数点后两位</td></tr><tr><td>2.71828</td><td>{:.0f}</td><td>3</td><td>不带小数</td></tr><tr><td>5</td><td>{:0&gt;2d}</td><td>05</td><td>数字补零 (填充左边, 宽度为2)</td></tr><tr><td>5</td><td>{:x&lt;4d}</td><td>5xxx</td><td>数字补x (填充右边, 宽度为4)</td></tr><tr><td>10</td><td>{:x&lt;4d}</td><td>10xx</td><td>数字补x (填充右边, 宽度为4)</td></tr><tr><td>1000000</td><td>{:,}</td><td>1,000,000</td><td>以逗号分隔的数字格式</td></tr><tr><td>0.25</td><td>{:.2%}</td><td>25.00%</td><td>百分比格式</td></tr><tr><td>1000000000</td><td>{:.2e}</td><td>1.00e+09</td><td>指数记法</td></tr><tr><td>13</td><td>{:&gt;10d}</td><td>13</td><td>右对齐 (默认, 宽度为10)</td></tr><tr><td>13</td><td>{:&lt;10d}</td><td>13</td><td>左对齐 (宽度为10)</td></tr><tr><td>13</td><td>{:^10d}</td><td>13</td><td>中间对齐 (宽度为10)</td></tr><tr><td>11</td><td>‘{:b}’.format(11);’{:d}’.format(11);’{:o}’.format(11); ‘{:x}’.format(11);’{:#x}’.format(11);’{:#X}’.format(11)</td><td>1011;11; 13;b;0xb 0xB</td><td>进制</td></tr></tbody></table><p>^, &lt;, &gt; 分别是居中、左对齐、右对齐，后面带宽度，: 号后面带填充的字符，只能是一个字符，不指定则默认是用空格填充。</p><p>+ 表示在正数前显示 +，负数前显示 -；’ ‘（空格）表示在正数前加空格</p><p>b、d、o、x 分别是二进制、十进制、八进制、十六进制。</p><p>此外我们可以使用大括号 {} 来转义大括号，如下实例：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"&amp;#123;&amp;#125; 对应的位置是 &amp;#123;&amp;#123;0&amp;#125;&amp;#125;"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token string">"runoob"</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre><code>runoob 对应的位置是 &#123;0&#125;</code></pre><h3 id="五、列表、元组、集合、字典"><a href="#五、列表、元组、集合、字典" class="headerlink" title="五、列表、元组、集合、字典"></a>五、列表、元组、集合、字典</h3><h4 id="（一）列表"><a href="#（一）列表" class="headerlink" title="（一）列表"></a>（一）列表</h4><p><a href="https://www.runoob.com/python3/python3-list.html">https://www.runoob.com/python3/python3-list.html</a></p><ul><li><strong>将列表当做堆栈使用</strong></li></ul><p>列表方法使得列表可以很方便的作为一个堆栈来使用，堆栈作为特定的数据结构，最先进入的元素最后一个被释放（后进先出）。用 append() 方法可以把一个元素添加到堆栈顶。用不指定索引的 pop() 方法可以把一个元素从堆栈顶释放出来。 </p><pre class=" language-python"><code class="language-python">stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>stack<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>stack<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#stack：[3, 4, 5, 6, 7]</span>stack<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#返回7</span><span class="token comment" spellcheck="true">#stack：[3, 4, 5, 6]</span></code></pre><ul><li><strong>将列表当作队列使用</strong></li></ul><p>也可以把列表当做队列用，只是在队列里第一加入的元素，第一个取出来；但是拿列表用作这样的目的效率不高。在列表的最后添加或者弹出元素速度快，然而在列表里插入或者从头部弹出速度却不快（因为所有其他的元素都得一个一个地移动）。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> collections <span class="token keyword">import</span> dequequeue <span class="token operator">=</span> deque<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"Eric"</span><span class="token punctuation">,</span> <span class="token string">"John"</span><span class="token punctuation">,</span> <span class="token string">"Michael"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>queue<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"Terry"</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># Terry arrives</span>queue<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"Graham"</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># Graham arrives</span>queue<span class="token punctuation">.</span>popleft<span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token comment" spellcheck="true"># The first to arrive now leaves</span><span class="token comment" spellcheck="true">#返回'Eric'</span>queue<span class="token punctuation">.</span>popleft<span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token comment" spellcheck="true"># The second to arrive now leaves</span><span class="token comment" spellcheck="true">#返回'John'</span><span class="token comment" spellcheck="true">#queue:deque(['Michael', 'Terry', 'Graham']</span></code></pre><h4 id="（二）元组"><a href="#（二）元组" class="headerlink" title="（二）元组"></a>（二）元组</h4><p><a href="https://www.runoob.com/python3/python3-tuple.html">https://www.runoob.com/python3/python3-tuple.html</a></p><h4 id="（三）集合"><a href="#（三）集合" class="headerlink" title="（三）集合"></a>（三）集合</h4><p><a href="https://www.runoob.com/python3/python3-set.html">https://www.runoob.com/python3/python3-set.html</a></p><h4 id="（四）字典"><a href="#（四）字典" class="headerlink" title="（四）字典"></a>（四）字典</h4><p><a href="https://www.runoob.com/python3/python3-dictionary.html">https://www.runoob.com/python3/python3-dictionary.html</a></p><h3 id="六、条件控制与循环"><a href="#六、条件控制与循环" class="headerlink" title="六、条件控制与循环"></a>六、条件控制与循环</h3><h4 id="（一）条件控制"><a href="#（一）条件控制" class="headerlink" title="（一）条件控制"></a>（一）条件控制</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">if</span> 表达式<span class="token number">1</span><span class="token punctuation">:</span>    语句    <span class="token keyword">if</span> 表达式<span class="token number">2</span><span class="token punctuation">:</span>        语句    <span class="token keyword">elif</span> 表达式<span class="token number">3</span><span class="token punctuation">:</span>        语句    <span class="token keyword">else</span><span class="token punctuation">:</span>        语句<span class="token keyword">elif</span> 表达式<span class="token number">4</span><span class="token punctuation">:</span>    语句<span class="token keyword">else</span><span class="token punctuation">:</span>    语句</code></pre><h4 id="（二）循环"><a href="#（二）循环" class="headerlink" title="（二）循环"></a>（二）循环</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">while</span> <span class="token operator">&lt;</span>expr<span class="token operator">></span><span class="token punctuation">:</span>    <span class="token operator">&lt;</span>statement<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">></span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token operator">&lt;</span>additional_statement<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">></span></code></pre><pre class=" language-python"><code class="language-python"><span class="token keyword">for</span> <span class="token operator">&lt;</span>variable<span class="token operator">></span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>sequence<span class="token operator">></span><span class="token punctuation">:</span>    <span class="token operator">&lt;</span>statements<span class="token operator">></span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token operator">&lt;</span>statements<span class="token operator">></span><span class="token comment" spellcheck="true">#range(n):[0,...,n-1]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><h3 id="七、迭代器与生成器"><a href="#七、迭代器与生成器" class="headerlink" title="七、迭代器与生成器"></a>七、迭代器与生成器</h3><h4 id="（一）迭代器"><a href="#（一）迭代器" class="headerlink" title="（一）迭代器"></a>（一）迭代器</h4><pre class=" language-python"><code class="language-python">list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>it <span class="token operator">=</span> iter<span class="token punctuation">(</span>list<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 创建迭代器对象</span><span class="token keyword">for</span> x <span class="token keyword">in</span> it<span class="token punctuation">:</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#或使用next()函数，StopIteration 异常用于标识迭代的完成，防止出现无限循环的情况</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token punctuation">(</span>next<span class="token punctuation">(</span>it<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> StopIteration<span class="token punctuation">:</span>        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="（二）生成器"><a href="#（二）生成器" class="headerlink" title="（二）生成器"></a>（二）生成器</h4><p>在 Python 中，使用了 yield 的函数被称为生成器（generator）。</p><p>跟普通函数不同的是，生成器是一个返回迭代器的函数，只能用于迭代操作，更简单点理解生成器就是一个迭代器。</p><p>在调用生成器运行的过程中，每次遇到 yield 时函数会暂停并保存当前所有的运行信息，返回 yield 的值, 并在下一次执行 next() 方法时从当前位置继续运行。</p><p>调用一个生成器函数，返回的是一个迭代器对象。</p><p>以下实例使用 yield 实现斐波那契数列：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 生成器函数 - 斐波那契</span>    a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>counter <span class="token operator">></span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>             <span class="token keyword">return</span>        <span class="token keyword">yield</span> a        a<span class="token punctuation">,</span> b <span class="token operator">=</span> b<span class="token punctuation">,</span> a <span class="token operator">+</span> b        counter <span class="token operator">+=</span> <span class="token number">1</span>f <span class="token operator">=</span> fibonacci<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># f 是一个迭代器，由生成器返回生成</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token punctuation">(</span>next<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> StopIteration<span class="token punctuation">:</span>        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="八、函数"><a href="#八、函数" class="headerlink" title="八、函数"></a>八、函数</h3><h4 id="（一）定义一个函数"><a href="#（一）定义一个函数" class="headerlink" title="（一）定义一个函数"></a>（一）定义一个函数</h4><ul><li>函数代码块以 <strong>def</strong> 关键词开头，后接函数标识符名称和圆括号 ()。</li><li>任何传入参数和自变量必须放在圆括号中间，圆括号之间可以用于定义参数。</li><li>函数的第一行语句可以选择性地使用文档字符串—用于存放函数说明。</li><li>函数内容以冒号 : 起始，并且缩进。</li><li><strong>return [表达式]</strong> 结束函数，选择性地返回一个值给调用方，不带表达式的 return 相当于返回 None。</li></ul><h4 id="（二）参数传递"><a href="#（二）参数传递" class="headerlink" title="（二）参数传递"></a>（二）参数传递</h4><p>在 python 中，类型属于对象，变量是没有类型的：</p><pre class=" language-python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>a<span class="token operator">=</span><span class="token string">"Runoob"</span></code></pre><p>以上代码中，[1,2,3] 是 List 类型，”Runoob” 是 String 类型，而变量 a 是没有类型，她仅仅是一个对象的引用（一个指针），可以是指向 List 类型对象，也可以是指向 String 类型对象。</p><p><strong>可更改(mutable)与不可更改(immutable)对象：</strong></p><p>在 python 中，strings, tuples, 和 numbers 是不可更改的对象，而 list,dict 等则是可以修改的对象。</p><ul><li><strong>不可变类型：</strong>变量赋值 <strong>a=5</strong> 后再赋值 <strong>a=10</strong>，这里实际是新生成一个 int 值对象 10，再让 a 指向它，而 5 被丢弃，不是改变 a 的值，相当于新生成了 a。</li><li><strong>可变类型：</strong>变量赋值 <strong>la=[1,2,3,4]</strong> 后再赋值 <strong>la[2]=5</strong> 则是将 list la 的第三个元素值更改，本身la没有动，只是其内部的一部分值被修改了。</li></ul><p>python 函数的参数传递：</p><ul><li><strong>不可变类型：</strong>类似 C++ 的值传递，如整数、字符串、元组。如 fun(a)，传递的只是 a 的值，没有影响 a 对象本身。如果在 fun(a) 内部修改 a 的值，则是新生成一个 a 的对象。</li><li><strong>可变类型：</strong>类似 C++ 的引用传递，如 列表，字典。如 fun(la)，则是将 la 真正的传过去，修改后 fun 外部的 la 也会受影响</li></ul><p>python 中一切都是对象，严格意义我们不能说值传递还是引用传递，我们应该说传不可变对象和传可变对象。</p><h4 id="（三）参数"><a href="#（三）参数" class="headerlink" title="（三）参数"></a>（三）参数</h4><ol><li><p>必需参数：必需参数须以正确的顺序传入函数。调用时的数量必须和声明时的一样。</p></li><li><p>关键字参数：关键字参数和函数调用关系紧密，函数调用使用关键字参数来确定传入的参数值。</p></li></ol><p>使用关键字参数允许函数调用时参数的顺序与声明时不一致，因为 Python 解释器能够用参数名匹配参数值。</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#可写函数说明</span><span class="token keyword">def</span> <span class="token function">printinfo</span><span class="token punctuation">(</span> name<span class="token punctuation">,</span> age <span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token string">"打印任何传入的字符串"</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"名字: "</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"年龄: "</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span>   <span class="token keyword">return</span><span class="token comment" spellcheck="true">#调用printinfo函数</span>printinfo<span class="token punctuation">(</span> age<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">"runoob"</span> <span class="token punctuation">)</span></code></pre><ol start="3"><li>默认参数：调用函数时，如果没有传递参数，则会使用默认参数。</li></ol><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#可写函数说明</span><span class="token keyword">def</span> <span class="token function">printinfo</span><span class="token punctuation">(</span> name<span class="token punctuation">,</span> age <span class="token operator">=</span> <span class="token number">35</span> <span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token string">"打印任何传入的字符串"</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"名字: "</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"年龄: "</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span>   <span class="token keyword">return</span><span class="token comment" spellcheck="true">#调用printinfo函数</span>printinfo<span class="token punctuation">(</span> age<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">"runoob"</span> <span class="token punctuation">)</span>printinfo<span class="token punctuation">(</span> name<span class="token operator">=</span><span class="token string">"runoob"</span> <span class="token punctuation">)</span></code></pre><ol start="4"><li>不定长参数：</li></ol><ul><li>加了星号 * 的参数会以元组(tuple)的形式导入，存放所有未命名的变量参数。</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">functionname</span><span class="token punctuation">(</span><span class="token punctuation">[</span>formal_args<span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token operator">*</span>var_args_tuple <span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token string">"函数_文档字符串"</span>   function_suite   <span class="token keyword">return</span> <span class="token punctuation">[</span>expression<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 可写函数说明</span><span class="token keyword">def</span> <span class="token function">printinfo</span><span class="token punctuation">(</span> arg1<span class="token punctuation">,</span> <span class="token operator">*</span>vartuple <span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token string">"打印任何传入的参数"</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"输出: "</span><span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span>arg1<span class="token punctuation">)</span>   <span class="token keyword">for</span> var <span class="token keyword">in</span> vartuple<span class="token punctuation">:</span>      <span class="token keyword">print</span> <span class="token punctuation">(</span>var<span class="token punctuation">)</span>   <span class="token keyword">return</span><span class="token comment" spellcheck="true"># 调用printinfo 函数</span>printinfo<span class="token punctuation">(</span> <span class="token number">10</span> <span class="token punctuation">)</span>printinfo<span class="token punctuation">(</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">50</span> <span class="token punctuation">)</span></code></pre><ul><li>加了两个星号 ** 的参数会以字典的形式导入。</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">functionname</span><span class="token punctuation">(</span><span class="token punctuation">[</span>formal_args<span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token operator">**</span>var_args_dict <span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token string">"函数_文档字符串"</span>   function_suite   <span class="token keyword">return</span> <span class="token punctuation">[</span>expression<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 可写函数说明</span><span class="token keyword">def</span> <span class="token function">printinfo</span><span class="token punctuation">(</span> arg1<span class="token punctuation">,</span> <span class="token operator">**</span>vardict <span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token string">"打印任何传入的参数"</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"输出: "</span><span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span>arg1<span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span>vardict<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 调用printinfo 函数</span>printinfo<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> a<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span></code></pre><ul><li>声明函数时，参数中星号 * 可以单独出现，如果单独出现星号 * 后的参数必须用关键字传入。</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> a<span class="token operator">+</span>b<span class="token operator">+</span>cf<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 报错</span>f<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>c<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 正常</span></code></pre><h4 id="（四）匿名函数"><a href="#（四）匿名函数" class="headerlink" title="（四）匿名函数"></a>（四）匿名函数</h4><p>python 使用 lambda 来创建匿名函数。</p><p>所谓匿名，意即不再使用 def 语句这样标准的形式定义一个函数。</p><ul><li>lambda 只是一个表达式，函数体比 def 简单很多。</li><li>lambda的主体是一个表达式，而不是一个代码块。仅仅能在lambda表达式中封装有限的逻辑进去。</li><li>lambda 函数拥有自己的命名空间，且不能访问自己参数列表之外或全局命名空间里的参数。</li><li>虽然lambda函数看起来只能写一行，却不等同于C或C++的内联函数，后者的目的是调用小函数时不占用栈内存从而增加运行效率。</li></ul><p>lambda 函数的语法只包含一个语句，如下：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">lambda</span> <span class="token punctuation">[</span>arg1 <span class="token punctuation">[</span><span class="token punctuation">,</span>arg2<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>argn<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>expression<span class="token comment" spellcheck="true"># 可写函数说明</span>sum <span class="token operator">=</span> <span class="token keyword">lambda</span> arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">:</span> arg1 <span class="token operator">+</span> arg2<span class="token comment" spellcheck="true"># 调用sum函数</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"相加后的值为 : "</span><span class="token punctuation">,</span> sum<span class="token punctuation">(</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"相加后的值为 : "</span><span class="token punctuation">,</span> sum<span class="token punctuation">(</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span> <span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h3 id="九、输入输出"><a href="#九、输入输出" class="headerlink" title="九、输入输出"></a>九、输入输出</h3><p><a href="https://www.runoob.com/python3/python3-inputoutput.html">https://www.runoob.com/python3/python3-inputoutput.html</a></p><h4 id="（一）读取键盘输入"><a href="#（一）读取键盘输入" class="headerlink" title="（一）读取键盘输入"></a>（一）读取键盘输入</h4><p>Python 提供了 input() 内置函数从标准输入读入一行文本，默认的标准输入是键盘。</p><pre class=" language-python"><code class="language-python"> str <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入："</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"你输入的内容是: "</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span></code></pre><h4 id="（二）读和写文件"><a href="#（二）读和写文件" class="headerlink" title="（二）读和写文件"></a>（二）读和写文件</h4><p>1、open() ：将会返回一个 file 对象，基本语法格式如下: </p><pre><code>open(filename, mode)</code></pre><ul><li>filename：包含了你要访问的文件名称的字符串值。</li><li>mode：决定了打开文件的模式：只读，写入，追加等。所有可取值见如下的完全列表。这个参数是非强制的，默认文件访问模式为只读(r)。</li></ul><table><thead><tr><th>模式</th><th>描述</th></tr></thead><tbody><tr><td><strong>r</strong></td><td>以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td></tr><tr><td>rb</td><td>以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。</td></tr><tr><td>r+</td><td>打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr><tr><td>rb+</td><td>以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr><tr><td><strong>w</strong></td><td>打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr><tr><td>wb</td><td>以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr><tr><td>w+</td><td>打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr><tr><td>wb+</td><td>以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr><tr><td>a</td><td>打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr><tr><td>ab</td><td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr><tr><td>a+</td><td>打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td></tr><tr><td>ab+</td><td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td></tr></tbody></table><table><thead><tr><th align="center">模式</th><th align="center">r</th><th align="center">r+</th><th align="center">w</th><th align="center">w+</th><th align="center">a</th><th align="center">a+</th></tr></thead><tbody><tr><td align="center">读</td><td align="center">+</td><td align="center">+</td><td align="center"></td><td align="center">+</td><td align="center"></td><td align="center">+</td></tr><tr><td align="center">写</td><td align="center"></td><td align="center">+</td><td align="center">+</td><td align="center">+</td><td align="center">+</td><td align="center">+</td></tr><tr><td align="center">创建</td><td align="center"></td><td align="center"></td><td align="center">+</td><td align="center">+</td><td align="center">+</td><td align="center">+</td></tr><tr><td align="center">覆盖</td><td align="center"></td><td align="center"></td><td align="center">+</td><td align="center">+</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">指针在开始</td><td align="center">+</td><td align="center">+</td><td align="center">+</td><td align="center">+</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">指针在结尾</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">+</td><td align="center">+</td></tr></tbody></table><p>2、f.read()：为了读取一个文件的内容，调用 f.read(size), 这将读取一定数目的数据, 然后作为字符串或字节对象返回。size 是一个可选的数字类型的参数。 当 size 被忽略了或者为负, 那么该文件的所有内容都将被读取并且返回。</p><p>3、f.readline()：f.readline() 会从文件中读取单独的一行。换行符为 ‘\n’。f.readline() 如果返回一个空字符串, 说明已经已经读取到最后一行。</p><p>4、f.readlines()：f.readlines() 将返回该文件中包含的所有行（以字符串列表的形式返回）。如果设置可选参数 sizehint, 则读取指定长度的字节, 并且将这些字节按行分割。</p><p>另：</p><pre class=" language-python"><code class="language-python">f <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"/tmp/foo.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>5、f.write()：f.write(string) 将 string 写入到文件中, 然后返回写入的字符数。</p><p>6、f.tell()：f.tell() 返回文件对象当前所处的位置, 它是从文件开头开始算起的字节数。</p><p>7、f.seek()：如果要改变文件当前的位置, 可以使用 f.seek(offset, from_what) 函数。from_what 的值, 如果是 0 表示开头, 如果是 1 表示当前位置, 2 表示文件的结尾，例如：</p><ul><li>seek(x,0) ： 从起始位置即文件首行首字符开始移动 x 个字符</li><li>seek(x,1) ： 表示从当前位置往后移动x个字符</li><li>seek(-x,2)：表示从文件的结尾往前移动x个字符</li></ul><p>from_what 值为默认为0，即文件开头。</p><h3 id="十、文件及目录方法"><a href="#十、文件及目录方法" class="headerlink" title="十、文件及目录方法"></a>十、文件及目录方法</h3><p><a href="https://www.runoob.com/python3/python3-file-methods.html">文件方法</a></p><p>[OS文件及目录方法](<a href="https://www.runoob.com/python3/python3-os-file-methods.html">https://www.runoob.com/python3/python3-os-file-methods.html</a></p><h3 id="十一、异常"><a href="#十一、异常" class="headerlink" title="十一、异常"></a>十一、异常</h3><h4 id="（一）异常处理"><a href="#（一）异常处理" class="headerlink" title="（一）异常处理"></a>（一）异常处理</h4><p>异常捕捉可以使用 try/except 语句。</p><p>try 语句按照如下方式工作；</p><ul><li>首先，执行 try 子句（在关键字 try 和关键字 except 之间的语句）。</li><li>如果没有异常发生，忽略 except 子句，try 子句执行后结束。</li><li>如果在执行 try 子句的过程中发生了异常，那么 try 子句余下的部分将被忽略。如果异常的类型和 except 之后的名称相符，那么对应的 except 子句将被执行。</li><li>如果一个异常没有与任何的 except  匹配，那么这个异常将会传递给上层的 try 中。</li></ul><p>一个 try 语句可能包含多个except子句，分别来处理不同的特定的异常。最多只有一个分支会被执行。一个except子句可以同时处理多个异常，这些异常将被放在一个括号里成为一个元组。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">except</span> <span class="token punctuation">(</span>RuntimeError<span class="token punctuation">,</span> TypeError<span class="token punctuation">,</span> NameError<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2019/07/try_except_else_finally.png"></p><pre class=" language-python"><code class="language-python"><span class="token keyword">try</span><span class="token punctuation">:</span>    runoob<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">except</span> AssertionError <span class="token keyword">as</span> error<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'file.log'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">:</span>            read_data <span class="token operator">=</span> file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> FileNotFoundError <span class="token keyword">as</span> fnf_error<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>fnf_error<span class="token punctuation">)</span><span class="token keyword">finally</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'这句话，无论异常是否发生都会执行。'</span></code></pre><h4 id="（二）抛出异常"><a href="#（二）抛出异常" class="headerlink" title="（二）抛出异常"></a>（二）抛出异常</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">raise</span> <span class="token punctuation">[</span>Exception <span class="token punctuation">[</span><span class="token punctuation">,</span> args <span class="token punctuation">[</span><span class="token punctuation">,</span> traceback<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><h4 id="（三）用户自定义异常"><a href="#（三）用户自定义异常" class="headerlink" title="（三）用户自定义异常"></a>（三）用户自定义异常</h4><p>你可以通过创建一个新的异常类来拥有自己的异常。异常类继承自 Exception 类，可以直接继承，或者间接继承。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">MyError</span><span class="token punctuation">(</span>Exception<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>value <span class="token operator">=</span> value        <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> repr<span class="token punctuation">(</span>self<span class="token punctuation">.</span>value<span class="token punctuation">)</span></code></pre><h3 id="十二、面向对象"><a href="#十二、面向对象" class="headerlink" title="十二、面向对象"></a>十二、面向对象</h3><p><a href="https://www.runoob.com/python3/python3-class.html">https://www.runoob.com/python3/python3-class.html</a></p><p>私有属性、方法；继承（多继承）；方法重写</p><h3 id="十三、日期和时间"><a href="#十三、日期和时间" class="headerlink" title="十三、日期和时间"></a>十三、日期和时间</h3><p><a href="https://www.runoob.com/python3/python3-date-time.html">https://www.runoob.com/python3/python3-date-time.html</a></p><p>常用时间处理方法</p><ul><li>今天 <code>today = datetime.date.today()</code></li><li>昨天 <code>yesterday = today - datetime.timedelta(days=1)</code></li><li>上个月 <code>last_month = today.month - 1 if today.month - 1 else 12</code></li><li>当前时间戳  <code>time_stamp = time.time()</code></li><li>时间戳转datetime <code>datetime.datetime.fromtimestamp(time_stamp)</code></li><li>datetime转时间戳 <code>int(time.mktime(today.timetuple()))</code></li><li>datetime转字符串 <code>today_str = today.strftime(&quot;%Y-%m-%d&quot;)</code></li><li>字符串转datetime <code>today = datetime.datetime.strptime(today_str, &quot;%Y-%m-%d&quot;)</code></li><li>补时差 <code>today + datetime.timedelta(hours=8)</code></li></ul><h3 id="十四、实例"><a href="#十四、实例" class="headerlink" title="十四、实例"></a>十四、实例</h3><p><a href="https://www.runoob.com/python3/python3-examples.html">https://www.runoob.com/python3/python3-examples.html</a></p><h3 id="十五、正则表达式"><a href="#十五、正则表达式" class="headerlink" title="十五、正则表达式"></a>十五、正则表达式</h3><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> re</code></pre><p><a href="https://www.runoob.com/regexp/regexp-tutorial.html">正则表达式教程</a></p><p><a href="https://www.runoob.com/python3/python3-reg-expressions.html">Python3正则表达式相关方法</a></p><h3 id="十六、其他"><a href="#十六、其他" class="headerlink" title="十六、其他"></a>十六、其他</h3><p>（一）<a href="https://www.runoob.com/python3/python-mysql-connector.html">MySQL</a></p><p>（二）<a href="https://www.runoob.com/python3/python3-multithreading.html">多线程</a></p><p>（三）<a href="https://www.runoob.com/python3/python3-socket.html">网络编程</a></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习常用Python库</title>
      <link href="/2021/07/18/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%B8%B8%E7%94%A8Python%E5%BA%93/"/>
      <url>/2021/07/18/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%B8%B8%E7%94%A8Python%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p>机器学习中常用的Python库。</p><span id="more"></span><h3 id="Numpy"><a href="#Numpy" class="headerlink" title="Numpy"></a>Numpy</h3><h4 id="创建ndarray对象"><a href="#创建ndarray对象" class="headerlink" title="创建ndarray对象"></a>创建ndarray对象</h4><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>array<span class="token punctuation">(</span>object<span class="token punctuation">,</span> dtype <span class="token operator">=</span> None<span class="token punctuation">,</span> copy <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span> order <span class="token operator">=</span> None<span class="token punctuation">,</span> subok <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span> ndmin <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span></code></pre><p>参数说明：</p><table><thead><tr><th align="left">名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">object</td><td align="left">数组或嵌套的数列</td></tr><tr><td align="left">dtype</td><td align="left">数组元素的数据类型，可选</td></tr><tr><td align="left">copy</td><td align="left">对象是否需要复制，可选</td></tr><tr><td align="left">order</td><td align="left">创建数组的样式，C为行方向，F为列方向，A为任意方向（默认）</td></tr><tr><td align="left">subok</td><td align="left">默认返回一个与基类类型一致的数组</td></tr><tr><td align="left">ndmin</td><td align="left">指定生成数组的最小维度</td></tr></tbody></table><p><strong>ndarray 对象属性有：</strong></p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>ndarray.ndim</td><td>秩，即轴的数量或维度的数量</td></tr><tr><td>ndarray.shape</td><td>数组的维度，对于矩阵，n 行 m 列</td></tr><tr><td>ndarray.size</td><td>数组元素的总个数，相当于 .shape 中 n*m 的值</td></tr><tr><td>ndarray.dtype</td><td>ndarray 对象的元素类型</td></tr><tr><td>ndarray.itemsize</td><td>ndarray 对象中每个元素的大小，以字节为单位</td></tr><tr><td>ndarray.flags</td><td>ndarray 对象的内存信息</td></tr><tr><td>ndarray.real</td><td>ndarray元素的实部</td></tr><tr><td>ndarray.imag</td><td>ndarray 元素的虚部</td></tr><tr><td>ndarray.data</td><td>包含实际数组元素的缓冲区，由于一般通过数组的索引获取元素，所以通常不需要使用这个属性。</td></tr></tbody></table><p><strong>特殊数组创建：</strong></p><ul><li><strong>numpy.empty</strong></li></ul><p>numpy.empty 方法用来创建一个指定形状（shape）、数据类型（dtype）且未初始化的数组：</p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>empty<span class="token punctuation">(</span>shape<span class="token punctuation">,</span> dtype <span class="token operator">=</span> float<span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token string">'C'</span><span class="token punctuation">)</span></code></pre><p>参数说明：</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">shape</td><td align="left">数组形状</td></tr><tr><td align="left">dtype</td><td align="left">数据类型，可选</td></tr><tr><td align="left">order</td><td align="left">有”C”和”F”两个选项,分别代表，行优先和列优先，在计算机内存中的存储元素的顺序。</td></tr></tbody></table><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  x <span class="token operator">=</span> np<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype <span class="token operator">=</span> int<span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">6917529027641081856</span>  <span class="token number">5764616291768666155</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">6917529027641081859</span> <span class="token operator">-</span><span class="token number">5764598754299804209</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>          <span class="token number">4497473538</span>      <span class="token number">844429428932120</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><p><strong>注意：数组元素为随机值，因为它们未初始化。</strong></p><ul><li><strong>numpy.zeros</strong></li></ul><p>创建指定大小的数组，数组元素以 0 来填充：</p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>shape<span class="token punctuation">,</span> dtype <span class="token operator">=</span> float<span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token string">'C'</span><span class="token punctuation">)</span></code></pre><p>参数说明：</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">shape</td><td align="left">数组形状</td></tr><tr><td align="left">dtype</td><td align="left">数据类型，可选</td></tr><tr><td align="left">order</td><td align="left">有”C”和”F”两个选项,分别代表，行优先和列优先，在计算机内存中的存储元素的顺序。</td></tr></tbody></table><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  <span class="token comment" spellcheck="true"># 默认为浮点数 </span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 设置类型为整数 </span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype <span class="token operator">=</span> np<span class="token punctuation">.</span>int<span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 自定义类型 </span>z <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> <span class="token string">'i4'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> <span class="token string">'i4'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token keyword">print</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span> <span class="token number">0</span><span class="token punctuation">.</span> <span class="token number">0</span><span class="token punctuation">.</span> <span class="token number">0</span><span class="token punctuation">.</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.ones</strong></li></ul><p>创建指定形状的数组，数组元素以 1 来填充：</p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>shape<span class="token punctuation">,</span> dtype <span class="token operator">=</span> None<span class="token punctuation">,</span> order <span class="token operator">=</span> <span class="token string">'C'</span><span class="token punctuation">)</span></code></pre><p>参数说明：</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">shape</td><td align="left">数组形状</td></tr><tr><td align="left">dtype</td><td align="left">数据类型，可选</td></tr><tr><td align="left">order</td><td align="left">有”C”和”F”两个选项,分别代表，行优先和列优先，在计算机内存中的存储元素的顺序。</td></tr></tbody></table><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  <span class="token comment" spellcheck="true"># 默认为浮点数 </span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 自定义类型 </span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype <span class="token operator">=</span> int<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.eye</strong></li></ul><p>创建单位矩阵</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   x <span class="token operator">=</span> np<span class="token punctuation">.</span>eye<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>  </code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">0</span><span class="token punctuation">.</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span> <span class="token number">0</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><p><strong>NumPy 从已有的数组创建数组：</strong></p><p>numpy.asarray 类似 numpy.array，但 numpy.asarray  参数只有三个，比 numpy.array 少两个。</p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>asarray<span class="token punctuation">(</span>a<span class="token punctuation">,</span> dtype <span class="token operator">=</span> None<span class="token punctuation">,</span> order <span class="token operator">=</span> None<span class="token punctuation">)</span></code></pre><p>参数说明：</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>a</td><td>任意形式的输入参数，可以是，列表, 列表的元组, 元组, 元组的元组, 元组的列表，多维数组</td></tr><tr><td>dtype</td><td>数据类型，可选</td></tr><tr><td>order</td><td>可选，有”C”和”F”两个选项,分别代表，行优先和列优先，在计算机内存中的存储元素的顺序。</td></tr></tbody></table><p><strong>Numpy 从数值范围创建数组：</strong></p><ul><li><strong>numpy.arange</strong></li></ul><p>numpy 包中的使用 arange 函数创建数值范围并返回 ndarray 对象，函数格式如下：</p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>start<span class="token punctuation">,</span> stop<span class="token punctuation">,</span> step<span class="token punctuation">,</span> dtype<span class="token punctuation">)</span></code></pre><p>根据 start 与 stop 指定的范围以及 step 设定的步长，生成一个 ndarray。</p><p>参数说明：</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>start</code></td><td>起始值，默认为<code>0</code></td></tr><tr><td><code>stop</code></td><td>终止值（不包含）</td></tr><tr><td><code>step</code></td><td>步长，默认为<code>1</code></td></tr><tr><td><code>dtype</code></td><td>返回<code>ndarray</code>的数据类型，如果没有提供，则会使用输入数据的类型。</td></tr></tbody></table><ul><li><strong>numpy.linspace</strong></li></ul><p>numpy.linspace 函数用于创建一个一维数组，数组是一个等差数列构成的，格式如下：</p><pre class=" language-python"><code class="language-python">np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span>start<span class="token punctuation">,</span> stop<span class="token punctuation">,</span> num<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> endpoint<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> retstep<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>None<span class="token punctuation">)</span></code></pre><p>参数说明：</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>start</code></td><td>序列的起始值</td></tr><tr><td><code>stop</code></td><td>序列的终止值，如果<code>endpoint</code>为<code>true</code>，该值包含于数列中</td></tr><tr><td><code>num</code></td><td>要生成的等步长的样本数量，默认为<code>50</code></td></tr><tr><td><code>endpoint</code></td><td>该值为 <code>true</code> 时，数列中包含<code>stop</code>值，反之不包含，默认是True。</td></tr><tr><td><code>retstep</code></td><td>如果为 True 时，生成的数组中会显示间距，反之不显示。</td></tr><tr><td><code>dtype</code></td><td><code>ndarray</code> 的数据类型</td></tr></tbody></table><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np a <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">.</span>  <span class="token number">2</span><span class="token punctuation">.</span>  <span class="token number">3</span><span class="token punctuation">.</span>  <span class="token number">4</span><span class="token punctuation">.</span>  <span class="token number">5</span><span class="token punctuation">.</span>  <span class="token number">6</span><span class="token punctuation">.</span>  <span class="token number">7</span><span class="token punctuation">.</span>  <span class="token number">8</span><span class="token punctuation">.</span>  <span class="token number">9</span><span class="token punctuation">.</span> <span class="token number">10</span><span class="token punctuation">.</span><span class="token punctuation">]</span></code></pre><p>设置元素全部是1的等差数列：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np a <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">]</span></code></pre><p>将 endpoint 设为 false，不包含终止值：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span>  <span class="token number">5</span><span class="token punctuation">,</span> endpoint <span class="token operator">=</span>  <span class="token boolean">False</span><span class="token punctuation">)</span>   <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">.</span> <span class="token number">12</span><span class="token punctuation">.</span> <span class="token number">14</span><span class="token punctuation">.</span> <span class="token number">16</span><span class="token punctuation">.</span> <span class="token number">18</span><span class="token punctuation">.</span><span class="token punctuation">]</span></code></pre><p>如果将 endpoint 设为 true，则会包含 20。</p><p>以下实例设置间距。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np a <span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span>retstep<span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 拓展例子 </span>b <span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">(</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token punctuation">.</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token punctuation">.</span><span class="token punctuation">,</span>  <span class="token number">5</span><span class="token punctuation">.</span><span class="token punctuation">,</span>  <span class="token number">6</span><span class="token punctuation">.</span><span class="token punctuation">,</span>  <span class="token number">7</span><span class="token punctuation">.</span><span class="token punctuation">,</span>  <span class="token number">8</span><span class="token punctuation">.</span><span class="token punctuation">,</span>  <span class="token number">9</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">3</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">4</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">5</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">6</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">7</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">8</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">9</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.logspace</strong></li></ul><p>numpy.logspace 函数用于创建一个于等比数列。格式如下：</p><pre class=" language-python"><code class="language-python">np<span class="token punctuation">.</span>logspace<span class="token punctuation">(</span>start<span class="token punctuation">,</span> stop<span class="token punctuation">,</span> num<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> endpoint<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">10.0</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>None<span class="token punctuation">)</span></code></pre><p>base 参数意思是取对数的时候 log 的下标。</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>start</code></td><td>序列的起始值为：base ** start</td></tr><tr><td><code>stop</code></td><td>序列的终止值为：base ** stop。如果<code>endpoint</code>为<code>true</code>，该值包含于数列中</td></tr><tr><td><code>num</code></td><td>要生成的等步长的样本数量，默认为<code>50</code></td></tr><tr><td><code>endpoint</code></td><td>该值为 <code>true</code> 时，数列中中包含<code>stop</code>值，反之不包含，默认是True。</td></tr><tr><td><code>base</code></td><td>对数 log 的底数。</td></tr><tr><td><code>dtype</code></td><td><code>ndarray</code> 的数据类型</td></tr></tbody></table><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token comment" spellcheck="true"># 默认底数是 base=10 </span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>logspace<span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">2.0</span><span class="token punctuation">,</span> num <span class="token operator">=</span>  <span class="token number">10</span><span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span> <span class="token number">10</span><span class="token punctuation">.</span>           <span class="token number">12.91549665</span>     <span class="token number">16.68100537</span>      <span class="token number">21.5443469</span>  <span class="token number">27.82559402</span>        <span class="token number">35.93813664</span>   <span class="token number">46.41588834</span>     <span class="token number">59.94842503</span>      <span class="token number">77.42636827</span>    <span class="token number">100</span><span class="token punctuation">.</span>    <span class="token punctuation">]</span></code></pre><p>将对数的底数设置为 2 :</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np a <span class="token operator">=</span> np<span class="token punctuation">.</span>logspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span>base<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span></code></pre><p>输出如下：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span>  <span class="token number">1</span><span class="token punctuation">.</span>   <span class="token number">2</span><span class="token punctuation">.</span>   <span class="token number">4</span><span class="token punctuation">.</span>   <span class="token number">8</span><span class="token punctuation">.</span>  <span class="token number">16</span><span class="token punctuation">.</span>  <span class="token number">32</span><span class="token punctuation">.</span>  <span class="token number">64</span><span class="token punctuation">.</span> <span class="token number">128</span><span class="token punctuation">.</span> <span class="token number">256</span><span class="token punctuation">.</span> <span class="token number">512</span><span class="token punctuation">.</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.random</strong></li></ul><ol><li>numpy.random.random()</li></ol><p>创建指定大小的随机数组，取值范围[0,1)</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment" spellcheck="true"># 创建2行2列取值范围为[0,1)的数组</span>arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span></code></pre><ol start="2"><li>numpy.random.normal()</li></ol><p>创建指定大小的数组，取值范围为标准正态分布</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 创建3行3列，均值为0，标准差为1，0~1范围内的数组</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span>，<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>）</code></pre><ol start="3"><li>numpy.random.randint()</li></ol><p>创建指定大小的数组，数组数值随机取于[low,high)之间。high为空时则取[0,low)。需要用到size属性指定数组大小。</p><pre class=" language-python"><code class="language-python">arr <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h4 id="NumPy-切片和索引"><a href="#NumPy-切片和索引" class="headerlink" title="NumPy  切片和索引"></a>NumPy  切片和索引</h4><p>ndarray对象的内容可以通过索引或切片来访问和修改，与 Python 中 list 的切片操作一样。</p><ul><li><strong>ndarray 数组可以基于 0 - n 的下标进行索引，切片对象可以通过内置的 slice 函数，并设置 start, stop 及 step 参数进行，从原数组中切割出一个新数组。</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> s <span class="token operator">=</span> slice<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 从索引 2 开始到索引 7 停止，间隔为2 </span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">2</span>  <span class="token number">4</span>  <span class="token number">6</span><span class="token punctuation">]</span></code></pre><p>以上实例中，我们首先通过 arange() 函数创建 ndarray 对象。 然后，分别设置起始，终止和步长的参数为  2，7 和 2。 </p><ul><li><strong>我们也可以通过冒号分隔切片参数 start:stop:step 来进行切片操作：</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>   b <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>   <span class="token comment" spellcheck="true"># 从索引 2 开始到索引 7 停止，间隔为 2 </span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre><code>[2  4  6]</code></pre><p><strong>冒号的解释：如果只放置一个参数，如 [2]，将返回与该索引相对应的单个元素。如果为 [2:]，表示从该索引开始以后的所有项都将被提取。如果使用了两个参数，如 [2:7]，那么则提取两个索引(不包括停止索引)之间的项。</strong></p><p>实例：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">2</span>  <span class="token number">3</span>  <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span>  <span class="token number">9</span><span class="token punctuation">]</span></code></pre><p>实例：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># [0 1 2 3 4 5 6 7 8 9] </span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">2</span>  <span class="token number">3</span>  <span class="token number">4</span><span class="token punctuation">]</span></code></pre><p>多维数组同样适用上述索引提取方法：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 从某个索引处开始切割 </span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'从数组索引 a[1:] 处开始切割'</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span>从数组索引 a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> 处开始切割<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><ul><li><strong>切片还可以包括省略号 …，来使选择元组的长度与数组的维度相同。 如果在行位置使用省略号，它将返回包含行中元素的 ndarray。</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 第2列元素 </span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 第2行元素 </span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 第2列及剩下的所有元素</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><ul><li><strong>Numpy 高级索引</strong></li></ul><p>NumPy 比一般的 Python 序列提供更多的索引方式。除了之前看到的用整数和切片的索引外，数组可以由整数数组索引、布尔索引及花式索引。</p><ol><li>整数数组索引</li></ol><p>以下实例获取数组中(0,0)，(1,1)和(2,0)位置处的元素。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span>  <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  y <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">1</span>  <span class="token number">4</span>  <span class="token number">5</span><span class="token punctuation">]</span></code></pre><p>以下实例获取了 4X3 数组中的四个角的元素。 行索引是 [0,0] 和 [3,3]，而列索引是 [0,2] 和 [0,2]。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>  <span class="token number">3</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>  <span class="token number">6</span><span class="token punctuation">,</span>  <span class="token number">7</span><span class="token punctuation">,</span>  <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>  <span class="token number">9</span><span class="token punctuation">,</span>  <span class="token number">10</span><span class="token punctuation">,</span>  <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'我们的数组是：'</span> <span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#行索引</span>rows <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#列索引</span>cols <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  y <span class="token operator">=</span> x<span class="token punctuation">[</span>rows<span class="token punctuation">,</span>cols<span class="token punctuation">]</span>   <span class="token keyword">print</span>  <span class="token punctuation">(</span><span class="token string">'这个数组的四个角元素是：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">我们的数组是：<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span>  <span class="token number">1</span>  <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">3</span>  <span class="token number">4</span>  <span class="token number">5</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span>这个数组的四个角元素是：<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span>  <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">9</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><p>可以借助切片 : 或 … 与索引数组组合。如下面例子：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> b <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span> c <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span> d <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">8</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">8</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">8</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><ol start="2"><li>布尔索引</li></ol><p>我们可以通过一个布尔数组来索引目标数组。</p><p>布尔索引通过布尔运算来获取符合指定条件的元素的数组。</p><p>以下实例获取大于 5 的元素：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>  <span class="token number">3</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>  <span class="token number">6</span><span class="token punctuation">,</span>  <span class="token number">7</span><span class="token punctuation">,</span>  <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>  <span class="token number">9</span><span class="token punctuation">,</span>  <span class="token number">10</span><span class="token punctuation">,</span>  <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'我们的数组是：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 现在我们会打印出大于 5 的元素   </span><span class="token keyword">print</span>  <span class="token punctuation">(</span><span class="token string">'大于 5 的元素是：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>x<span class="token punctuation">[</span>x<span class="token operator">></span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">我们的数组是：<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span>  <span class="token number">1</span>  <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">3</span>  <span class="token number">4</span>  <span class="token number">5</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span>大于 <span class="token number">5</span> 的元素是：<span class="token punctuation">[</span> <span class="token number">6</span>  <span class="token number">7</span>  <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span><span class="token punctuation">]</span></code></pre><p>以下实例演示如何从数组中过滤掉非复数元素。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">+</span><span class="token number">6j</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3.5</span><span class="token operator">+</span><span class="token number">5j</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>np<span class="token punctuation">.</span>iscomplex<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>输出如下：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">2.0</span><span class="token operator">+</span><span class="token number">6.j</span>  <span class="token number">3.5</span><span class="token operator">+</span><span class="token number">5.j</span><span class="token punctuation">]</span></code></pre><ol start="3"><li>花式索引</li></ol><p>花式索引指的是利用整数数组进行索引。</p><p>花式索引根据索引数组的值作为目标数组的某个轴的下标来取值。对于使用一维整型数组作为索引，<strong>如果目标是一维数组，那么索引的结果就是对应下标的行</strong>，如果目标是二维数组，那么就是对应位置的元素。</p><p>花式索引跟切片不一样，它总是将数据复制到新数组中。</p><p>（1）传入顺序索引数组</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   x<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">16</span> <span class="token number">17</span> <span class="token number">18</span> <span class="token number">19</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">28</span> <span class="token number">29</span> <span class="token number">30</span> <span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><p>（2）传入倒序索引数组</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   x<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">16</span> <span class="token number">17</span> <span class="token number">18</span> <span class="token number">19</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">24</span> <span class="token number">25</span> <span class="token number">26</span> <span class="token number">27</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">28</span> <span class="token number">29</span> <span class="token number">30</span> <span class="token number">31</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><p>（3）传入多个索引数组（要使用np.ix_）</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   x<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>x<span class="token punctuation">[</span>np<span class="token punctuation">.</span>ix_<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#相当于</span>y<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>x<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">,</span>x<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">[</span>x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">4</span>  <span class="token number">7</span>  <span class="token number">5</span>  <span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">20</span> <span class="token number">23</span> <span class="token number">21</span> <span class="token number">22</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">28</span> <span class="token number">31</span> <span class="token number">29</span> <span class="token number">30</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">8</span> <span class="token number">11</span>  <span class="token number">9</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><h4 id="Numpy-广播-Broadcast"><a href="#Numpy-广播-Broadcast" class="headerlink" title="Numpy 广播(Broadcast)"></a>Numpy 广播(Broadcast)</h4><p>广播(Broadcast)是 numpy 对不同形状(shape)的数组进行数值计算的方式， 对数组的算术运算通常在相应的元素上进行。</p><p>如果两个数组 a 和 b 形状相同，即满足 a.shape == b.shape，那么 a*b 的结果就是 a 与 b 数组对应位相乘。这要求维数相同，且各维度的长度相同。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  c <span class="token operator">=</span> a <span class="token operator">*</span> b  <span class="token keyword">print</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span> <span class="token number">10</span>  <span class="token number">40</span>  <span class="token number">90</span> <span class="token number">160</span><span class="token punctuation">]</span></code></pre><p>当运算中的 2 个数组的形状不同时，numpy 将自动触发广播机制。如：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre><code>[[ 1  2  3] [11 12 13] [21 22 23] [31 32 33]]</code></pre><p>下面的图片展示了数组 b 如何通过广播来与数组 a 兼容。</p><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/image0020619.gif" alt="img"></p><p>4x3 的二维数组与长为 3 的一维数组相加，等效于把数组 b 在二维上重复 4 次再运算：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                         <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                         <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> bb <span class="token operator">=</span> np<span class="token punctuation">.</span>tile<span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 重复 b 的各个维度 </span><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> bb<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre><code>[[ 1  2  3] [11 12 13] [21 22 23] [31 32 33]]</code></pre><p><strong>广播的规则:</strong></p><ul><li>让所有输入数组都向其中形状最长的数组看齐，形状中不足的部分都通过在前面加 1 补齐。</li><li>输出数组的形状是输入数组形状的各个维度上的最大值。</li><li>如果输入数组的某个维度和输出数组的对应维度的长度相同或者其长度为 1 时，这个数组能够用来计算，否则出错。</li><li>当输入数组的某个维度的长度为 1 时，沿着此维度运算时都用此维度上的第一组值。</li></ul><p><strong>简单理解：</strong>对两个数组，分别比较他们的每一个维度（若其中一个数组没有当前维度则忽略），满足：</p><ul><li>数组拥有相同形状。</li><li>当前维度的值相等。</li><li>当前维度的值有一个是 1。</li></ul><p>若条件不满足，抛出 <strong>“ValueError: frames are not aligned”</strong> 异常。</p><h4 id="Numpy-数组操作"><a href="#Numpy-数组操作" class="headerlink" title="Numpy 数组操作"></a>Numpy 数组操作</h4><p><strong>修改数组形状</strong></p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td><code>reshape</code></td><td>不改变数据的条件下修改形状</td></tr><tr><td><code>flat</code></td><td>数组元素迭代器</td></tr><tr><td><code>flatten</code></td><td>返回一份数组拷贝，对拷贝所做的修改不会影响原始数组</td></tr><tr><td><code>ravel</code></td><td>返回展开数组</td></tr></tbody></table><ul><li><strong>numpy.reshape</strong></li></ul><p>numpy.reshape 函数可以在不改变数据的条件下修改形状，格式如下： </p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> newshape<span class="token punctuation">,</span> order<span class="token operator">=</span><span class="token string">'C'</span><span class="token punctuation">)</span></code></pre><ul><li><code>arr</code>：要修改形状的数组</li><li><code>newshape</code>：整数或者整数数组，新的形状应当兼容原有形状</li><li>order：’C’ – 按行，’F’ – 按列，’A’ – 原顺序，’k’ – 元素在内存中的出现顺序。</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'原始数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'修改后的数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><pre class=" language-python"><code class="language-python">原始数组：<span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span><span class="token punctuation">]</span>修改后的数组：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">6</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.ndarray.flat</strong></li></ul><p>numpy.ndarray.flat 是一个数组元素迭代器，实例如下:</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'原始数组：'</span><span class="token punctuation">)</span> <span class="token keyword">for</span> row <span class="token keyword">in</span> a<span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token punctuation">(</span>row<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#对数组中每个元素都进行处理，可以使用flat属性，该属性是一个数组元素迭代器： </span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'迭代后的数组：'</span><span class="token punctuation">)</span> <span class="token keyword">for</span> element <span class="token keyword">in</span> a<span class="token punctuation">.</span>flat<span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token punctuation">(</span>element<span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><pre class=" language-python"><code class="language-python">原始数组：<span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span>迭代后的数组：<span class="token number">0</span><span class="token number">1</span><span class="token number">2</span><span class="token number">3</span><span class="token number">4</span><span class="token number">5</span><span class="token number">6</span><span class="token number">7</span><span class="token number">8</span></code></pre><ul><li><strong>numpy.ndarray.flatten</strong></li></ul><p>numpy.ndarray.flatten 返回一份数组拷贝，对拷贝所做的修改不会影响原始数组，格式如下：</p><pre class=" language-python"><code class="language-python">ndarray<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span>order<span class="token operator">=</span><span class="token string">'C'</span><span class="token punctuation">)</span></code></pre><p>参数说明：</p><ul><li>order：’C’ – 按行，’F’ – 按列，’A’ – 原顺序，’K’ – 元素在内存中的出现顺序。</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'原数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 默认按行  </span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'展开的数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'以 F 风格顺序展开的数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token string">'F'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><pre><code>原数组：[[0 1 2 3] [4 5 6 7]]展开的数组：[0 1 2 3 4 5 6 7]以 F 风格顺序展开的数组：[0 4 1 5 2 6 3 7]</code></pre><ul><li><strong>numpy.ravel</strong></li></ul><p>numpy.ravel() 展平的数组元素，顺序通常是”C风格”，返回的是数组视图（view，有点类似 C/C++引用reference的意味），修改会影响原始数组。</p><p>该函数接收两个参数：</p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span>a<span class="token punctuation">,</span> order<span class="token operator">=</span><span class="token string">'C'</span><span class="token punctuation">)</span></code></pre><p>参数说明：</p><ul><li>order：’C’ – 按行，’F’ – 按列，’A’ – 原顺序，’K’ – 元素在内存中的出现顺序。</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'原数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'调用 ravel 函数之后：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'以 F 风格顺序调用 ravel 函数之后：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>ravel<span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token string">'F'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><pre class=" language-python"><code class="language-python">原数组：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span>调用 ravel 函数之后：<span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span><span class="token punctuation">]</span>以 F 风格顺序调用 ravel 函数之后：<span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">4</span> <span class="token number">1</span> <span class="token number">5</span> <span class="token number">2</span> <span class="token number">6</span> <span class="token number">3</span> <span class="token number">7</span><span class="token punctuation">]</span></code></pre><p><strong>翻转数组</strong></p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td><code>transpose</code></td><td>对换数组的维度</td></tr><tr><td><code>ndarray.T</code></td><td>和 <code>self.transpose()</code> 相同</td></tr><tr><td><code>rollaxis</code></td><td>向后滚动指定的轴</td></tr><tr><td><code>swapaxes</code></td><td>对换数组的两个轴</td></tr></tbody></table><ul><li><strong>numpy.transpose</strong></li></ul><p>numpy.transpose 函数用于对换数组的维度，格式如下：</p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> axes<span class="token punctuation">)</span></code></pre><p>参数说明:</p><ul><li><code>arr</code>：要操作的数组</li><li><code>axes</code>：整数列表，对应维度，通常所有维度都会对换。</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'原数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a <span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'对换数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><pre><code>原数组：[[ 0  1  2  3] [ 4  5  6  7] [ 8  9 10 11]]对换数组：[[ 0  4  8] [ 1  5  9] [ 2  6 10] [ 3  7 11]]</code></pre><p>numpy.ndarray.T 类似 numpy.transpose：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'原数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'转置数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>T<span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><pre class=" language-python"><code class="language-python">原数组：<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">]</span>转置数组：<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span>  <span class="token number">4</span>  <span class="token number">8</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">1</span>  <span class="token number">5</span>  <span class="token number">9</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">2</span>  <span class="token number">6</span> <span class="token number">10</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">3</span>  <span class="token number">7</span> <span class="token number">11</span><span class="token punctuation">]</span></code></pre><p><strong>连接数组</strong></p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td><code>concatenate</code></td><td>连接沿现有轴的数组序列</td></tr><tr><td><code>stack</code></td><td>沿着新的轴加入一系列数组。</td></tr><tr><td><code>hstack</code></td><td>水平堆叠序列中的数组（列方向）</td></tr><tr><td><code>vstack</code></td><td>竖直堆叠序列中的数组（行方向）</td></tr></tbody></table><ul><li><strong>numpy.concatenate</strong></li></ul><p>numpy.concatenate 函数用于沿指定轴连接相同形状的两个或多个数组，格式如下：</p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axis<span class="token punctuation">)</span></code></pre><p>参数说明：</p><ul><li><code>a1, a2, ...</code>：相同类型的数组</li><li><code>axis</code>：沿着它连接数组的轴，默认为 0</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'第一个数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'第二个数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 两个数组的维度相同  </span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'沿轴 0 连接两个数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'沿轴 1 连接两个数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span>axis <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">第一个数组：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span>第二个数组：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span>沿轴 <span class="token number">0</span> 连接两个数组：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span>沿轴 <span class="token number">1</span> 连接两个数组：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span> <span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.stack</strong></li></ul><p>numpy.stack 函数用于沿新轴连接数组序列，格式如下：</p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>stack<span class="token punctuation">(</span>arrays<span class="token punctuation">,</span> axis<span class="token punctuation">)</span></code></pre><p>参数说明：</p><ul><li><code>arrays</code>相同形状的数组序列</li><li><code>axis</code>：返回数组中的轴，输入数组沿着它来堆叠</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'第一个数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'第二个数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'沿轴 0 堆叠两个数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'沿轴 1 堆叠两个数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>stack<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><pre class=" language-python"><code class="language-python">第一个数组：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span>第二个数组：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span>沿轴 <span class="token number">0</span> 堆叠两个数组：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span>  <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span>  <span class="token punctuation">[</span><span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>沿轴 <span class="token number">1</span> 堆叠两个数组：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span>  <span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span>  <span class="token punctuation">[</span><span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.hstack</strong></li></ul><p>numpy.hstack 是 numpy.stack 函数的变体，它通过水平堆叠来生成数组。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'第一个数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'第二个数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'水平堆叠：'</span><span class="token punctuation">)</span> c <span class="token operator">=</span> np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><pre class=" language-python"><code class="language-python">第一个数组：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span>第二个数组：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span>水平堆叠：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span> <span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.vstack</strong></li></ul><p>numpy.vstack 是 numpy.stack 函数的变体，它通过垂直堆叠来生成数组。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'第一个数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'第二个数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'竖直堆叠：'</span><span class="token punctuation">)</span> c <span class="token operator">=</span> np<span class="token punctuation">.</span>vstack<span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">第一个数组：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span>第二个数组：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span>竖直堆叠：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><p><strong>分割数组</strong></p><table><thead><tr><th>函数</th><th>数组及操作</th></tr></thead><tbody><tr><td><code>split</code></td><td>将一个数组分割为多个子数组</td></tr><tr><td><code>hsplit</code></td><td>将一个数组水平分割为多个子数组（按列）</td></tr><tr><td><code>vsplit</code></td><td>将一个数组垂直分割为多个子数组（按行）</td></tr></tbody></table><ul><li><strong>numpy.split</strong></li></ul><p>numpy.split 函数沿特定的轴将数组分割为子数组，格式如下：</p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>split<span class="token punctuation">(</span>ary<span class="token punctuation">,</span> indices_or_sections<span class="token punctuation">,</span> axis<span class="token punctuation">)</span></code></pre><p>参数说明：</p><ul><li><code>ary</code>：被分割的数组</li><li><code>indices_or_sections</code>：果是一个整数，就用该数平均切分，如果是一个数组，为沿轴切分的位置（左开右闭） </li><li><code>axis</code>：设置沿着哪个方向进行切分，默认为 0，横向切分，即水平方向。为 1 时，纵向切分，即竖直方向。</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'第一个数组：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'将数组分为三个大小相等的子数组：'</span><span class="token punctuation">)</span> b <span class="token operator">=</span> np<span class="token punctuation">.</span>split<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'将数组在一维数组中表明的位置分割：'</span><span class="token punctuation">)</span> b <span class="token operator">=</span> np<span class="token punctuation">.</span>split<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">第一个数组：<span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span>将数组分为三个大小相等的子数组：<span class="token punctuation">[</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>将数组在一维数组中表明的位置分割：<span class="token punctuation">[</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span></code></pre><p>axis 为 0 时在水平方向分割，axis 为 1 时在垂直方向分割：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npa <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'第一个数组：'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'默认分割（0轴）：'</span><span class="token punctuation">)</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>split<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'沿垂直方向分割：'</span><span class="token punctuation">)</span>c <span class="token operator">=</span> np<span class="token punctuation">.</span>split<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'沿水平方向分割：'</span><span class="token punctuation">)</span>d<span class="token operator">=</span> np<span class="token punctuation">.</span>hsplit<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">第一个数组：<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">12</span> <span class="token number">13</span> <span class="token number">14</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">]</span>默认分割（<span class="token number">0</span>轴）：<span class="token punctuation">[</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">8</span><span class="token punctuation">,</span>  <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>沿垂直方向分割：<span class="token punctuation">[</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">8</span><span class="token punctuation">,</span>  <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">6</span><span class="token punctuation">,</span>  <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>沿水平方向分割：<span class="token punctuation">[</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">8</span><span class="token punctuation">,</span>  <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span> <span class="token number">6</span><span class="token punctuation">,</span>  <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.hsplit</strong></li></ul><p>numpy.hsplit 函数用于水平分割数组，通过指定要返回的相同形状的数组数量来拆分原数组。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  harr <span class="token operator">=</span> np<span class="token punctuation">.</span>floor<span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'原array：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>harr<span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'拆分后：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>hsplit<span class="token punctuation">(</span>harr<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">原array：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">.</span> <span class="token number">7</span><span class="token punctuation">.</span> <span class="token number">6</span><span class="token punctuation">.</span> <span class="token number">3</span><span class="token punctuation">.</span> <span class="token number">2</span><span class="token punctuation">.</span> <span class="token number">6</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">.</span> <span class="token number">3</span><span class="token punctuation">.</span> <span class="token number">6</span><span class="token punctuation">.</span> <span class="token number">7</span><span class="token punctuation">.</span> <span class="token number">9</span><span class="token punctuation">.</span> <span class="token number">7</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>拆分后：<span class="token punctuation">[</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.vsplit</strong></li></ul><p>numpy.vsplit 沿着垂直轴分割，其分割方式与hsplit用法相同。 </p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'第一个数组：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'竖直分割：'</span><span class="token punctuation">)</span> b <span class="token operator">=</span> np<span class="token punctuation">.</span>vsplit<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">第一个数组：<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span>  <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">4</span>  <span class="token number">5</span>  <span class="token number">6</span>  <span class="token number">7</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">8</span>  <span class="token number">9</span> <span class="token number">10</span> <span class="token number">11</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">12</span> <span class="token number">13</span> <span class="token number">14</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">]</span>竖直分割：<span class="token punctuation">[</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">8</span><span class="token punctuation">,</span>  <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span></code></pre><p><strong><a href="https://www.runoob.com/numpy/numpy-array-manipulation.html">其他</a></strong></p><h4 id="Numpy-数学函数"><a href="#Numpy-数学函数" class="headerlink" title="Numpy 数学函数"></a>Numpy 数学函数</h4><p>NumPy 包含大量的各种数学运算的函数，包括三角函数，算术运算的函数，复数处理函数等。</p><p><strong>三角函数</strong></p><p>NumPy 提供了标准的三角函数：sin()、cos()、tan()。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npa <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'不同角度的正弦值：'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 通过乘 pi/180 转化为弧度  </span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>a<span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">/</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'数组中角度的余弦值：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>a<span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">/</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'数组中角度的正切值：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>tan<span class="token punctuation">(</span>a<span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">/</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">不同角度的正弦值：<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span>         <span class="token number">0.5</span>        <span class="token number">0.70710678</span> <span class="token number">0.8660254</span>  <span class="token number">1</span><span class="token punctuation">.</span>        <span class="token punctuation">]</span>数组中角度的余弦值：<span class="token punctuation">[</span><span class="token number">1.00000000e+00</span> <span class="token number">8.66025404e-01</span> <span class="token number">7.07106781e-01</span> <span class="token number">5.00000000e-01</span> <span class="token number">6.12323400e-17</span><span class="token punctuation">]</span>数组中角度的正切值：<span class="token punctuation">[</span><span class="token number">0.00000000e+00</span> <span class="token number">5.77350269e-01</span> <span class="token number">1.00000000e+00</span> <span class="token number">1.73205081e+00</span> <span class="token number">1.63312394e+16</span><span class="token punctuation">]</span></code></pre><p>arcsin，arccos，和 arctan 函数返回给定角度的 sin，cos 和 tan 的反三角函数。 </p><p>这些函数的结果可以通过 numpy.degrees() 函数将弧度转换为角度。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npa <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'含有正弦值的数组：'</span><span class="token punctuation">)</span>sin <span class="token operator">=</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>a<span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">/</span><span class="token number">180</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span>sin<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'计算角度的反正弦，返回值以弧度为单位：'</span><span class="token punctuation">)</span>inv <span class="token operator">=</span> np<span class="token punctuation">.</span>arcsin<span class="token punctuation">(</span>sin<span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span>inv<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'通过转化为角度制来检查结果：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>degrees<span class="token punctuation">(</span>inv<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'arccos 和 arctan 函数行为类似：'</span><span class="token punctuation">)</span>cos <span class="token operator">=</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>a<span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">/</span><span class="token number">180</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span>cos<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'反余弦：'</span><span class="token punctuation">)</span>inv <span class="token operator">=</span> np<span class="token punctuation">.</span>arccos<span class="token punctuation">(</span>cos<span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span>inv<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'角度制单位：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>degrees<span class="token punctuation">(</span>inv<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'tan 函数：'</span><span class="token punctuation">)</span>tan <span class="token operator">=</span> np<span class="token punctuation">.</span>tan<span class="token punctuation">(</span>a<span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">/</span><span class="token number">180</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span>tan<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'反正切：'</span><span class="token punctuation">)</span>inv <span class="token operator">=</span> np<span class="token punctuation">.</span>arctan<span class="token punctuation">(</span>tan<span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span>inv<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'角度制单位：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>degrees<span class="token punctuation">(</span>inv<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">含有正弦值的数组：<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span>         <span class="token number">0.5</span>        <span class="token number">0.70710678</span> <span class="token number">0.8660254</span>  <span class="token number">1</span><span class="token punctuation">.</span>        <span class="token punctuation">]</span>计算角度的反正弦，返回值以弧度为单位：<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span>         <span class="token number">0.52359878</span> <span class="token number">0.78539816</span> <span class="token number">1.04719755</span> <span class="token number">1.57079633</span><span class="token punctuation">]</span>通过转化为角度制来检查结果：<span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">.</span> <span class="token number">30</span><span class="token punctuation">.</span> <span class="token number">45</span><span class="token punctuation">.</span> <span class="token number">60</span><span class="token punctuation">.</span> <span class="token number">90</span><span class="token punctuation">.</span><span class="token punctuation">]</span>arccos 和 arctan 函数行为类似：<span class="token punctuation">[</span><span class="token number">1.00000000e+00</span> <span class="token number">8.66025404e-01</span> <span class="token number">7.07106781e-01</span> <span class="token number">5.00000000e-01</span> <span class="token number">6.12323400e-17</span><span class="token punctuation">]</span>反余弦：<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span>         <span class="token number">0.52359878</span> <span class="token number">0.78539816</span> <span class="token number">1.04719755</span> <span class="token number">1.57079633</span><span class="token punctuation">]</span>角度制单位：<span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">.</span> <span class="token number">30</span><span class="token punctuation">.</span> <span class="token number">45</span><span class="token punctuation">.</span> <span class="token number">60</span><span class="token punctuation">.</span> <span class="token number">90</span><span class="token punctuation">.</span><span class="token punctuation">]</span>tan 函数：<span class="token punctuation">[</span><span class="token number">0.00000000e+00</span> <span class="token number">5.77350269e-01</span> <span class="token number">1.00000000e+00</span> <span class="token number">1.73205081e+00</span> <span class="token number">1.63312394e+16</span><span class="token punctuation">]</span>反正切：<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span>         <span class="token number">0.52359878</span> <span class="token number">0.78539816</span> <span class="token number">1.04719755</span> <span class="token number">1.57079633</span><span class="token punctuation">]</span>角度制单位：<span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">.</span> <span class="token number">30</span><span class="token punctuation">.</span> <span class="token number">45</span><span class="token punctuation">.</span> <span class="token number">60</span><span class="token punctuation">.</span> <span class="token number">90</span><span class="token punctuation">.</span><span class="token punctuation">]</span></code></pre><p><strong>舍入函数</strong></p><ul><li><strong>numpy.around()</strong> </li></ul><p>返回指定数字的四舍五入值。 </p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>around<span class="token punctuation">(</span>a<span class="token punctuation">,</span>decimals<span class="token punctuation">)</span></code></pre><p>参数说明：</p><ul><li>a: 数组</li><li>decimals: 舍入的小数位数。 默认值为0。 如果为负，整数将四舍五入到小数点左侧的位置</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">5.55</span><span class="token punctuation">,</span>  <span class="token number">123</span><span class="token punctuation">,</span>  <span class="token number">0.567</span><span class="token punctuation">,</span>  <span class="token number">25.532</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span>  <span class="token punctuation">(</span><span class="token string">'原数组：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'舍入后：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>around<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>around<span class="token punctuation">(</span>a<span class="token punctuation">,</span> decimals <span class="token operator">=</span>  <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>around<span class="token punctuation">(</span>a<span class="token punctuation">,</span> decimals <span class="token operator">=</span>  <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">原数组：<span class="token punctuation">[</span>  <span class="token number">1</span><span class="token punctuation">.</span>      <span class="token number">5.55</span>  <span class="token number">123</span><span class="token punctuation">.</span>      <span class="token number">0.567</span>  <span class="token number">25.532</span><span class="token punctuation">]</span>舍入后：<span class="token punctuation">[</span>  <span class="token number">1</span><span class="token punctuation">.</span>   <span class="token number">6</span><span class="token punctuation">.</span> <span class="token number">123</span><span class="token punctuation">.</span>   <span class="token number">1</span><span class="token punctuation">.</span>  <span class="token number">26</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">[</span>  <span class="token number">1</span><span class="token punctuation">.</span>    <span class="token number">5.6</span> <span class="token number">123</span><span class="token punctuation">.</span>    <span class="token number">0.6</span>  <span class="token number">25.5</span><span class="token punctuation">]</span><span class="token punctuation">[</span>  <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">10</span><span class="token punctuation">.</span> <span class="token number">120</span><span class="token punctuation">.</span>   <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">30</span><span class="token punctuation">.</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.floor()</strong></li></ul><p>numpy.floor() 返回小于或者等于指定表达式的最大整数，即向下取整。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.7</span><span class="token punctuation">,</span>  <span class="token number">1.5</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">0.2</span><span class="token punctuation">,</span>  <span class="token number">0.6</span><span class="token punctuation">,</span>  <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'提供的数组：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'修改后的数组：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>floor<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">提供的数组：<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.7</span>  <span class="token number">1.5</span> <span class="token operator">-</span><span class="token number">0.2</span>  <span class="token number">0.6</span> <span class="token number">10</span><span class="token punctuation">.</span> <span class="token punctuation">]</span>修改后的数组：<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">.</span>  <span class="token number">1</span><span class="token punctuation">.</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span> <span class="token number">10</span><span class="token punctuation">.</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.ceil()</strong></li></ul><p>numpy.ceil() 返回大于或者等于指定表达式的最小整数，即向上取整。 </p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.7</span><span class="token punctuation">,</span>  <span class="token number">1.5</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">0.2</span><span class="token punctuation">,</span>  <span class="token number">0.6</span><span class="token punctuation">,</span>  <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span>  <span class="token punctuation">(</span><span class="token string">'提供的数组：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'修改后的数组：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">提供的数组：<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1.7</span>  <span class="token number">1.5</span> <span class="token operator">-</span><span class="token number">0.2</span>  <span class="token number">0.6</span> <span class="token number">10</span><span class="token punctuation">.</span> <span class="token punctuation">]</span>修改后的数组：<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">.</span>  <span class="token number">2</span><span class="token punctuation">.</span> <span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">10</span><span class="token punctuation">.</span><span class="token punctuation">]</span></code></pre><h4 id="Numpy-算术函数"><a href="#Numpy-算术函数" class="headerlink" title="Numpy 算术函数"></a>Numpy 算术函数</h4><ul><li>NumPy 算术函数包含简单的加减乘除: add()，subtract()，multiply() 和 divide()。</li></ul><p>需要注意的是数组必须具有相同的形状或符合数组广播规则。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> dtype <span class="token operator">=</span> np<span class="token punctuation">.</span>float_<span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'第一个数组：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'第二个数组：'</span><span class="token punctuation">)</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'两个数组相加：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>add<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'两个数组相减：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>subtract<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'两个数组相乘：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>multiply<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'两个数组相除：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>divide<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">第一个数组：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">.</span> <span class="token number">4</span><span class="token punctuation">.</span> <span class="token number">5</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">.</span> <span class="token number">7</span><span class="token punctuation">.</span> <span class="token number">8</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>第二个数组：<span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">10</span> <span class="token number">10</span><span class="token punctuation">]</span>两个数组相加：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">.</span> <span class="token number">11</span><span class="token punctuation">.</span> <span class="token number">12</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">.</span> <span class="token number">14</span><span class="token punctuation">.</span> <span class="token number">15</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">.</span> <span class="token number">17</span><span class="token punctuation">.</span> <span class="token number">18</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>两个数组相减：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">.</span>  <span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">.</span>  <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">.</span>  <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">.</span>  <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">.</span>  <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">.</span>  <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>两个数组相乘：<span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">.</span> <span class="token number">10</span><span class="token punctuation">.</span> <span class="token number">20</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">.</span> <span class="token number">40</span><span class="token punctuation">.</span> <span class="token number">50</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">60</span><span class="token punctuation">.</span> <span class="token number">70</span><span class="token punctuation">.</span> <span class="token number">80</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>两个数组相除：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">0.1</span> <span class="token number">0.2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.3</span> <span class="token number">0.4</span> <span class="token number">0.5</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0.6</span> <span class="token number">0.7</span> <span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.reciprocal()</strong></li></ul><p>numpy.reciprocal() 函数返回参数逐元素的倒数。如 <strong>1/4</strong> 倒数为 <strong>4/1</strong>。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.25</span><span class="token punctuation">,</span>  <span class="token number">1.33</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'我们的数组是：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'调用 reciprocal 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>reciprocal<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">我们的数组是：<span class="token punctuation">[</span>  <span class="token number">0.25</span>   <span class="token number">1.33</span>   <span class="token number">1</span><span class="token punctuation">.</span>   <span class="token number">100</span><span class="token punctuation">.</span>  <span class="token punctuation">]</span>调用 reciprocal 函数：<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">.</span>        <span class="token number">0.7518797</span> <span class="token number">1</span><span class="token punctuation">.</span>        <span class="token number">0.01</span>     <span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.power()</strong></li></ul><p>numpy.power() 函数将第一个输入数组中的元素作为底数，计算它与第二个输入数组中相应元素的幂。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'我们的数组是；'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'调用 power 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>power<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'第二个数组：'</span><span class="token punctuation">)</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'再次调用 power 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>power<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">我们的数组是；<span class="token punctuation">[</span>  <span class="token number">10</span>  <span class="token number">100</span> <span class="token number">1000</span><span class="token punctuation">]</span>调用 power 函数：<span class="token punctuation">[</span>    <span class="token number">100</span>   <span class="token number">10000</span> <span class="token number">1000000</span><span class="token punctuation">]</span>第二个数组：<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span>再次调用 power 函数：<span class="token punctuation">[</span>        <span class="token number">10</span>      <span class="token number">10000</span> <span class="token number">1000000000</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.mod()</strong></li></ul><p>numpy.mod() 计算输入数组中相应元素的相除后的余数。 函数 numpy.remainder() 也产生相同的结果。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">)</span> b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'第一个数组：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'第二个数组：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'调用 mod() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>mod<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'调用 remainder() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>remainder<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">第一个数组：<span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span><span class="token punctuation">]</span>第二个数组：<span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">5</span> <span class="token number">7</span><span class="token punctuation">]</span>调用 mod<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">0</span> <span class="token number">2</span><span class="token punctuation">]</span>调用 remainder<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">0</span> <span class="token number">2</span><span class="token punctuation">]</span></code></pre><h4 id="Numpy-统计函数"><a href="#Numpy-统计函数" class="headerlink" title="Numpy 统计函数"></a>Numpy 统计函数</h4><ul><li><strong>numpy.amin() 和 numpy.amax()</strong></li></ul><p>numpy.amin() 用于计算数组中的元素沿指定轴的最小值。</p><p>numpy.amax() 用于计算数组中的元素沿指定轴的最大值。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'我们的数组是：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'调用 amin() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>amin<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'再次调用 amin() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>amin<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'调用 amax() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>amax<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'再次调用 amax() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>amax<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis <span class="token operator">=</span>  <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">我们的数组是：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">7</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">8</span> <span class="token number">4</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">4</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span>调用 amin<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">3</span> <span class="token number">2</span><span class="token punctuation">]</span>再次调用 amin<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">4</span> <span class="token number">3</span><span class="token punctuation">]</span>调用 amax<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token number">9</span>再次调用 amax<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token punctuation">[</span><span class="token number">8</span> <span class="token number">7</span> <span class="token number">9</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.ptp()</strong></li></ul><p>numpy.ptp()函数计算数组中元素最大值与最小值的差（最大值 - 最小值）。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'我们的数组是：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'调用 ptp() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>ptp<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'沿轴 1 调用 ptp() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>ptp<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis <span class="token operator">=</span>  <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'沿轴 0 调用 ptp() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>ptp<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis <span class="token operator">=</span>  <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">我们的数组是：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">7</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">8</span> <span class="token number">4</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">4</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span>调用 ptp<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token number">7</span>沿轴 <span class="token number">1</span> 调用 ptp<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">5</span> <span class="token number">7</span><span class="token punctuation">]</span>沿轴 <span class="token number">0</span> 调用 ptp<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token punctuation">[</span><span class="token number">6</span> <span class="token number">3</span> <span class="token number">6</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.percentile()</strong></li></ul><p>百分位数是统计中使用的度量，表示小于这个值的观察值的百分比。 函数numpy.percentile()接受以下参数。</p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>percentile<span class="token punctuation">(</span>a<span class="token punctuation">,</span> q<span class="token punctuation">,</span> axis<span class="token punctuation">)</span></code></pre><p>参数说明：</p><ul><li>a: 输入数组</li><li>q: 要计算的百分位数，在 0 ~ 100 之间</li><li>axis: 沿着它计算百分位数的轴</li></ul><p><strong>首先明确百分位数：</strong></p><p>第 p 个百分位数是这样一个值，它使得至少有 p% 的数据项小于或等于这个值，且至少有 (100-p)% 的数据项大于或等于这个值。</p><p>举个例子：高等院校的入学考试成绩经常以百分位数的形式报告。比如，假设某个考生在入学考试中的语文部分的原始分数为 54  分。相对于参加同一考试的其他学生来说，他的成绩如何并不容易知道。但是如果原始分数54分恰好对应的是第70百分位数，我们就能知道大约70%的学生的考分比他低，而约30%的学生考分比他高。 </p><p>这里的 p = 70。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'我们的数组是：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'调用 percentile() 函数：'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 50% 的分位数，就是 a 里排序之后的中位数</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>percentile<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># axis 为 0，在纵列上求</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>percentile<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># axis 为 1，在横行上求</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>percentile<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 保持维度不变</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>percentile<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> keepdims<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre><code>我们的数组是：[[10  7  4] [ 3  2  1]]调用 percentile() 函数：3.5[6.5 4.5 2.5][7. 2.][[7.] [2.]]</code></pre><ul><li><strong>numpy.median()</strong></li></ul><p>numpy.median() 函数用于计算数组 a 中元素的中位数（中值）</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'我们的数组是：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'调用 median() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>median<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'沿轴 0 调用 median() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>median<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis <span class="token operator">=</span>  <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'沿轴 1 调用 median() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>median<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis <span class="token operator">=</span>  <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">我们的数组是：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">30</span> <span class="token number">65</span> <span class="token number">70</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">80</span> <span class="token number">95</span> <span class="token number">10</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">50</span> <span class="token number">90</span> <span class="token number">60</span><span class="token punctuation">]</span><span class="token punctuation">]</span>调用 median<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token number">65.0</span>沿轴 <span class="token number">0</span> 调用 median<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">.</span> <span class="token number">90</span><span class="token punctuation">.</span> <span class="token number">60</span><span class="token punctuation">.</span><span class="token punctuation">]</span>沿轴 <span class="token number">1</span> 调用 median<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token punctuation">[</span><span class="token number">65</span><span class="token punctuation">.</span> <span class="token number">80</span><span class="token punctuation">.</span> <span class="token number">60</span><span class="token punctuation">.</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.mean()</strong></li></ul><p>numpy.mean() 函数返回数组中元素的算术平均值。 如果提供了轴，则沿其计算。</p><p>算术平均值是沿轴的元素的总和除以元素的数量。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'我们的数组是：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'调用 mean() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'沿轴 0 调用 mean() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis <span class="token operator">=</span>  <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'沿轴 1 调用 mean() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis <span class="token operator">=</span>  <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">我们的数组是：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span>调用 mean<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token number">3.6666666666666665</span>沿轴 <span class="token number">0</span> 调用 mean<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token punctuation">[</span><span class="token number">2.66666667</span> <span class="token number">3.66666667</span> <span class="token number">4.66666667</span><span class="token punctuation">]</span>沿轴 <span class="token number">1</span> 调用 mean<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">.</span> <span class="token number">4</span><span class="token punctuation">.</span> <span class="token number">5</span><span class="token punctuation">.</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.average()</strong></li></ul><p>numpy.average() 函数根据在另一个数组中给出的各自的权重计算数组中元素的加权平均值。</p><p>该函数可以接受一个轴参数。 如果没有指定轴，则数组会被展开。</p><p>加权平均值即将各数值乘以相应的权数，然后加总求和得到总体值，再除以总的单位数。</p><p>考虑数组[1,2,3,4]和相应的权重[4,3,2,1]，通过将相应元素的乘积相加，并将和除以权重的和，来计算加权平均值。</p><pre class=" language-python"><code class="language-python">加权平均值 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">*</span><span class="token number">4</span><span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">3</span><span class="token operator">*</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">+</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'我们的数组是：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'调用 average() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>average<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 不指定权重时相当于 mean 函数</span>wts <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'再次调用 average() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>average<span class="token punctuation">(</span>a<span class="token punctuation">,</span>weights <span class="token operator">=</span> wts<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 如果 returned 参数设为 true，则返回权重的和  </span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'权重的和：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>average<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>weights <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> returned <span class="token operator">=</span>  <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">我们的数组是：<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span>调用 average<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token number">2.5</span>再次调用 average<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token number">2.0</span>权重的和：<span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">10.0</span><span class="token punctuation">)</span></code></pre><p>在多维数组中，可以指定用于计算的轴。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'我们的数组是：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'修改后的数组：'</span><span class="token punctuation">)</span>wt <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>average<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis <span class="token operator">=</span>  <span class="token number">1</span><span class="token punctuation">,</span> weights <span class="token operator">=</span> wt<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'修改后的数组：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>average<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis <span class="token operator">=</span>  <span class="token number">1</span><span class="token punctuation">,</span> weights <span class="token operator">=</span> wt<span class="token punctuation">,</span> returned <span class="token operator">=</span>  <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre><code>我们的数组是：[[0 1] [2 3] [4 5]]修改后的数组：[0.625 2.625 4.625]修改后的数组：(array([0.625, 2.625, 4.625]), array([8., 8., 8.]))</code></pre><ul><li><strong>标准差</strong></li></ul><p>标准差是一组数据平均值分散程度的一种度量。</p><p>标准差是方差的算术平方根。</p><p>标准差公式如下：</p><pre class=" language-python"><code class="language-python">std <span class="token operator">=</span> sqrt<span class="token punctuation">(</span>mean<span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">-</span> x<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>如果数组是 [1，2，3，4]，则其平均值为 2.5。 因此，差的平方是 [2.25,0.25,0.25,2.25]，并且再求其平均值的平方根除以 4，即 sqrt(5/4) ，结果为 1.1180339887498949。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token number">1.1180339887498949</span></code></pre><ul><li><strong>方差</strong></li></ul><p>统计中的方差（样本方差）是每个样本值与全体样本值的平均数之差的平方值的平均数，即 mean((x - x.mean())** 2)。 </p><p>换句话说，标准差是方差的平方根。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  <span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>var<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token number">1.25</span></code></pre><h4 id="Numpy-排序、条件刷选函数"><a href="#Numpy-排序、条件刷选函数" class="headerlink" title="Numpy 排序、条件刷选函数"></a>Numpy 排序、条件刷选函数</h4><ul><li><strong>numpy.sort()</strong></li></ul><p>numpy.sort() 函数返回输入数组的排序副本。函数格式如下：</p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis<span class="token punctuation">,</span> kind<span class="token punctuation">,</span> order<span class="token punctuation">)</span></code></pre><p>参数说明：</p><ul><li>a: 要排序的数组</li><li>axis: 沿着它排序数组的轴，如果没有数组会被展开，沿着最后的轴排序， axis=0 按列排序，axis=1 按行排序</li><li>kind: 默认为’quicksort’（快速排序）</li><li>order: 如果数组包含字段，则是要排序的字段</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'我们的数组是：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'调用 sort() 函数：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'按列排序：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>a<span class="token punctuation">,</span> axis <span class="token operator">=</span>  <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 在 sort 函数中排序字段 </span>dt <span class="token operator">=</span> np<span class="token punctuation">.</span>dtype<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span>  <span class="token string">'S10'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">,</span>  int<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">"raju"</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"anil"</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"ravi"</span><span class="token punctuation">,</span>  <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">"amar"</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype <span class="token operator">=</span> dt<span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'我们的数组是：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'按 name 排序：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>a<span class="token punctuation">,</span> order <span class="token operator">=</span>  <span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">我们的数组是：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">7</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">9</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>调用 sort<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">7</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span>按列排序：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">9</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span>我们的数组是：<span class="token punctuation">[</span><span class="token punctuation">(</span>b<span class="token string">'raju'</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>b<span class="token string">'anil'</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>b<span class="token string">'ravi'</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>b<span class="token string">'amar'</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">]</span>按 name 排序：<span class="token punctuation">[</span><span class="token punctuation">(</span>b<span class="token string">'amar'</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>b<span class="token string">'anil'</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>b<span class="token string">'raju'</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>b<span class="token string">'ravi'</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.argsort()</strong></li></ul><p>numpy.argsort() 函数返回的是数组值从小到大的索引值。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'我们的数组是：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'对 x 调用 argsort() 函数：'</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'以排序后的顺序重构原数组：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>x<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'使用循环重构原数组：'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> y<span class="token punctuation">:</span>      <span class="token keyword">print</span> <span class="token punctuation">(</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">我们的数组是：<span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span>对 x 调用 argsort<span class="token punctuation">(</span><span class="token punctuation">)</span> 函数：<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">0</span><span class="token punctuation">]</span>以排序后的顺序重构原数组：<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span>使用循环重构原数组<span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span></code></pre><ul><li><strong>numpy.where()</strong></li></ul><p>numpy.where() 函数返回输入数组中满足给定条件的元素的索引。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'我们的数组是：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span> <span class="token string">'大于 3 的元素的索引：'</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>x <span class="token operator">></span>  <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'使用这些索引来获取满足条件的元素：'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>x<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">我们的数组是：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">.</span> <span class="token number">1</span><span class="token punctuation">.</span> <span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">.</span> <span class="token number">4</span><span class="token punctuation">.</span> <span class="token number">5</span><span class="token punctuation">.</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">.</span> <span class="token number">7</span><span class="token punctuation">.</span> <span class="token number">8</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span>大于 <span class="token number">3</span> 的元素的索引：<span class="token punctuation">(</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>使用这些索引来获取满足条件的元素：<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">.</span> <span class="token number">5</span><span class="token punctuation">.</span> <span class="token number">6</span><span class="token punctuation">.</span> <span class="token number">7</span><span class="token punctuation">.</span> <span class="token number">8</span><span class="token punctuation">.</span><span class="token punctuation">]</span></code></pre><h4 id="Numpy-副本和视图"><a href="#Numpy-副本和视图" class="headerlink" title="Numpy 副本和视图"></a>Numpy 副本和视图</h4><p>副本是一个数据的完整的拷贝，如果我们对副本进行修改，它不会影响到原始数据，物理内存不在同一位置。</p><p>视图是数据的一个别称或引用，通过该别称或引用亦便可访问、操作原有数据，但原有数据不会产生拷贝。如果我们对视图进行修改，它会影响到原始数据，物理内存在同一位置。</p><p><strong>视图一般发生在：</strong></p><ul><li>1、numpy 的切片操作返回原数据的视图。</li><li>2、调用 ndarray 的 view() 函数产生一个视图。</li></ul><p><strong>副本一般发生在：</strong></p><ul><li>Python 序列的切片操作，调用deepCopy()函数。</li><li>调用 ndarray 的 copy() 函数产生一个副本。</li></ul><p><strong>无复制</strong></p><p>简单的赋值不会创建数组对象的副本。 相反，它使用原始数组的相同id()来访问它。 id()返回 Python 对象的通用标识符，类似于 C 中的指针。此外，一个数组的任何变化都反映在另一个数组上。</p><p><strong>视图或浅拷贝</strong></p><p>ndarray.view() 会创建一个新的数组对象，该方法创建的新数组的维数变化不会改变原始数据的维数，视图的数据变化会影响原始数据。</p><p><strong>使用切片创建视图修改数据会影响到原始数组</strong></p><p><strong>副本或深拷贝</strong></p><p>ndarray.copy() 函数创建一个副本。 对副本数据进行修改，不会影响到原始数据，它们物理内存不在同一位置。</p><h4 id="Numpy-矩阵库-Matrix"><a href="#Numpy-矩阵库-Matrix" class="headerlink" title="Numpy 矩阵库(Matrix)"></a>Numpy 矩阵库(Matrix)</h4><p>NumPy 中包含了一个矩阵库 numpy.matlib，该模块中的函数返回的是一个矩阵，而不是 ndarray 对象。</p><p>一个 <img src="https://static.runoob.com/images/mix/mxn.svg" alt="img">的矩阵是一个由<img src="https://static.runoob.com/images/mix/m-numpy.svg" alt="img">行（row）<img src="https://static.runoob.com/images/mix/n-numpy.svg" alt="img">列（column）元素排列成的矩形阵列。</p><p>矩阵里的元素可以是数字、符号或数学式。以下是一个由 6 个数字元素构成的 2 行 3 列的矩阵：</p><p><img src="https://static.runoob.com/images/mix/61f786996bcfb75972dd77712c90122bc8765269.svg" alt="img"></p><ul><li><strong>转置矩阵</strong></li></ul><p>NumPy 中除了可以使用 numpy.transpose 函数来对换数组的维度，还可以使用 T 属性。。</p><p>例如有个 m 行 n 列的矩阵，使用 t() 函数就能转换为 n 行 m 列的矩阵。</p><p><img src="https://www.runoob.com/wp-content/uploads/2020/07/Matrix_transpose.gif" alt="img"></p><p><img src="https://static.runoob.com/images/mix/4a92835c45d5cd15dd00a8d90c14bdb4b8150ef0.svg" alt="img"></p><p><img src="https://static.runoob.com/images/mix/8a1e10800e0d0e3ffa90917139532cfb8348fc63.svg" alt="img"></p><ul><li><strong>numpy.matlib.eye()</strong></li></ul><p>numpy.matlib.eye() 函数返回一个矩阵，对角线元素为 1，其他位置为零。 </p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>matlib<span class="token punctuation">.</span>eye<span class="token punctuation">(</span>n<span class="token punctuation">,</span> M<span class="token punctuation">,</span>k<span class="token punctuation">,</span> dtype<span class="token punctuation">)</span></code></pre><p><strong>参数说明：</strong></p><ul><li><strong>n</strong>: 返回矩阵的行数</li><li><strong>M</strong>: 返回矩阵的列数，默认为 n</li><li><strong>k</strong>: 对角线的索引</li><li><strong>dtype</strong>: 数据类型</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy<span class="token punctuation">.</span>matlib  <span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   <span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>matlib<span class="token punctuation">.</span>eye<span class="token punctuation">(</span>n <span class="token operator">=</span>  <span class="token number">3</span><span class="token punctuation">,</span> M <span class="token operator">=</span>  <span class="token number">4</span><span class="token punctuation">,</span> k <span class="token operator">=</span>  <span class="token number">0</span><span class="token punctuation">,</span> dtype <span class="token operator">=</span>  float<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre><code>[[1. 0. 0. 0.] [0. 1. 0. 0.] [0. 0. 1. 0.]]</code></pre><ul><li><strong>numpy.matlib.identity()</strong></li></ul><p>numpy.matlib.identity() 函数返回给定大小的单位矩阵。</p><p>单位矩阵是个方阵，从左上角到右下角的对角线（称为主对角线）上的元素均为 1，除此以外全都为 0。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy<span class="token punctuation">.</span>matlib  <span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   <span class="token comment" spellcheck="true"># 大小为 5，类型位浮点型 </span><span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>matlib<span class="token punctuation">.</span>identity<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> dtype <span class="token operator">=</span>  float<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span>  <span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">1</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span>  <span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">1</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span>  <span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">1</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">]</span>  <span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">0</span><span class="token punctuation">.</span>  <span class="token number">1</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><p><strong><a href="">其他</a></strong></p><h4 id="Numpy-线性代数"><a href="#Numpy-线性代数" class="headerlink" title="Numpy 线性代数"></a>Numpy 线性代数</h4><p>NumPy  提供了线性代数函数库 linalg，该库包含了线性代数所需的所有功能，可以看看下面的说明：</p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td><code>dot</code></td><td>两个数组的点积，即元素对应相乘。</td></tr><tr><td><code>vdot</code></td><td>两个向量的点积</td></tr><tr><td><code>inner</code></td><td>两个数组的内积</td></tr><tr><td><code>matmul</code></td><td>两个数组的矩阵积</td></tr><tr><td><code>determinant</code></td><td>数组的行列式</td></tr><tr><td><code>solve</code></td><td>求解线性矩阵方程</td></tr><tr><td><code>inv</code></td><td>计算矩阵的乘法逆矩阵</td></tr></tbody></table><ul><li><strong>numpy.dot()</strong></li></ul><p>numpy.dot()   对于两个一维的数组，计算的是这两个数组对应下标元素的乘积和(数学上称之为内积)；对于二维数组，计算的是两个数组的矩阵乘积；对于多维数组，它的通用计算公式如下，即结果数组中的每个元素都是：数组a的最后一维上的所有元素与数组b的倒数第二位上的所有元素的乘积和： dot(a, b)[i,j,k,m] = sum(a[i,j,:] * b[k,:,m])。</p><pre class=" language-python"><code class="language-python">numpy<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> out<span class="token operator">=</span>None<span class="token punctuation">)</span> </code></pre><p><strong>参数说明：</strong> </p><ul><li><strong>a</strong> : ndarray 数组 </li><li><strong>b</strong> : ndarray 数组 </li><li><strong>out</strong> : ndarray, 可选，用来保存dot()的计算结果</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy<span class="token punctuation">.</span>matlib<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">37</span>  <span class="token number">40</span><span class="token punctuation">]</span>  <span class="token punctuation">[</span><span class="token number">85</span>  <span class="token number">92</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><p>计算式为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">*</span><span class="token number">11</span><span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">*</span><span class="token number">12</span><span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token operator">*</span><span class="token number">11</span><span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">*</span><span class="token number">12</span><span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><ul><li><strong>numpy.vdot()</strong></li></ul><p>numpy.vdot() 函数是两个向量的点积，先将数组展开为一维向量然后对应项相乘并求和。 如果第一个参数是复数，那么它的共轭复数会用于计算。 如果参数是多维数组，它会被展开。</p><ul><li><strong>numpy.inner()</strong></li></ul><p>numpy.inner() 函数返回一维数组的向量内积。对于更高的维度，它返回最后一个轴上的和的乘积。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   <span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>inner<span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 等价于 1*0+2*1+3*0</span></code></pre><p>输出结果为：</p><pre><code>2</code></pre><p><strong>多维数组实例</strong></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'数组 a：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span> b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'数组 b：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'内积：'</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>inner<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">数组 a：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span>数组 b：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">11</span> <span class="token number">12</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">13</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">]</span>内积：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">35</span> <span class="token number">41</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">81</span> <span class="token number">95</span><span class="token punctuation">]</span><span class="token punctuation">]</span>数组 a：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span>数组 b：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">11</span> <span class="token number">12</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">13</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">]</span>内积：<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">35</span> <span class="token number">41</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">81</span> <span class="token number">95</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><p>内积计算式为：</p><pre class=" language-python"><code class="language-python"><span class="token number">1</span><span class="token operator">*</span><span class="token number">11</span><span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">*</span><span class="token number">13</span><span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">14</span> <span class="token number">3</span><span class="token operator">*</span><span class="token number">11</span><span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">*</span><span class="token number">13</span><span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">14</span></code></pre><ul><li><strong>numpy.linalg.det()</strong></li></ul><p>numpy.linalg.det() 函数计算输入矩阵的行列式。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>det<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token operator">-</span><span class="token number">2.0</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>det<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">7</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">7</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">8</span> <span class="token operator">-</span> <span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">6</span>  <span class="token number">1</span>  <span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">4</span> <span class="token operator">-</span><span class="token number">2</span>  <span class="token number">5</span><span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">2</span>  <span class="token number">8</span>  <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">306.0</span><span class="token operator">-</span><span class="token number">306</span></code></pre><ul><li><strong>numpy.linalg.solve()</strong></li></ul><p>numpy.linalg.solve() 函数给出了矩阵形式的线性方程的解。</p><p>考虑以下线性方程：</p><pre class=" language-python"><code class="language-python">x <span class="token operator">+</span> y <span class="token operator">+</span> z <span class="token operator">=</span> <span class="token number">6</span>2y <span class="token operator">+</span> 5z <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">4</span>2x <span class="token operator">+</span> 5y <span class="token operator">-</span> z <span class="token operator">=</span> <span class="token number">27</span></code></pre><p>可以使用矩阵表示为：</p><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/118142-7ab3daa7f65551e6.jpg" alt="img"></p><p>如果矩阵成为A、X和B，方程变为：</p><pre class=" language-python"><code class="language-python">AX <span class="token operator">=</span> B或X <span class="token operator">=</span> A<span class="token operator">^</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>B</code></pre><ul><li><strong>numpy.linalg.inv()</strong></li></ul><p>numpy.linalg.inv() 函数计算矩阵的乘法逆矩阵。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np   x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  y <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>inv<span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">.</span>   <span class="token number">1</span><span class="token punctuation">.</span> <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token number">1.5</span> <span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1.0000000e+00</span> <span class="token number">0.0000000e+00</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">8.8817842e-16</span> <span class="token number">1.0000000e+00</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><h3 id="Pandas"><a href="#Pandas" class="headerlink" title="Pandas"></a>Pandas</h3><h4 id="Pandas-数据结构-Series"><a href="#Pandas-数据结构-Series" class="headerlink" title="Pandas 数据结构 - Series"></a>Pandas 数据结构 - Series</h4><p>Pandas Series 类似表格中的一个列（column），类似于一维数组，可以保存任何数据类型。</p><p>Series 由索引（index）和列组成，函数如下：</p><pre class=" language-python"><code class="language-python">pandas<span class="token punctuation">.</span>Series<span class="token punctuation">(</span> data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> dtype<span class="token punctuation">,</span> name<span class="token punctuation">,</span> copy<span class="token punctuation">)</span></code></pre><p>参数说明：</p><ul><li>data：一组数据(ndarray 类型)。</li><li>index：数据索引标签，如果不指定，默认从 0 开始。</li><li>dtype：数据类型，默认会自己判断。</li><li>name：设置名称。</li><li>copy：拷贝数据，默认为 False。</li></ul><p>创建一个简单的 Series 实例：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pda <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>myvar <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>myvar<span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><img src="https://www.runoob.com/wp-content/uploads/2021/04/FD659034-1715-4020-A6BF-400FAC9CE849.jpg" alt="img" style="zoom:50%;" /><p>从上图可知，如果没有指定索引，索引值就从 0 开始，我们可以根据索引值读取数据：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pda <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>myvar <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>myvar<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><pre class=" language-python"><code class="language-python"><span class="token number">2</span></code></pre><p>我们可以指定索引值，如下实例：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pda <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Google"</span><span class="token punctuation">,</span> <span class="token string">"Runoob"</span><span class="token punctuation">,</span> <span class="token string">"Wiki"</span><span class="token punctuation">]</span>myvar <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>a<span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>myvar<span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><img src="https://www.runoob.com/wp-content/uploads/2021/04/32B49FA4-ED68-446A-9EBF-C52FCB6D0CD6.jpg" alt="img" style="zoom:50%;" /><p>根据索引值读取数据:</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pda <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Google"</span><span class="token punctuation">,</span> <span class="token string">"Runoob"</span><span class="token punctuation">,</span> <span class="token string">"Wiki"</span><span class="token punctuation">]</span>myvar <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>a<span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">,</span> <span class="token string">"z"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>myvar<span class="token punctuation">[</span><span class="token string">"y"</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><pre class=" language-python"><code class="language-python">Runoob</code></pre><p>我们也可以使用 key/value 对象，类似字典来创建 Series：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdsites <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;1: "Google", 2: "Runoob", 3: "Wiki"&amp;#125;</span>myvar <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>sites<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>myvar<span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><img src="https://www.runoob.com/wp-content/uploads/2021/04/C01F8A55-5D06-4FAD-BE34-A569A8B05E2C.jpg" alt="img" style="zoom: 67%;" /><p>从上图可知，字典的 key 变成了索引值。</p><p>如果我们只需要字典中的一部分数据，只需要指定需要数据的索引即可，如下实例：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdsites <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;1: "Google", 2: "Runoob", 3: "Wiki"&amp;#125;</span>myvar <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>sites<span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>myvar<span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><p><img src="https://www.runoob.com/wp-content/uploads/2021/04/6CC2CFBA-3CC5-459D-8FE0-D89C1EE1AEB9.jpg" alt="img"></p><p>设置 Series 名称参数：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdsites <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;1: "Google", 2: "Runoob", 3: "Wiki"&amp;#125;</span>myvar <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>sites<span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">"RUNOOB-Series-TEST"</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>myvar<span class="token punctuation">)</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2021/04/1FB6D419-06D7-4229-9148-1F4E79DE6ACF.jpg" alt="img"></p><h4 id="Pandas-数据结构-DataFrame"><a href="#Pandas-数据结构-DataFrame" class="headerlink" title="Pandas 数据结构 - DataFrame"></a>Pandas 数据结构 - DataFrame</h4><p>DataFrame 是一个表格型的数据结构，它含有一组有序的列，每列可以是不同的值类型（数值、字符串、布尔型值）。DataFrame 既有行索引也有列索引，它可以被看做由 Series 组成的字典（共同用一个索引）。</p><p><img src="https://www.runoob.com/wp-content/uploads/2021/04/pandas-DataStructure.png" alt="img"></p><img src="https://www.runoob.com/wp-content/uploads/2021/04/df-dp.png" alt="img" style="zoom: 80%;" /><p>DataFrame 构造方法如下：</p><pre class=" language-python"><code class="language-python">pandas<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span> data<span class="token punctuation">,</span> index<span class="token punctuation">,</span> columns<span class="token punctuation">,</span> dtype<span class="token punctuation">,</span> copy<span class="token punctuation">)</span></code></pre><p>参数说明：</p><ul><li>data：一组数据(ndarray、series, map, lists, dict 等类型)。</li><li>index：索引值，或者可以称为行标签。</li><li>columns：列标签，默认为 RangeIndex (0, 1, 2, …, n) 。</li><li>dtype：数据类型。</li><li>copy：拷贝数据，默认为 False。</li></ul><p>Pandas DataFrame 是一个二维的数组结构，类似二维数组。</p><p>使用列表创建：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'Runoob'</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'Wiki'</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">]</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'Site'</span><span class="token punctuation">,</span><span class="token string">'Age'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>float<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><p><img src="https://www.runoob.com/wp-content/uploads/2021/04/BE773E8F-DEC2-4434-8630-91E660A1DFC0.jpg" alt="img"></p><p>以下实例使用 ndarrays 创建，ndarray 的长度必须相同， 如果传递了 index，则索引的长度应等于数组的长度。如果没有传递索引，则默认情况下，索引将是range(n)，其中n是数组长度。</p><p>使用 ndarrays  创建：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'Site':['Google', 'Runoob', 'Wiki'], 'Age':[10, 12, 13]&amp;#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>df<span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><p><img src="https://www.runoob.com/wp-content/uploads/2021/04/BE773E8F-DEC2-4434-8630-91E660A1DFC0.jpg" alt="img"></p><p>从以上输出结果可以知道， DataFrame 数据类型一个表格，包含 rows（行） 和 columns（列）：</p><p><img src="https://www.runoob.com/wp-content/uploads/2021/04/rows-cloumns.png" alt="img"></p><p>还可以使用字典（key/value），其中字典的 key 为列名:</p><p>使用字典创建：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'a': 1, 'b': 2&amp;#125;,&amp;#123;'a': 5, 'b': 10, 'c': 20&amp;#125;]</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>df<span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">   a   b     c<span class="token number">0</span>  <span class="token number">1</span>   <span class="token number">2</span>   NaN<span class="token number">1</span>  <span class="token number">5</span>  <span class="token number">10</span>  <span class="token number">20.0</span></code></pre><p>没有对应的部分数据为 NaN。</p><p>Pandas 可以使用 loc 属性返回指定行的数据，如果没有设置索引，第一行索引为 0，第二行索引为 1，以此类推：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">"calories"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">420</span><span class="token punctuation">,</span> <span class="token number">380</span><span class="token punctuation">,</span> <span class="token number">390</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">"duration"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span class="token comment" spellcheck="true"># 数据载入到 DataFrame 对象</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 返回第一行</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 返回第二行</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>输出结果如下：</p><pre class=" language-python"><code class="language-python">calories    <span class="token number">420</span>duration     <span class="token number">50</span>Name<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> dtype<span class="token punctuation">:</span> int64calories    <span class="token number">380</span>duration     <span class="token number">40</span>Name<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> dtype<span class="token punctuation">:</span> int64</code></pre><p>注意：返回结果其实就是一个  Pandas Series 数据。</p><p>也可以返回多行数据，使用 [[ … ]] 格式，… 为各行的索引，以逗号隔开：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"calories"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">420</span><span class="token punctuation">,</span> <span class="token number">380</span><span class="token punctuation">,</span> <span class="token number">390</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"duration"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span class="token comment" spellcheck="true"># 数据载入到 DataFrame 对象</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 返回第一行和第二行</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">   calories  duration<span class="token number">0</span>       <span class="token number">420</span>        <span class="token number">50</span><span class="token number">1</span>       <span class="token number">380</span>        <span class="token number">40</span></code></pre><p>注意：返回结果其实就是一个  Pandas DataFrame 数据。</p><p>我们可以指定索引值，如下实例：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"calories"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">420</span><span class="token punctuation">,</span> <span class="token number">380</span><span class="token punctuation">,</span> <span class="token number">390</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"duration"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"day1"</span><span class="token punctuation">,</span> <span class="token string">"day2"</span><span class="token punctuation">,</span> <span class="token string">"day3"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span> </code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">      calories  durationday1       <span class="token number">420</span>        <span class="token number">50</span>day2       <span class="token number">380</span>        <span class="token number">40</span>day3       <span class="token number">390</span>        <span class="token number">45</span></code></pre><p>Pandas 可以使用 loc 属性返回指定索引对应到某一行：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"calories"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">420</span><span class="token punctuation">,</span> <span class="token number">380</span><span class="token punctuation">,</span> <span class="token number">390</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"duration"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"day1"</span><span class="token punctuation">,</span> <span class="token string">"day2"</span><span class="token punctuation">,</span> <span class="token string">"day3"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 指定索引</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">"day2"</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">calories    <span class="token number">380</span>duration     <span class="token number">40</span>Name<span class="token punctuation">:</span> day2<span class="token punctuation">,</span> dtype<span class="token punctuation">:</span> int64</code></pre><h4 id="Pandas-CSV-文件"><a href="#Pandas-CSV-文件" class="headerlink" title="Pandas CSV 文件"></a>Pandas CSV 文件</h4><p>CSV（Comma-Separated Values，逗号分隔值，有时也称为字符分隔值，因为分隔字符也可以不是逗号），其文件以纯文本形式存储表格数据（数字和文本）。</p><p>CSV 是一种通用的、相对简单的文件格式，被用户、商业和科学广泛应用。</p><p>Pandas 可以很方便的处理  CSV 文件，本文以 <a href="https://static.runoob.com/download/nba.csv">nba.csv</a> 为例，你可以<a href="https://static.runoob.com/download/nba.csv">下载 nba.csv</a> 或<a href="https://static.runoob.com/download/nba.csv.txt">打开 nba.csv</a> 查看。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'nba.csv'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>to_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre><p>to_string() 用于返回 DataFrame 类型的数据，如果不使用该函数，则输出结果为数据的前面 5 行和末尾 5 行，中间部分以 … 代替。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'nba.csv'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span> </code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">              Name            Team  Number Position   Age Height  Weight            College     Salary<span class="token number">0</span>    Avery Bradley  Boston Celtics     <span class="token number">0.0</span>       PG  <span class="token number">25.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">2</span>   <span class="token number">180.0</span>              Texas  <span class="token number">7730337.0</span><span class="token number">1</span>      Jae Crowder  Boston Celtics    <span class="token number">99.0</span>       SF  <span class="token number">25.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">6</span>   <span class="token number">235.0</span>          Marquette  <span class="token number">6796117.0</span><span class="token number">2</span>     John Holland  Boston Celtics    <span class="token number">30.0</span>       SG  <span class="token number">27.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">5</span>   <span class="token number">205.0</span>  Boston University        NaN<span class="token number">3</span>      R<span class="token punctuation">.</span>J<span class="token punctuation">.</span> Hunter  Boston Celtics    <span class="token number">28.0</span>       SG  <span class="token number">22.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">5</span>   <span class="token number">185.0</span>      Georgia State  <span class="token number">1148640.0</span><span class="token number">4</span>    Jonas Jerebko  Boston Celtics     <span class="token number">8.0</span>       PF  <span class="token number">29.0</span>   <span class="token number">6</span><span class="token operator">-</span><span class="token number">10</span>   <span class="token number">231.0</span>                NaN  <span class="token number">5000000.0</span><span class="token punctuation">.</span><span class="token punctuation">.</span>             <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>             <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>                <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">453</span>   Shelvin Mack       Utah Jazz     <span class="token number">8.0</span>       PG  <span class="token number">26.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">3</span>   <span class="token number">203.0</span>             Butler  <span class="token number">2433333.0</span><span class="token number">454</span>      Raul Neto       Utah Jazz    <span class="token number">25.0</span>       PG  <span class="token number">24.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">1</span>   <span class="token number">179.0</span>                NaN   <span class="token number">900000.0</span><span class="token number">455</span>   Tibor Pleiss       Utah Jazz    <span class="token number">21.0</span>        C  <span class="token number">26.0</span>    <span class="token number">7</span><span class="token operator">-</span><span class="token number">3</span>   <span class="token number">256.0</span>                NaN  <span class="token number">2900000.0</span><span class="token number">456</span>    Jeff Withey       Utah Jazz    <span class="token number">24.0</span>        C  <span class="token number">26.0</span>    <span class="token number">7</span><span class="token operator">-</span><span class="token number">0</span>   <span class="token number">231.0</span>             Kansas   <span class="token number">947276.0</span><span class="token number">457</span>            NaN             NaN     NaN      NaN   NaN    NaN     NaN                NaN        NaN</code></pre><p>我们也可以使用 to_csv() 方法将 DataFrame 存储为 csv 文件：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd <span class="token comment" spellcheck="true"># 三个字段 name, site, age</span>nme <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Google"</span><span class="token punctuation">,</span> <span class="token string">"Runoob"</span><span class="token punctuation">,</span> <span class="token string">"Taobao"</span><span class="token punctuation">,</span> <span class="token string">"Wiki"</span><span class="token punctuation">]</span>st <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"www.google.com"</span><span class="token punctuation">,</span> <span class="token string">"www.runoob.com"</span><span class="token punctuation">,</span> <span class="token string">"www.taobao.com"</span><span class="token punctuation">,</span> <span class="token string">"www.wikipedia.org"</span><span class="token punctuation">]</span>ag <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 字典</span>dict <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'name': nme, 'site': st, 'age': ag&amp;#125; </span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>dict<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 保存 dataframe</span>df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'site.csv'</span><span class="token punctuation">)</span></code></pre><p>执行成功后，我们打开 site.csv 文件，显示结果如下：</p><p><img src="https://www.runoob.com/wp-content/uploads/2021/05/9758194A-0D8E-4C53-95A0-157C690614E6.jpg" alt="img"></p><p><strong>数据处理</strong></p><ul><li><strong>head()</strong></li></ul><p>head( <em>n</em> ) 方法用于读取前面的 n 行，如果不填参数 n ，默认返回 5 行。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'nba.csv'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">            Name            Team  Number Position   Age Height  Weight            College     Salary<span class="token number">0</span>  Avery Bradley  Boston Celtics     <span class="token number">0.0</span>       PG  <span class="token number">25.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">2</span>   <span class="token number">180.0</span>              Texas  <span class="token number">7730337.0</span><span class="token number">1</span>    Jae Crowder  Boston Celtics    <span class="token number">99.0</span>       SF  <span class="token number">25.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">6</span>   <span class="token number">235.0</span>          Marquette  <span class="token number">6796117.0</span><span class="token number">2</span>   John Holland  Boston Celtics    <span class="token number">30.0</span>       SG  <span class="token number">27.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">5</span>   <span class="token number">205.0</span>  Boston University        NaN<span class="token number">3</span>    R<span class="token punctuation">.</span>J<span class="token punctuation">.</span> Hunter  Boston Celtics    <span class="token number">28.0</span>       SG  <span class="token number">22.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">5</span>   <span class="token number">185.0</span>      Georgia State  <span class="token number">1148640.0</span><span class="token number">4</span>  Jonas Jerebko  Boston Celtics     <span class="token number">8.0</span>       PF  <span class="token number">29.0</span>   <span class="token number">6</span><span class="token operator">-</span><span class="token number">10</span>   <span class="token number">231.0</span>                NaN  <span class="token number">5000000.0</span></code></pre><p>读取10行：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'nba.csv'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">            Name            Team  Number Position   Age Height  Weight            College      Salary<span class="token number">0</span>  Avery Bradley  Boston Celtics     <span class="token number">0.0</span>       PG  <span class="token number">25.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">2</span>   <span class="token number">180.0</span>              Texas   <span class="token number">7730337.0</span><span class="token number">1</span>    Jae Crowder  Boston Celtics    <span class="token number">99.0</span>       SF  <span class="token number">25.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">6</span>   <span class="token number">235.0</span>          Marquette   <span class="token number">6796117.0</span><span class="token number">2</span>   John Holland  Boston Celtics    <span class="token number">30.0</span>       SG  <span class="token number">27.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">5</span>   <span class="token number">205.0</span>  Boston University         NaN<span class="token number">3</span>    R<span class="token punctuation">.</span>J<span class="token punctuation">.</span> Hunter  Boston Celtics    <span class="token number">28.0</span>       SG  <span class="token number">22.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">5</span>   <span class="token number">185.0</span>      Georgia State   <span class="token number">1148640.0</span><span class="token number">4</span>  Jonas Jerebko  Boston Celtics     <span class="token number">8.0</span>       PF  <span class="token number">29.0</span>   <span class="token number">6</span><span class="token operator">-</span><span class="token number">10</span>   <span class="token number">231.0</span>                NaN   <span class="token number">5000000.0</span><span class="token number">5</span>   Amir Johnson  Boston Celtics    <span class="token number">90.0</span>       PF  <span class="token number">29.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">9</span>   <span class="token number">240.0</span>                NaN  <span class="token number">12000000.0</span><span class="token number">6</span>  Jordan Mickey  Boston Celtics    <span class="token number">55.0</span>       PF  <span class="token number">21.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">8</span>   <span class="token number">235.0</span>                LSU   <span class="token number">1170960.0</span><span class="token number">7</span>   Kelly Olynyk  Boston Celtics    <span class="token number">41.0</span>        C  <span class="token number">25.0</span>    <span class="token number">7</span><span class="token operator">-</span><span class="token number">0</span>   <span class="token number">238.0</span>            Gonzaga   <span class="token number">2165160.0</span><span class="token number">8</span>   Terry Rozier  Boston Celtics    <span class="token number">12.0</span>       PG  <span class="token number">22.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">2</span>   <span class="token number">190.0</span>         Louisville   <span class="token number">1824360.0</span><span class="token number">9</span>   Marcus Smart  Boston Celtics    <span class="token number">36.0</span>       PG  <span class="token number">22.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">4</span>   <span class="token number">220.0</span>     Oklahoma State   <span class="token number">3431040.0</span></code></pre><ul><li><strong>tail()</strong></li></ul><p> tail( <em>n</em> ) 方法用于读取尾部的 n 行，如果不填参数 n ，默认返回 5 行，空行各个字段的值返回 <strong>NaN</strong>。</p><p>读取末尾 5 行：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'nba.csv'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>tail<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">             Name       Team  Number Position   Age Height  Weight College     Salary<span class="token number">453</span>  Shelvin Mack  Utah Jazz     <span class="token number">8.0</span>       PG  <span class="token number">26.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">3</span>   <span class="token number">203.0</span>  Butler  <span class="token number">2433333.0</span><span class="token number">454</span>     Raul Neto  Utah Jazz    <span class="token number">25.0</span>       PG  <span class="token number">24.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">1</span>   <span class="token number">179.0</span>     NaN   <span class="token number">900000.0</span><span class="token number">455</span>  Tibor Pleiss  Utah Jazz    <span class="token number">21.0</span>        C  <span class="token number">26.0</span>    <span class="token number">7</span><span class="token operator">-</span><span class="token number">3</span>   <span class="token number">256.0</span>     NaN  <span class="token number">2900000.0</span><span class="token number">456</span>   Jeff Withey  Utah Jazz    <span class="token number">24.0</span>        C  <span class="token number">26.0</span>    <span class="token number">7</span><span class="token operator">-</span><span class="token number">0</span>   <span class="token number">231.0</span>  Kansas   <span class="token number">947276.0</span><span class="token number">457</span>           NaN        NaN     NaN      NaN   NaN    NaN     NaN     NaN        NaN</code></pre><p>读取末尾 10 行：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'nba.csv'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>tail<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python">               Name       Team  Number Position   Age Height  Weight   College      Salary<span class="token number">448</span>  Gordon Hayward  Utah Jazz    <span class="token number">20.0</span>       SF  <span class="token number">26.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">8</span>   <span class="token number">226.0</span>    Butler  <span class="token number">15409570.0</span><span class="token number">449</span>     Rodney Hood  Utah Jazz     <span class="token number">5.0</span>       SG  <span class="token number">23.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">8</span>   <span class="token number">206.0</span>      Duke   <span class="token number">1348440.0</span><span class="token number">450</span>      Joe Ingles  Utah Jazz     <span class="token number">2.0</span>       SF  <span class="token number">28.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">8</span>   <span class="token number">226.0</span>       NaN   <span class="token number">2050000.0</span><span class="token number">451</span>   Chris Johnson  Utah Jazz    <span class="token number">23.0</span>       SF  <span class="token number">26.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">6</span>   <span class="token number">206.0</span>    Dayton    <span class="token number">981348.0</span><span class="token number">452</span>      Trey Lyles  Utah Jazz    <span class="token number">41.0</span>       PF  <span class="token number">20.0</span>   <span class="token number">6</span><span class="token operator">-</span><span class="token number">10</span>   <span class="token number">234.0</span>  Kentucky   <span class="token number">2239800.0</span><span class="token number">453</span>    Shelvin Mack  Utah Jazz     <span class="token number">8.0</span>       PG  <span class="token number">26.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">3</span>   <span class="token number">203.0</span>    Butler   <span class="token number">2433333.0</span><span class="token number">454</span>       Raul Neto  Utah Jazz    <span class="token number">25.0</span>       PG  <span class="token number">24.0</span>    <span class="token number">6</span><span class="token operator">-</span><span class="token number">1</span>   <span class="token number">179.0</span>       NaN    <span class="token number">900000.0</span><span class="token number">455</span>    Tibor Pleiss  Utah Jazz    <span class="token number">21.0</span>        C  <span class="token number">26.0</span>    <span class="token number">7</span><span class="token operator">-</span><span class="token number">3</span>   <span class="token number">256.0</span>       NaN   <span class="token number">2900000.0</span><span class="token number">456</span>     Jeff Withey  Utah Jazz    <span class="token number">24.0</span>        C  <span class="token number">26.0</span>    <span class="token number">7</span><span class="token operator">-</span><span class="token number">0</span>   <span class="token number">231.0</span>    Kansas    <span class="token number">947276.0</span><span class="token number">457</span>             NaN        NaN     NaN      NaN   NaN    NaN     NaN       NaN         NaN</code></pre><ul><li><strong>info()</strong></li></ul><p>info() 方法返回表格的一些基本信息：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'nba.csv'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre><p>输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'pandas.core.frame.DataFrame'</span><span class="token operator">></span>RangeIndex<span class="token punctuation">:</span> <span class="token number">458</span> entries<span class="token punctuation">,</span> <span class="token number">0</span> to <span class="token number">457</span>          <span class="token comment" spellcheck="true"># 行数，458 行，第一行编号为 0</span>Data columns <span class="token punctuation">(</span>total <span class="token number">9</span> columns<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 列数，9列</span> <span class="token comment" spellcheck="true">#   Column    Non-Null Count  Dtype       # 各列的数据类型</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>  <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>    <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>  <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>   <span class="token number">0</span>   Name      <span class="token number">457</span> non<span class="token operator">-</span>null    object  <span class="token number">1</span>   Team      <span class="token number">457</span> non<span class="token operator">-</span>null    object  <span class="token number">2</span>   Number    <span class="token number">457</span> non<span class="token operator">-</span>null    float64 <span class="token number">3</span>   Position  <span class="token number">457</span> non<span class="token operator">-</span>null    object  <span class="token number">4</span>   Age       <span class="token number">457</span> non<span class="token operator">-</span>null    float64 <span class="token number">5</span>   Height    <span class="token number">457</span> non<span class="token operator">-</span>null    object  <span class="token number">6</span>   Weight    <span class="token number">457</span> non<span class="token operator">-</span>null    float64 <span class="token number">7</span>   College   <span class="token number">373</span> non<span class="token operator">-</span>null    object         <span class="token comment" spellcheck="true"># non-null，意思为非空的数据    </span> <span class="token number">8</span>   Salary    <span class="token number">446</span> non<span class="token operator">-</span>null    float64dtypes<span class="token punctuation">:</span> float64<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> object<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>                 <span class="token comment" spellcheck="true"># 类型</span></code></pre><p>non-null 为非空数据，我们可以看到上面的信息中，总共 458 行，College 字段的空值最多。</p><h4 id="Pandas-JSON"><a href="#Pandas-JSON" class="headerlink" title="Pandas JSON"></a>Pandas JSON</h4><p>Pandas 可以很方便的处理  JSON 数据，本文以 <a href="https://static.runoob.com/download/sites.json">sites.json</a> 为例，内容如下：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span>   &amp;#<span class="token number">123</span><span class="token punctuation">;</span>   <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"A001"</span><span class="token punctuation">,</span>   <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"菜鸟教程"</span><span class="token punctuation">,</span>   <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"www.runoob.com"</span><span class="token punctuation">,</span>   <span class="token property">"likes"</span><span class="token operator">:</span> <span class="token number">61</span>   &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>   &amp;#<span class="token number">123</span><span class="token punctuation">;</span>   <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"A002"</span><span class="token punctuation">,</span>   <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Google"</span><span class="token punctuation">,</span>   <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"www.google.com"</span><span class="token punctuation">,</span>   <span class="token property">"likes"</span><span class="token operator">:</span> <span class="token number">124</span>   &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>   &amp;#<span class="token number">123</span><span class="token punctuation">;</span>   <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"A003"</span><span class="token punctuation">,</span>   <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"淘宝"</span><span class="token punctuation">,</span>   <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"www.taobao.com"</span><span class="token punctuation">,</span>   <span class="token property">"likes"</span><span class="token operator">:</span> <span class="token number">45</span>   &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">]</span></code></pre><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_json<span class="token punctuation">(</span><span class="token string">'sites.json'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>to_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre><p>to_string() 用于返回 DataFrame 类型的数据，我们也可以直接处理 JSON 字符串。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata <span class="token operator">=</span><span class="token punctuation">[</span>   <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"A001"</span><span class="token punctuation">,</span>    <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"菜鸟教程"</span><span class="token punctuation">,</span>    <span class="token string">"url"</span><span class="token punctuation">:</span> <span class="token string">"www.runoob.com"</span><span class="token punctuation">,</span>    <span class="token string">"likes"</span><span class="token punctuation">:</span> <span class="token number">61</span>   <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span>   <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"A002"</span><span class="token punctuation">,</span>    <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"Google"</span><span class="token punctuation">,</span>    <span class="token string">"url"</span><span class="token punctuation">:</span> <span class="token string">"www.google.com"</span><span class="token punctuation">,</span>    <span class="token string">"likes"</span><span class="token punctuation">:</span> <span class="token number">124</span>   <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span>   <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">"id"</span><span class="token punctuation">:</span> <span class="token string">"A003"</span><span class="token punctuation">,</span>    <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"淘宝"</span><span class="token punctuation">,</span>    <span class="token string">"url"</span><span class="token punctuation">:</span> <span class="token string">"www.taobao.com"</span><span class="token punctuation">,</span>    <span class="token string">"likes"</span><span class="token punctuation">:</span> <span class="token number">45</span>   <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span class="token punctuation">]</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span> </code></pre><p>以上实例输出结果为：</p><pre class=" language-python"><code class="language-python">     id    name             url  likes<span class="token number">0</span>  A001    菜鸟教程  www<span class="token punctuation">.</span>runoob<span class="token punctuation">.</span>com     <span class="token number">61</span><span class="token number">1</span>  A002  Google  www<span class="token punctuation">.</span>google<span class="token punctuation">.</span>com    <span class="token number">124</span><span class="token number">2</span>  A003      淘宝  www<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>com     <span class="token number">45</span></code></pre><p>JSON 对象与 Python 字典具有相同的格式，所以我们可以直接将 Python 字典转化为 DataFrame 数据：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token comment" spellcheck="true"># 字典格式的 JSON                                                </span>s <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token string">"col1"</span><span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;"row1":1,"row2":2,"row3":3&amp;#125;,</span>       <span class="token string">"col2"</span><span class="token punctuation">:</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;"row1":"x","row2":"y","row3":"z"&amp;#125;</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span><span class="token comment" spellcheck="true"># 读取 JSON 转为 DataFrame                                              </span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span></code></pre><p>以上实例输出结果为：</p><pre class=" language-python"><code class="language-python">      col1 col2row1     <span class="token number">1</span>    xrow2     <span class="token number">2</span>    yrow3     <span class="token number">3</span>    z</code></pre><p>从 URL 中读取 JSON 数据：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdURL <span class="token operator">=</span> <span class="token string">'https://static.runoob.com/download/sites.json'</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_json<span class="token punctuation">(</span>URL<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span></code></pre><p>以上实例输出结果为：</p><pre class=" language-python"><code class="language-python">     id    name             url  likes<span class="token number">0</span>  A001    菜鸟教程  www<span class="token punctuation">.</span>runoob<span class="token punctuation">.</span>com     <span class="token number">61</span><span class="token number">1</span>  A002  Google  www<span class="token punctuation">.</span>google<span class="token punctuation">.</span>com    <span class="token number">124</span><span class="token number">2</span>  A003      淘宝  www<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>com     <span class="token number">45</span></code></pre><p><strong>内嵌的 JSON 数据</strong></p><p>假设有一组内嵌的 JSON 数据文件 <strong>nested_list.json</strong> ：</p><p>nested_list.json 文件内容</p><pre class=" language-json"><code class="language-json">&amp;#<span class="token number">123</span><span class="token punctuation">;</span>   <span class="token property">"school_name"</span><span class="token operator">:</span> <span class="token string">"ABC primary school"</span><span class="token punctuation">,</span>   <span class="token property">"class"</span><span class="token operator">:</span> <span class="token string">"Year 1"</span><span class="token punctuation">,</span>   <span class="token property">"students"</span><span class="token operator">:</span> <span class="token punctuation">[</span>   &amp;#<span class="token number">123</span><span class="token punctuation">;</span>     <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"A001"</span><span class="token punctuation">,</span>     <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Tom"</span><span class="token punctuation">,</span>     <span class="token property">"math"</span><span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>     <span class="token property">"physics"</span><span class="token operator">:</span> <span class="token number">66</span><span class="token punctuation">,</span>     <span class="token property">"chemistry"</span><span class="token operator">:</span> <span class="token number">61</span>   &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>   &amp;#<span class="token number">123</span><span class="token punctuation">;</span>     <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"A002"</span><span class="token punctuation">,</span>     <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"James"</span><span class="token punctuation">,</span>     <span class="token property">"math"</span><span class="token operator">:</span> <span class="token number">89</span><span class="token punctuation">,</span>     <span class="token property">"physics"</span><span class="token operator">:</span> <span class="token number">76</span><span class="token punctuation">,</span>     <span class="token property">"chemistry"</span><span class="token operator">:</span> <span class="token number">51</span>   &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>   &amp;#<span class="token number">123</span><span class="token punctuation">;</span>     <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"A003"</span><span class="token punctuation">,</span>     <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Jenny"</span><span class="token punctuation">,</span>     <span class="token property">"math"</span><span class="token operator">:</span> <span class="token number">79</span><span class="token punctuation">,</span>     <span class="token property">"physics"</span><span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span>     <span class="token property">"chemistry"</span><span class="token operator">:</span> <span class="token number">78</span>   &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">]</span>&amp;#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><p>使用以下代码格式化完整内容：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_json<span class="token punctuation">(</span><span class="token string">'nested_list.json'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span></code></pre><p>以上实例输出结果为：</p><pre class=" language-python"><code class="language-python">          school_name   <span class="token keyword">class</span>                                           <span class="token class-name">students</span><span class="token number">0</span>  ABC primary school  Year <span class="token number">1</span>  <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'id': 'A001', 'name': 'Tom', 'math': 60, 'phy...</span><span class="token number">1</span>  ABC primary school  Year <span class="token number">1</span>  <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'id': 'A002', 'name': 'James', 'math': 89, 'p...</span><span class="token number">2</span>  ABC primary school  Year <span class="token number">1</span>  <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;'id': 'A003', 'name': 'Jenny', 'math': 79, 'p...</span></code></pre><p>这时我们就需要使用到 json_normalize() 方法将内嵌的数据完整的解析出来：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> json<span class="token comment" spellcheck="true"># 使用 Python JSON 模块载入数据</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'nested_list.json'</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 展平数据</span>df_nested_list <span class="token operator">=</span> pd<span class="token punctuation">.</span>json_normalize<span class="token punctuation">(</span>data<span class="token punctuation">,</span> record_path <span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'students'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df_nested_list<span class="token punctuation">)</span></code></pre><p>以上实例输出结果为：</p><pre class=" language-python"><code class="language-python">     id   name  math  physics  chemistry<span class="token number">0</span>  A001    Tom    <span class="token number">60</span>       <span class="token number">66</span>         <span class="token number">61</span><span class="token number">1</span>  A002  James    <span class="token number">89</span>       <span class="token number">76</span>         <span class="token number">51</span><span class="token number">2</span>  A003  Jenny    <span class="token number">79</span>       <span class="token number">90</span>         <span class="token number">78</span></code></pre><p>data = json.loads(f.read()) 使用 Python JSON 模块载入数据。</p><p>json_normalize() 使用了参数 record_path 并设置为 [‘students’] 用于展开内嵌的 JSON 数据 students。</p><p>显示结果还没有包含 school_name 和 class 元素，如果需要展示出来可以使用 meta 参数来显示这些元数据：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> json<span class="token comment" spellcheck="true"># 使用 Python JSON 模块载入数据</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'nested_list.json'</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 展平数据</span>df_nested_list <span class="token operator">=</span> pd<span class="token punctuation">.</span>json_normalize<span class="token punctuation">(</span>    data<span class="token punctuation">,</span>     record_path <span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'students'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        meta<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'school_name'</span><span class="token punctuation">,</span> <span class="token string">'class'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df_nested_list<span class="token punctuation">)</span></code></pre><p>以上实例输出结果为：</p><pre class=" language-python"><code class="language-python">     id   name  math  physics  chemistry         school_name   <span class="token keyword">class</span><span class="token class-name">0</span>  A001    Tom    <span class="token number">60</span>       <span class="token number">66</span>         <span class="token number">61</span>  ABC primary school  Year <span class="token number">1</span><span class="token number">1</span>  A002  James    <span class="token number">89</span>       <span class="token number">76</span>         <span class="token number">51</span>  ABC primary school  Year <span class="token number">1</span><span class="token number">2</span>  A003  Jenny    <span class="token number">79</span>       <span class="token number">90</span>         <span class="token number">78</span>  ABC primary school  Year <span class="token number">1</span></code></pre><p>接下来，让我们尝试读取更复杂的 JSON 数据，该数据嵌套了列表和字典，数据文件 nested_mix.json 如下：</p><pre class=" language-json"><code class="language-json">&amp;#<span class="token number">123</span><span class="token punctuation">;</span>   <span class="token property">"school_name"</span><span class="token operator">:</span> <span class="token string">"local primary school"</span><span class="token punctuation">,</span>   <span class="token property">"class"</span><span class="token operator">:</span> <span class="token string">"Year 1"</span><span class="token punctuation">,</span>   <span class="token property">"info"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token property">"president"</span><span class="token operator">:</span> <span class="token string">"John Kasich"</span><span class="token punctuation">,</span>    <span class="token property">"address"</span><span class="token operator">:</span> <span class="token string">"ABC road, London, UK"</span><span class="token punctuation">,</span>    <span class="token property">"contacts"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>     <span class="token property">"email"</span><span class="token operator">:</span> <span class="token string">"admin@e.com"</span><span class="token punctuation">,</span>     <span class="token property">"tel"</span><span class="token operator">:</span> <span class="token string">"123456789"</span>    &amp;#<span class="token number">125</span><span class="token punctuation">;</span>   &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>   <span class="token property">"students"</span><span class="token operator">:</span> <span class="token punctuation">[</span>   &amp;#<span class="token number">123</span><span class="token punctuation">;</span>     <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"A001"</span><span class="token punctuation">,</span>     <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Tom"</span><span class="token punctuation">,</span>     <span class="token property">"math"</span><span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>     <span class="token property">"physics"</span><span class="token operator">:</span> <span class="token number">66</span><span class="token punctuation">,</span>     <span class="token property">"chemistry"</span><span class="token operator">:</span> <span class="token number">61</span>   &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>   &amp;#<span class="token number">123</span><span class="token punctuation">;</span>     <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"A002"</span><span class="token punctuation">,</span>     <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"James"</span><span class="token punctuation">,</span>     <span class="token property">"math"</span><span class="token operator">:</span> <span class="token number">89</span><span class="token punctuation">,</span>     <span class="token property">"physics"</span><span class="token operator">:</span> <span class="token number">76</span><span class="token punctuation">,</span>     <span class="token property">"chemistry"</span><span class="token operator">:</span> <span class="token number">51</span>   &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>   &amp;#<span class="token number">123</span><span class="token punctuation">;</span>     <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"A003"</span><span class="token punctuation">,</span>     <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Jenny"</span><span class="token punctuation">,</span>     <span class="token property">"math"</span><span class="token operator">:</span> <span class="token number">79</span><span class="token punctuation">,</span>     <span class="token property">"physics"</span><span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span>     <span class="token property">"chemistry"</span><span class="token operator">:</span> <span class="token number">78</span>   &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">]</span>&amp;#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><p>nested_mix.json 文件转换为 DataFrame：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> json<span class="token comment" spellcheck="true"># 使用 Python JSON 模块载入数据</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'nested_mix.json'</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>json_normalize<span class="token punctuation">(</span>    data<span class="token punctuation">,</span>        record_path <span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'students'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        meta<span class="token operator">=</span><span class="token punctuation">[</span>         <span class="token string">'class'</span><span class="token punctuation">,</span>         <span class="token punctuation">[</span><span class="token string">'info'</span><span class="token punctuation">,</span> <span class="token string">'president'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>          <span class="token punctuation">[</span><span class="token string">'info'</span><span class="token punctuation">,</span> <span class="token string">'contacts'</span><span class="token punctuation">,</span> <span class="token string">'tel'</span><span class="token punctuation">]</span>       <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span></code></pre><p>以上实例输出结果为：</p><pre><code>     id   name  math  physics  chemistry   class info.president info.contacts.tel0  A001    Tom    60       66         61  Year 1    John Kasich         1234567891  A002  James    89       76         51  Year 1    John Kasich         1234567892  A003  Jenny    79       90         78  Year 1    John Kasich         123456789</code></pre><p><strong>读取内嵌数据中的一组数据</strong></p><p>以下是实例文件 nested_deep.json，我们只读取内嵌中的 math 字段：</p><pre class=" language-json"><code class="language-json">&amp;#<span class="token number">123</span><span class="token punctuation">;</span>   <span class="token property">"school_name"</span><span class="token operator">:</span> <span class="token string">"local primary school"</span><span class="token punctuation">,</span>   <span class="token property">"class"</span><span class="token operator">:</span> <span class="token string">"Year 1"</span><span class="token punctuation">,</span>   <span class="token property">"students"</span><span class="token operator">:</span> <span class="token punctuation">[</span>   &amp;#<span class="token number">123</span><span class="token punctuation">;</span>     <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"A001"</span><span class="token punctuation">,</span>     <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Tom"</span><span class="token punctuation">,</span>     <span class="token property">"grade"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>       <span class="token property">"math"</span><span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>       <span class="token property">"physics"</span><span class="token operator">:</span> <span class="token number">66</span><span class="token punctuation">,</span>       <span class="token property">"chemistry"</span><span class="token operator">:</span> <span class="token number">61</span>     &amp;#<span class="token number">125</span><span class="token punctuation">;</span>     &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>   &amp;#<span class="token number">123</span><span class="token punctuation">;</span>     <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"A002"</span><span class="token punctuation">,</span>     <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"James"</span><span class="token punctuation">,</span>     <span class="token property">"grade"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>       <span class="token property">"math"</span><span class="token operator">:</span> <span class="token number">89</span><span class="token punctuation">,</span>       <span class="token property">"physics"</span><span class="token operator">:</span> <span class="token number">76</span><span class="token punctuation">,</span>       <span class="token property">"chemistry"</span><span class="token operator">:</span> <span class="token number">51</span>     &amp;#<span class="token number">125</span><span class="token punctuation">;</span>        &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>   &amp;#<span class="token number">123</span><span class="token punctuation">;</span>     <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"A003"</span><span class="token punctuation">,</span>     <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Jenny"</span><span class="token punctuation">,</span>     <span class="token property">"grade"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>       <span class="token property">"math"</span><span class="token operator">:</span> <span class="token number">79</span><span class="token punctuation">,</span>       <span class="token property">"physics"</span><span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span>       <span class="token property">"chemistry"</span><span class="token operator">:</span> <span class="token number">78</span>     &amp;#<span class="token number">125</span><span class="token punctuation">;</span>   &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">]</span>&amp;#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><p>这里我们需要使用到 glom 模块来处理数据套嵌，glom 模块允许我们使用 . 来访问内嵌对象的属性。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> glom <span class="token keyword">import</span> glomdf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_json<span class="token punctuation">(</span><span class="token string">'nested_deep.json'</span><span class="token punctuation">)</span>data <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'students'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>apply<span class="token punctuation">(</span><span class="token keyword">lambda</span> row<span class="token punctuation">:</span> glom<span class="token punctuation">(</span>row<span class="token punctuation">,</span> <span class="token string">'grade.math'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre><p>以上实例输出结果为：</p><pre class=" language-python"><code class="language-python"><span class="token number">0</span>    <span class="token number">60</span><span class="token number">1</span>    <span class="token number">89</span><span class="token number">2</span>    <span class="token number">79</span>Name<span class="token punctuation">:</span> students<span class="token punctuation">,</span> dtype<span class="token punctuation">:</span> int64</code></pre><h4 id="Pandas-数据清洗"><a href="#Pandas-数据清洗" class="headerlink" title="Pandas 数据清洗"></a>Pandas 数据清洗</h4><p>数据清洗是对一些没有用的数据进行处理的过程。</p><p>很多数据集存在数据缺失、数据格式错误、错误数据或重复数据的情况，如果要对使数据分析更加准确，就需要对这些没有用的数据进行处理。</p><p>在这个教程中，我们将利用  Pandas包来进行数据清洗。</p><p>本文使用到的测试数据 <a href="https://static.runoob.com/download/property-data.csv">property-data.csv</a> 如下：</p><p><img src="https://www.runoob.com/wp-content/uploads/2021/06/6A6DE9DA-E0EE-4001-8C21-1D6A8EBF70FF.jpeg" alt="img"></p><p>上表包含来四种空数据：</p><ul><li>n/a</li><li>NA</li><li>—</li><li>na</li></ul><hr><ul><li><strong>Pandas 清洗空值</strong></li></ul><p>如果我们要删除包含空字段的行，可以使用 dropna() 方法，语法格式如下：</p><pre class=" language-python"><code class="language-python">DataFrame<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> how<span class="token operator">=</span><span class="token string">'any'</span><span class="token punctuation">,</span> thresh<span class="token operator">=</span>None<span class="token punctuation">,</span> subset<span class="token operator">=</span>None<span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><p>参数说明：</p><ul><li>axis：默认为 0，表示逢空值剔除整行，如果设置参数 axis＝1 表示逢空值去掉整列。</li><li>how：默认为 ‘any’ 如果一行（或一列）里任何一个数据有出现 NA 就去掉整行，如果设置 how=’all’ 一行（或列）都是 NA 才去掉这整行。</li><li>thresh：设置需要多少非空值的数据才可以保留下来的。</li><li>subset：设置想要检查的列。如果是多个列，可以使用列名的 list 作为参数。</li><li>inplace：如果设置 True，将计算得到的值直接覆盖之前的值并返回 None，修改的是源数据。</li></ul><p>我们可以通过 isnull() 判断各个单元格是否为空。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'property-data.csv'</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'NUM_BEDROOMS'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'NUM_BEDROOMS'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>以上实例输出结果如下：</p><img src="https://www.runoob.com/wp-content/uploads/2021/06/2A5B93BC-E0A3-4864-98B7-7DAE0E92C5F2.jpg" alt="img" style="zoom:50%;" /><p>以上例子中我们看到 Pandas 把 n/a 和 NA 当作空数据，na 不是空数据，不符合我们要求，我们可以指定空数据类型：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdmissing_values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"n/a"</span><span class="token punctuation">,</span> <span class="token string">"na"</span><span class="token punctuation">,</span> <span class="token string">"--"</span><span class="token punctuation">]</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'property-data.csv'</span><span class="token punctuation">,</span> na_values <span class="token operator">=</span> missing_values<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'NUM_BEDROOMS'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'NUM_BEDROOMS'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>以上实例输出结果如下：</p><img src="https://www.runoob.com/wp-content/uploads/2021/06/FCE8C077-C981-4764-ACBC-CB129304F831.jpg" alt="img" style="zoom:50%;" /><p>接下来的实例演示了删除包含空数据的行。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'property-data.csv'</span><span class="token punctuation">)</span>new_df <span class="token operator">=</span> df<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>new_df<span class="token punctuation">.</span>to_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>以上实例输出结果如下：</p><p><img src="https://www.runoob.com/wp-content/uploads/2021/06/4744B204-1527-49DE-B749-E39D6C7DFE01.jpg" alt="img"></p><p>注意：默认情况下，dropna() 方法返回一个新的 DataFrame，不会修改源数据。</p><p>如果你要修改源数据 DataFrame, 可以使用 inplace = True 参数:</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'property-data.csv'</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>inplace <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>to_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>以上实例输出结果如下：</p><p><img src="https://www.runoob.com/wp-content/uploads/2021/06/4744B204-1527-49DE-B749-E39D6C7DFE01.jpg" alt="img"></p><p>我们也可以移除指定列有空值的行：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'property-data.csv'</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'ST_NUM'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> inplace <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>to_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>以上实例输出结果如下：</p><p><img src="https://www.runoob.com/wp-content/uploads/2021/06/C83C70BC-5E47-4397-938D-7445104BE551.jpg" alt="img"></p><p>我们也可以 fillna() 方法来替换一些空字段：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'property-data.csv'</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token number">12345</span><span class="token punctuation">,</span> inplace <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>to_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>以上实例输出结果如下：</p><p><img src="https://www.runoob.com/wp-content/uploads/2021/06/5033AA75-BC7D-4192-9428-221765EA3C58.jpg" alt="img"></p><p>我们也可以指定某一个列来替换数据：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'property-data.csv'</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'PID'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token number">12345</span><span class="token punctuation">,</span> inplace <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>to_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p> 以上实例输出结果如下：</p><p><img src="https://www.runoob.com/wp-content/uploads/2021/06/2F955E95-8C4C-4E7C-B788-5714B2C898C2.jpg" alt="img"></p><p><strong>替换空单元格的常用方法是计算列的均值、中位数值或众数。</strong></p><p><strong>Pandas使用 mean()、median() 和 mode() 方法计算列的均值（所有值加起来的平均值）、中位数值（排序后排在中间的数）和众数（出现频率最高的数）。</strong></p><p>使用 mean() 方法计算列的均值并替换空单元格： </p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'property-data.csv'</span><span class="token punctuation">)</span>x <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">"ST_NUM"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">"ST_NUM"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>x<span class="token punctuation">,</span> inplace <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>to_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>以上实例输出结果如下，红框为计算的均值替换来空单元格：</p><p><img src="https://www.runoob.com/wp-content/uploads/2021/06/6A758363-02FA-4F6E-9F30-7A3E4489639A.jpg" alt="img"></p><p>使用 median() 方法计算列的中位数并替换空单元格：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'property-data.csv'</span><span class="token punctuation">)</span>x <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">"ST_NUM"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">"ST_NUM"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>x<span class="token punctuation">,</span> inplace <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>to_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>以上实例输出结果如下，红框为计算的中位数替换来空单元格：</p><p><img src="https://www.runoob.com/wp-content/uploads/2021/06/551B8875-D393-4003-BB68-695EBEDBB0FE.jpg" alt="img"></p><p>使用 mode() 方法计算列的众数并替换空单元格： </p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'property-data.csv'</span><span class="token punctuation">)</span>x <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">"ST_NUM"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mode<span class="token punctuation">(</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">"ST_NUM"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>x<span class="token punctuation">,</span> inplace <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>to_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>以上实例输出结果如下，红框为计算的众数替换来空单元格：</p><p><img src="https://www.runoob.com/wp-content/uploads/2021/06/40F6D1C2-CFD7-4C53-B887-86695F486E6D.jpg" alt="img"></p><ul><li><strong>Pandas 清洗格式错误数据</strong></li></ul><p>数据格式错误的单元格会使数据分析变得困难，甚至不可能。</p><p>我们可以通过包含空单元格的行，或者将列中的所有单元格转换为相同格式的数据。</p><p>以下实例会格式化日期：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token comment" spellcheck="true"># 第三个日期格式错误</span>data <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"Date"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'2020/12/01'</span><span class="token punctuation">,</span> <span class="token string">'2020/12/02'</span> <span class="token punctuation">,</span> <span class="token string">'20201226'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"duration"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"day1"</span><span class="token punctuation">,</span> <span class="token string">"day2"</span><span class="token punctuation">,</span> <span class="token string">"day3"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'Date'</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'Date'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>to_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>以上实例输出结果如下：</p><pre><code>           Date  durationday1 2020-12-01        50day2 2020-12-02        40day3 2020-12-26        45</code></pre><ul><li><strong>Pandas 清洗错误数据</strong></li></ul><p>数据错误也是很常见的情况，我们可以对错误的数据进行替换或移除。</p><p>以下实例会替换错误年龄的数据：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdperson <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span> <span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">12345</span><span class="token punctuation">]</span>   <span class="token comment" spellcheck="true"># 12345 年龄数据是错误的</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>person<span class="token punctuation">)</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">30</span> <span class="token comment" spellcheck="true"># 修改数据</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>to_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>以上实例输出结果如下：</p><pre><code>     name  age0  Google   501  Runoob   402  Taobao   30</code></pre><p>也可以设置条件语句：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdperson <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span> <span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">12345</span><span class="token punctuation">]</span>   <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token keyword">for</span> x <span class="token keyword">in</span> df<span class="token punctuation">.</span>index<span class="token punctuation">:</span>    <span class="token keyword">if</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>x<span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">120</span><span class="token punctuation">:</span>        df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>x<span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">120</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>to_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>以上实例输出结果如下：</p><pre class=" language-python"><code class="language-python">     name  age<span class="token number">0</span>  Google   <span class="token number">50</span><span class="token number">1</span>  Runoob  <span class="token number">120</span><span class="token number">2</span>  Taobao  <span class="token number">120</span></code></pre><p>也可以将错误数据的行删除：</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdperson <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span> <span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">12345</span><span class="token punctuation">]</span>   <span class="token comment" spellcheck="true"># 12345 年龄数据是错误的</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token keyword">for</span> x <span class="token keyword">in</span> df<span class="token punctuation">.</span>index<span class="token punctuation">:</span>      <span class="token keyword">if</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>x<span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">120</span><span class="token punctuation">:</span>           df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>x<span class="token punctuation">,</span> inplace <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>to_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>以上实例输出结果如下：</p><pre class=" language-python"><code class="language-python">     name  age<span class="token number">0</span>  Google   <span class="token number">50</span><span class="token number">1</span>  Runoob   <span class="token number">40</span></code></pre><ul><li><strong>Pandas 清洗重复数据</strong></li></ul><p>如果我们要清洗重复数据，可以使用 duplicated() 和 drop_duplicates() 方法。</p><p>如果对应的数据是重复的，duplicated() 会返回 True，否则返回 False。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdperson <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span>  <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>duplicated<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>以上实例输出结果如下：</p><pre class=" language-python"><code class="language-python"><span class="token number">0</span>    <span class="token boolean">False</span><span class="token number">1</span>    <span class="token boolean">False</span><span class="token number">2</span>     <span class="token boolean">True</span><span class="token number">3</span>    <span class="token boolean">False</span>dtype<span class="token punctuation">:</span> bool</code></pre><p>删除重复数据，可以直接使用drop_duplicates() 方法。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdpersons <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span>  <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>persons<span class="token punctuation">)</span>df<span class="token punctuation">.</span>drop_duplicates<span class="token punctuation">(</span>inplace <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span></code></pre><p>以上实例输出结果如下：</p><pre class=" language-python"><code class="language-python">     name  age<span class="token number">0</span>  Google   <span class="token number">50</span><span class="token number">1</span>  Runoob   <span class="token number">40</span><span class="token number">3</span>  Taobao   <span class="token number">23</span></code></pre><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><ul><li><strong>新建列</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdpersons <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span>     <span class="token string">"height(m)"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1.73</span><span class="token punctuation">,</span> <span class="token number">1.82</span><span class="token punctuation">,</span> <span class="token number">1.76</span><span class="token punctuation">,</span> <span class="token number">1.69</span><span class="token punctuation">]</span>    <span class="token string">"weight(kg)"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>persons<span class="token punctuation">)</span>wch<span class="token operator">=</span>df<span class="token punctuation">[</span><span class="token string">'weight(kg)'</span><span class="token punctuation">]</span><span class="token operator">/</span>df<span class="token punctuation">[</span><span class="token string">'height(m)'</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#每个人体重与身高的比例</span>f<span class="token punctuation">[</span><span class="token string">'wch'</span><span class="token punctuation">]</span><span class="token operator">=</span>wch<span class="token comment" spellcheck="true">#添加一个名为wch的列</span></code></pre><ul><li><strong>Numpy中的函数（max、min…)</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdpersons <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span>     <span class="token string">"height(m)"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1.73</span><span class="token punctuation">,</span> <span class="token number">1.82</span><span class="token punctuation">,</span> <span class="token number">1.76</span><span class="token punctuation">,</span> <span class="token number">1.69</span><span class="token punctuation">]</span>    <span class="token string">"weight(kg)"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>persons<span class="token punctuation">)</span>weight_max<span class="token operator">=</span>df<span class="token punctuation">[</span><span class="token string">'weight(kg)'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#体重的最大值</span></code></pre><ul><li><strong>排序</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdpersons <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span>     <span class="token string">"height(m)"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1.73</span><span class="token punctuation">,</span> <span class="token number">1.82</span><span class="token punctuation">,</span> <span class="token number">1.76</span><span class="token punctuation">,</span> <span class="token number">1.69</span><span class="token punctuation">]</span>    <span class="token string">"weight(kg)"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>persons<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#根据体重排序inplace=True代表在源数据上进行修改，ascending默认为True，代表升序，若设置为False代表降序</span>df<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token string">"weight(kg)"</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><ul><li><strong>分组统计</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdpersons <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Run'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'10-15'</span><span class="token punctuation">,</span> <span class="token string">'15-20'</span><span class="token punctuation">,</span> <span class="token string">'5-10'</span><span class="token punctuation">,</span> <span class="token string">'20-25'</span><span class="token punctuation">]</span>     <span class="token string">"height(m)"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1.73</span><span class="token punctuation">,</span> <span class="token number">1.82</span><span class="token punctuation">,</span> <span class="token number">1.76</span><span class="token punctuation">,</span> <span class="token number">1.69</span><span class="token punctuation">]</span>    <span class="token string">"weight(kg)"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>persons<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#根据不同年龄分组计算平均体重aggfunc用来指定处理方法，默认为求均值</span><span class="token comment" spellcheck="true">#values可以指定为列表values=["weight(kg)","height(m)"]</span>ave_weight<span class="token operator">=</span>df<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token string">"age"</span><span class="token punctuation">,</span>values<span class="token operator">=</span><span class="token string">"weight(kg)"</span><span class="token punctuation">,</span>aggfunc<span class="token operator">=</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">)</span></code></pre><ul><li><strong>自定义函数</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">def</span> <span class="token function">is_adult</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">:</span>    age <span class="token operator">=</span> table<span class="token punctuation">[</span><span class="token string">"age"</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"unknown"</span>    <span class="token keyword">elif</span> age<span class="token operator">&lt;</span><span class="token number">18</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"minor"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"adult"</span>    persons <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Runo'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span>     <span class="token string">"height(m)"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1.73</span><span class="token punctuation">,</span> <span class="token number">1.82</span><span class="token punctuation">,</span> <span class="token number">1.76</span><span class="token punctuation">,</span> <span class="token number">1.69</span><span class="token punctuation">]</span>    <span class="token string">"weight(kg)"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>persons<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#利用apply函数执行自定义函数，axic用来指定行向量（1）还是列向量（0）</span>age_labels<span class="token operator">=</span>df<span class="token punctuation">.</span>apply<span class="token punctuation">(</span>is_adult<span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></code></pre><ul><li><strong>DataFrame、Series和ndarray</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdpersons <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Ru'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span>     <span class="token string">"height(m)"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1.73</span><span class="token punctuation">,</span> <span class="token number">1.82</span><span class="token punctuation">,</span> <span class="token number">1.76</span><span class="token punctuation">,</span> <span class="token number">1.69</span><span class="token punctuation">]</span>    <span class="token string">"weight(kg)"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>persons<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#df是一个DataFrame对象</span>age<span class="token operator">=</span>df<span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#df取一列，age是一个Series对象</span>age_values<span class="token operator">=</span>age<span class="token punctuation">.</span>values<span class="token comment" spellcheck="true">#取Series的值，age_values为一个ndarray对象</span></code></pre><ul><li><strong>指定索引</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdpersons <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>      <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Ru'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span>     <span class="token string">"height(m)"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1.73</span><span class="token punctuation">,</span> <span class="token number">1.82</span><span class="token punctuation">,</span> <span class="token number">1.76</span><span class="token punctuation">,</span> <span class="token number">1.69</span><span class="token punctuation">]</span>    <span class="token string">"weight(kg)"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>persons<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#df是一个DataFrame对象</span><span class="token comment" spellcheck="true">#将"name"列指定为索引，drop用来指定是否废弃原来的索引</span>df<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span>drop<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></code></pre><h3 id="Matplotlib"><a href="#Matplotlib" class="headerlink" title="Matplotlib"></a>Matplotlib</h3><p>Matplotlib  的默认配置都允许用户自定义。你可以调整大多数的默认配置：图片大小和分辨率（dpi）、线宽、颜色、风格、坐标轴、坐标轴以及网格的属性、文字与字体属性等。不过，matplotlib 的默认配置在大多数情况下已经做得足够好，你可能只在很少的情况下才会想更改这些默认配置。</p><h4 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h4><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment" spellcheck="true">#生成-π到π的等差数列</span>X <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">,</span> endpoint<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>C<span class="token punctuation">,</span>S <span class="token operator">=</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#本质上是折线图，因为取值较多看起来是曲线图</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span>C<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span>S<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#可用来设置横轴标记样式，如设置标记旋转45度防止重合</span><span class="token comment" spellcheck="true">#plt.xticks(rotation=45)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540010169-4632-exercice-1.png" alt="img"></p><ul><li><strong>默认配置的具体内容</strong></li></ul><p>下面的代码中，我们展现了 matplotlib 的默认配置并辅以注释说明，这部分配置包含了有关绘图样式的所有配置。代码中的配置与默认配置完全相同，你可以在交互模式中修改其中的值来观察效果。</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 导入 matplotlib 的所有内容（nympy 可以用 np 这个名字来使用）</span><span class="token keyword">from</span> pylab <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment" spellcheck="true"># 创建一个 8 * 6 点（point）的图，并设置分辨率为 80</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 创建一个新的 1 * 1 的子图，接下来的图样绘制在其中的第 1 块（也是唯一的一块）</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>X <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">,</span>endpoint<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>C<span class="token punctuation">,</span>S <span class="token operator">=</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制余弦曲线，使用蓝色的、连续的、宽度为 1 （像素）的线条</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span> C<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"blue"</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制正弦曲线，使用绿色的、连续的、宽度为 1 （像素）的线条</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span> S<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"green"</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置横轴的上下限</span>xlim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4.0</span><span class="token punctuation">,</span><span class="token number">4.0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置横轴记号</span>xticks<span class="token punctuation">(</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span>endpoint<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置纵轴的上下限</span>ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 设置纵轴记号</span>yticks<span class="token punctuation">(</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>endpoint<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 以分辨率 72 来保存图片</span><span class="token comment" spellcheck="true"># savefig("exercice_2.png",dpi=72)</span><span class="token comment" spellcheck="true"># 在屏幕上显示</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540010270-8874-exercice-2.png" alt="img"></p><ul><li><strong>改变线条的颜色和粗细</strong></li></ul><p>首先，我们以蓝色和红色分别表示余弦和正弦函数，而后将线条变粗一点。接下来，我们在水平方向拉伸一下整个图。</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span> C<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"blue"</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">"-"</span><span class="token punctuation">)</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span> S<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"red"</span><span class="token punctuation">,</span>  linewidth<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540010382-8258-exercice-3.png" alt="img"></p><ul><li><strong>设置图片边界</strong></li></ul><p>当前的图片边界设置得不好，所以有些地方看得不是很清楚。</p><p>… xlim(X.min()*1.1, X.max()*1.1) ylim(C.min()*1.1, C.max()*1.1) …</p><p>更好的方式是这样：</p><pre class=" language-python"><code class="language-python">xmin <span class="token punctuation">,</span>xmax <span class="token operator">=</span> X<span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> X<span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span>ymin<span class="token punctuation">,</span> ymax <span class="token operator">=</span> Y<span class="token punctuation">.</span>min<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Y<span class="token punctuation">.</span>max<span class="token punctuation">(</span><span class="token punctuation">)</span>dx <span class="token operator">=</span> <span class="token punctuation">(</span>xmax <span class="token operator">-</span> xmin<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.2</span>dy <span class="token operator">=</span> <span class="token punctuation">(</span>ymax <span class="token operator">-</span> ymin<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.2</span>xlim<span class="token punctuation">(</span>xmin <span class="token operator">-</span> dx<span class="token punctuation">,</span> xmax <span class="token operator">+</span> dx<span class="token punctuation">)</span>ylim<span class="token punctuation">(</span>ymin <span class="token operator">-</span> dy<span class="token punctuation">,</span> ymax <span class="token operator">+</span> dy<span class="token punctuation">)</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540010470-3522-exercice-4.png" alt="img"></p><ul><li><strong>设置记号</strong></li></ul><p>我们讨论正弦和余弦函数的时候，通常希望知道函数在 ±π 和 ±π/2 的值。这样看来，当前的设置就不那么理想了。</p><p>…</p><pre class=" language-python"><code class="language-python">xticks<span class="token punctuation">(</span> <span class="token punctuation">[</span><span class="token operator">-</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token operator">-</span>np<span class="token punctuation">.</span>pi<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>pi<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">]</span><span class="token punctuation">)</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540010516-9654-exercice-5.png" alt="img"></p><ul><li><strong>设置记号的标签</strong></li></ul><p>记号现在没问题了，不过标签却不大符合期望。我们可以把 3.142 当做是 π，但毕竟不够精确。当我们设置记号的时候，我们可以同时设置记号的标签。注意这里使用了 LaTeX。</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token operator">-</span>np<span class="token punctuation">.</span>pi<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>pi<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span>r<span class="token string">'$-\pi$'</span><span class="token punctuation">,</span> r<span class="token string">'$-\pi/2$'</span><span class="token punctuation">,</span> r<span class="token string">'$0$'</span><span class="token punctuation">,</span> r<span class="token string">'$+\pi/2$'</span><span class="token punctuation">,</span> r<span class="token string">'$+\pi$'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span>r<span class="token string">'$-1$'</span><span class="token punctuation">,</span> r<span class="token string">'$0$'</span><span class="token punctuation">,</span> r<span class="token string">'$+1$'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540010575-3091-exercice-6.png" alt="img"></p><ul><li><strong>移动脊柱</strong></li></ul><p>坐标轴线和上面的记号连在一起就形成了脊柱（Spines，一条线段上有一系列的凸起，是不是很像脊柱骨啊~），它记录了数据区域的范围。它们可以放在任意位置，不过至今为止，我们都把它放在图的四边。</p><p>实际上每幅图有四条脊柱（上下左右），为了将脊柱放在图的中间，我们必须将其中的两条（上和右）设置为无色，然后调整剩下的两条到合适的位置——数据空间的 0 点。</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment" spellcheck="true">#获取Spines</span>ax <span class="token operator">=</span> gca<span class="token punctuation">(</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'right'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'top'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_color<span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>set_ticks_position<span class="token punctuation">(</span><span class="token string">'bottom'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'bottom'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_position<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>yaxis<span class="token punctuation">.</span>set_ticks_position<span class="token punctuation">(</span><span class="token string">'left'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>spines<span class="token punctuation">[</span><span class="token string">'left'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_position<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540010626-7478-exercice-7.png" alt="img"></p><ul><li><strong>添加图例</strong></li></ul><p>我们在图的左上角添加一个图例。为此，我们只需要在 plot 函数里以「键 - 值」的形式增加一个参数。</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment" spellcheck="true">#label设置图例名称</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span> C<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"blue"</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">"-"</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">"cosine"</span><span class="token punctuation">)</span>plot<span class="token punctuation">(</span>X<span class="token punctuation">,</span> S<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"red"</span><span class="token punctuation">,</span>  linewidth<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">"-"</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">"sine"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#设置图例位置</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">'upper left'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540010676-8469-exercice-8.png" alt="img"></p><ul><li><strong>给一些特殊点做注释</strong> </li></ul><p>我们希望在 2π/3 的位置给两条函数曲线加上一个注释。首先，我们在对应的函数图像位置上画一个点；然后，向横轴引一条垂线，以虚线标记；最后，写上标签。</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>t <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">/</span><span class="token number">3</span><span class="token comment" spellcheck="true">#在(t,0)和(t,cos(t))之间画一条虚线</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span>t<span class="token punctuation">,</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> color <span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">"--"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#画一个只有一个点的散点图</span>scatter<span class="token punctuation">(</span><span class="token punctuation">[</span>t<span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> color <span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#同上</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span>t<span class="token punctuation">,</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> color <span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">"--"</span><span class="token punctuation">)</span>scatter<span class="token punctuation">(</span><span class="token punctuation">[</span>t<span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> color <span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#s 为注释文本内容；xy 为被注释的坐标点；xytext 为注释文字的坐标位置；weight 设置字体线型color 设置字体颜色；arrowprops箭头参数,参数类型为字典dict；connectionstyle设置连接样式</span>annotate<span class="token punctuation">(</span>r<span class="token string">'$\sin(\frac&amp;#123;2\pi&amp;#125;&amp;#123;3&amp;#125;)=\frac&amp;#123;\sqrt&amp;#123;3&amp;#125;&amp;#125;&amp;#123;2&amp;#125;$'</span><span class="token punctuation">,</span>         xy<span class="token operator">=</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> xycoords<span class="token operator">=</span><span class="token string">'data'</span><span class="token punctuation">,</span>         xytext<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> textcoords<span class="token operator">=</span><span class="token string">'offset points'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span>         arrowprops<span class="token operator">=</span>dict<span class="token punctuation">(</span>arrowstyle<span class="token operator">=</span><span class="token string">"->"</span><span class="token punctuation">,</span> connectionstyle<span class="token operator">=</span><span class="token string">"arc3,rad=.2"</span><span class="token punctuation">)</span>annotate<span class="token punctuation">(</span>r<span class="token string">'$\cos(\frac&amp;#123;2\pi&amp;#125;&amp;#123;3&amp;#125;)=-\frac&amp;#123;1&amp;#125;&amp;#123;2&amp;#125;$'</span><span class="token punctuation">,</span>         xy<span class="token operator">=</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> xycoords<span class="token operator">=</span><span class="token string">'data'</span><span class="token punctuation">,</span>         xytext<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> textcoords<span class="token operator">=</span><span class="token string">'offset points'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span>         arrowprops<span class="token operator">=</span>dict<span class="token punctuation">(</span>arrowstyle<span class="token operator">=</span><span class="token string">"->"</span><span class="token punctuation">,</span> connectionstyle<span class="token operator">=</span><span class="token string">"arc3,rad=.2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540010726-1211-exercice-9.png" alt="img"></p><ul><li><strong>精益求精</strong></li></ul><p>坐标轴上的记号标签被曲线挡住了，作为强迫症患者（雾）这是不能忍的。我们可以把它们放大，然后添加一个白色的半透明底色。这样可以保证标签和曲线同时可见。</p><pre class=" language-python"><code class="language-python"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">for</span> label <span class="token keyword">in</span> ax<span class="token punctuation">.</span>get_xticklabels<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> ax<span class="token punctuation">.</span>get_yticklabels<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    label<span class="token punctuation">.</span>set_fontsize<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>    label<span class="token punctuation">.</span>set_bbox<span class="token punctuation">(</span>dict<span class="token punctuation">(</span>facecolor<span class="token operator">=</span><span class="token string">'white'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'None'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.65</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540010789-3592-exercice-10.png" alt="img"></p><h4 id="图像、子图、坐标轴和记号"><a href="#图像、子图、坐标轴和记号" class="headerlink" title="图像、子图、坐标轴和记号"></a>图像、子图、坐标轴和记号</h4><p>到目前为止，我们都用隐式的方法来绘制图像和坐标轴。快速绘图中，这是很方便的。我们也可以显式地控制图像、子图、坐标轴。Matplotlib  中的「图像」指的是用户界面看到的整个窗口内容。在图像里面有所谓「子图」。子图的位置是由坐标网格确定的，而「坐标轴」却不受此限制，可以放在图像的任意位置。我们已经隐式地使用过图像和子图：当我们调用 plot 函数的时候，matplotlib 调用 gca() 函数以及 gcf() 函数来获取当前的坐标轴和图像；如果无法获取图像，则会调用  figure() 函数来创建一个——严格地说，是用 subplot(1,1,1) 创建一个只有一个子图的图像。</p><ul><li><strong>图像</strong> </li></ul><p>所谓「图像」就是 GUI 里以「Figure #」为标题的那些窗口。图像编号从 1 开始，与 MATLAB 的风格一致，而于 Python 从 0 开始编号的风格不同。以下参数是图像的属性：</p><table><thead><tr><th>参数</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>num</td><td>1</td><td>图像的数量</td></tr><tr><td>figsize</td><td>figure.figsize</td><td>图像的长和宽（英寸）</td></tr><tr><td>dpi</td><td>figure.dpi</td><td>分辨率（点/英寸）</td></tr><tr><td>facecolor</td><td>figure.facecolor</td><td>绘图区域的背景颜色</td></tr><tr><td>edgecolor</td><td>figure.edgecolor</td><td>绘图区域边缘的颜色</td></tr><tr><td>frameon</td><td>True</td><td>是否绘制图像边缘</td></tr></tbody></table><p>这些默认值可以在源文件中指明。不过除了图像数量这个参数，其余的参数都很少修改。</p><p>你在图形界面中可以按下右上角的 X 来关闭窗口（OS X 系统是左上角）。Matplotlib 也提供了名为 close 的函数来关闭这个窗口。close 函数的具体行为取决于你提供的参数：</p><ol><li>不传递参数：关闭当前窗口；</li><li>传递窗口编号或窗口实例（instance）作为参数：关闭指定的窗口；</li><li><code>all</code>：关闭所有窗口。</li></ol><p>和其他对象一样，你可以使用 setp 或者是 set_something 这样的方法来设置图像的属性。</p><ul><li><strong>子图</strong></li></ul><p>你可以用子图来将图样（plot）放在均匀的坐标网格中。用 subplot 函数的时候，你需要指明网格的行列数量，以及你希望将图样放在哪一个网格区域中。此外，gridspec 的功能更强大，你也可以选择它来实现这个功能。</p><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540010993-5537-subplot-horizontal.png" alt="img"></p><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540010994-9378-subplot-vertical.png" alt="img"></p><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540010994-5352-subplot-grid.png" alt="img"></p><h4 id="其他类型的图"><a href="#其他类型的图" class="headerlink" title="其他类型的图"></a>其他类型的图</h4><ul><li><strong>普通图</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> pylab <span class="token keyword">import</span> <span class="token operator">*</span>n <span class="token operator">=</span> <span class="token number">256</span>X <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span>n<span class="token punctuation">,</span>endpoint<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>Y <span class="token operator">=</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>X<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#alpha表示透明度</span>plot <span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">1.00</span><span class="token punctuation">)</span>plot <span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token number">-1</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">1.00</span><span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><ul><li><strong>散点图</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> pylab <span class="token keyword">import</span> <span class="token operator">*</span>n <span class="token operator">=</span> <span class="token number">1024</span>X <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>Y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#scatter用来绘制散点图</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540012848-2516-scatter-ex.png" alt="img"></p><ul><li><strong>条形图（柱状图）</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> pylab <span class="token keyword">import</span> <span class="token operator">*</span>n <span class="token operator">=</span> <span class="token number">12</span>X <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>n<span class="token punctuation">)</span>Y1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>X<span class="token operator">/</span>float<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>Y2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>X<span class="token operator">/</span>float<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#bar用来绘制条形图</span>bar<span class="token punctuation">(</span>X<span class="token punctuation">,</span> <span class="token operator">+</span>Y1<span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'#9999ff'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'white'</span><span class="token punctuation">)</span>bar<span class="token punctuation">(</span>X<span class="token punctuation">,</span> <span class="token operator">-</span>Y2<span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'#ff9999'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'white'</span><span class="token punctuation">)</span><span class="token keyword">for</span> x<span class="token punctuation">,</span>y <span class="token keyword">in</span> zip<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y1<span class="token punctuation">)</span><span class="token punctuation">:</span>    text<span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">0.4</span><span class="token punctuation">,</span> y<span class="token operator">+</span><span class="token number">0.05</span><span class="token punctuation">,</span> <span class="token string">'%.2f'</span> <span class="token operator">%</span> y<span class="token punctuation">,</span> ha<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span> va<span class="token operator">=</span> <span class="token string">'bottom'</span><span class="token punctuation">)</span>ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.25</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.25</span><span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540012917-2001-bar-ex.png" alt="img"></p><ul><li><strong>直方图</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npx<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#生成【0-100】之间的100个数据,即 数据集</span>bins<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#设置连续的边界值，即直方图的分布区间[0,10],[10,20]...</span><span class="token comment" spellcheck="true">#直方图会进行统计各个区间的数值</span><span class="token comment" spellcheck="true">#alpha设置透明度，0为完全透明,edgecolor设置分界线颜色</span>plt<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>x<span class="token punctuation">,</span>bins<span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'fuchsia'</span><span class="token punctuation">,</span>alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>edgecolor<span class="token operator">=</span><span class="token string">'white'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'scores'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'count'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#设置x轴分布范围</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><ul><li><strong>等高线图</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> pylab <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>x<span class="token operator">/</span><span class="token number">2</span><span class="token operator">+</span>x<span class="token operator">**</span><span class="token number">5</span><span class="token operator">+</span>y<span class="token operator">**</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">*</span>np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span>y<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span>n <span class="token operator">=</span> <span class="token number">256</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>X<span class="token punctuation">,</span>Y <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>contourf<span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> f<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token punctuation">.</span><span class="token number">75</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'jet'</span><span class="token punctuation">)</span>C <span class="token operator">=</span> contour<span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> f<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> colors<span class="token operator">=</span><span class="token string">'black'</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token punctuation">.</span><span class="token number">5</span><span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540012957-9070-contour-ex.png" alt="img"></p><ul><li><strong>灰度图（Imshow）</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> pylab <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>x<span class="token operator">/</span><span class="token number">2</span><span class="token operator">+</span>x<span class="token operator">**</span><span class="token number">5</span><span class="token operator">+</span>y<span class="token operator">**</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">*</span>np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span>y<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span>n <span class="token operator">=</span> <span class="token number">10</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token operator">*</span>n<span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token operator">*</span>n<span class="token punctuation">)</span>X<span class="token punctuation">,</span>Y <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>imshow<span class="token punctuation">(</span>f<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540013010-5008-imshow-ex.png" alt="img"></p><ul><li><strong>饼状图</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> pylab <span class="token keyword">import</span> <span class="token operator">*</span>n <span class="token operator">=</span> <span class="token number">20</span>Z <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>pie<span class="token punctuation">(</span>Z<span class="token punctuation">)</span> show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540013045-4425-pie-ex.png" alt="img"></p><ul><li><strong>量场图（Quiver Plots）</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> pylab <span class="token keyword">import</span> <span class="token operator">*</span>n <span class="token operator">=</span> <span class="token number">8</span>X<span class="token punctuation">,</span>Y <span class="token operator">=</span> np<span class="token punctuation">.</span>mgrid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>n<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span>quiver<span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">)</span><span class="token punctuation">,</span> show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540013096-4226-quiver-ex.png" alt="img"></p><ul><li><strong>网格</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> pylab <span class="token keyword">import</span> <span class="token operator">*</span>axes <span class="token operator">=</span> gca<span class="token punctuation">(</span><span class="token punctuation">)</span>axes<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>axes<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>axes<span class="token punctuation">.</span>set_xticklabels<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>axes<span class="token punctuation">.</span>set_yticklabels<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540013134-2724-grid-ex.png" alt="img"></p><ul><li><strong>多重网格</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> pylab <span class="token keyword">import</span> <span class="token operator">*</span>subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><ul><li><strong>极轴图</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> pylab <span class="token keyword">import</span> <span class="token operator">*</span>axes<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>N <span class="token operator">=</span> <span class="token number">20</span>theta <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">/</span>N<span class="token punctuation">)</span>radii <span class="token operator">=</span> <span class="token number">10</span><span class="token operator">*</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span>N<span class="token punctuation">)</span>width <span class="token operator">=</span> np<span class="token punctuation">.</span>pi<span class="token operator">/</span><span class="token number">4</span><span class="token operator">*</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span>N<span class="token punctuation">)</span>bars <span class="token operator">=</span> bar<span class="token punctuation">(</span>theta<span class="token punctuation">,</span> radii<span class="token punctuation">,</span> width<span class="token operator">=</span>width<span class="token punctuation">,</span> bottom<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token keyword">for</span> r<span class="token punctuation">,</span>bar <span class="token keyword">in</span> zip<span class="token punctuation">(</span>radii<span class="token punctuation">,</span> bars<span class="token punctuation">)</span><span class="token punctuation">:</span>    bar<span class="token punctuation">.</span>set_facecolor<span class="token punctuation">(</span> cm<span class="token punctuation">.</span>jet<span class="token punctuation">(</span>r<span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    bar<span class="token punctuation">.</span>set_alpha<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540013213-8176-polar-ex.png" alt="img"></p><ul><li><strong>3D 图</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> pylab <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>mplot3d <span class="token keyword">import</span> Axes3Dfig <span class="token operator">=</span> figure<span class="token punctuation">(</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> Axes3D<span class="token punctuation">(</span>fig<span class="token punctuation">)</span>X <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">)</span>Y <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">)</span>X<span class="token punctuation">,</span> Y <span class="token operator">=</span> np<span class="token punctuation">.</span>meshgrid<span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">)</span>R <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>X<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> Y<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span>Z <span class="token operator">=</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>R<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>plot_surface<span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">,</span> rstride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> cstride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">'hot'</span><span class="token punctuation">)</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540013255-9612-plot3d-ex.png" alt="img"></p><ul><li><strong>手稿图</strong></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plteqs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>eqs<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token string">"$W^&amp;#123;3\beta&amp;#125;_&amp;#123;\delta_1 \rho_1 \sigma_2&amp;#125; = U^&amp;#123;3\beta&amp;#125;_&amp;#123;\delta_1 \rho_1&amp;#125; + \frac&amp;#123;1&amp;#125;&amp;#123;8 \pi 2&amp;#125; \int^&amp;#123;\alpha_2&amp;#125;_&amp;#123;\alpha_2&amp;#125; d \alpha^\prime_2 \left[\frac&amp;#123; U^&amp;#123;2\beta&amp;#125;_&amp;#123;\delta_1 \rho_1&amp;#125; - \alpha^\prime_2U^&amp;#123;1\beta&amp;#125;_&amp;#123;\rho_1 \sigma_2&amp;#125; &amp;#125;&amp;#123;U^&amp;#123;0\beta&amp;#125;_&amp;#123;\rho_1 \sigma_2&amp;#125;&amp;#125;\right]$"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>eqs<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token string">"$\frac&amp;#123;d\rho&amp;#125;&amp;#123;d t&amp;#125; + \rho \vec&amp;#123;v&amp;#125;\cdot\nabla\vec&amp;#123;v&amp;#125; = -\nabla p + \mu\nabla^2 \vec&amp;#123;v&amp;#125; + \rho \vec&amp;#123;g&amp;#125;$"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>eqs<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token string">"$\int_&amp;#123;-\infty&amp;#125;^\infty e^&amp;#123;-x^2&amp;#125;dx=\sqrt&amp;#123;\pi&amp;#125;$"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>eqs<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token string">"$E = mc^2 = \sqrt&amp;#123;&amp;#123;m_0&amp;#125;^2c^4 + p^2c^2&amp;#125;$"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>eqs<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token string">"$F_G = G\frac&amp;#123;m_1m_2&amp;#125;&amp;#123;r^2&amp;#125;$"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>axes<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.025</span><span class="token punctuation">,</span><span class="token number">0.025</span><span class="token punctuation">,</span><span class="token number">0.95</span><span class="token punctuation">,</span><span class="token number">0.95</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    index <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token punctuation">(</span>eqs<span class="token punctuation">)</span><span class="token punctuation">)</span>    eq <span class="token operator">=</span> eqs<span class="token punctuation">[</span>index<span class="token punctuation">]</span>    size <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span>    x<span class="token punctuation">,</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>    alpha <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0.25</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token number">75</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> eq<span class="token punctuation">,</span> ha<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span> va<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"#11557c"</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span>alpha<span class="token punctuation">,</span>             transform<span class="token operator">=</span>plt<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>transAxes<span class="token punctuation">,</span> fontsize<span class="token operator">=</span>size<span class="token punctuation">,</span> clip_on<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># savefig('../figures/text_ex.png',dpi=48)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2018/10/1540013329-8438-text-ex.png" alt="img"></p><h3 id="Seaborn"><a href="#Seaborn" class="headerlink" title="Seaborn"></a>Seaborn</h3><p><a href="https://zhuanlan.zhihu.com/p/24464836">https://zhuanlan.zhihu.com/p/24464836</a></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello Everybody</title>
      <link href="/2021/05/17/hello-everybody/"/>
      <url>/2021/05/17/hello-everybody/</url>
      
        <content type="html"><![CDATA[<p>Welcome to BwBlog! </p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h2 id="Hello-Hexo"><a href="#Hello-Hexo" class="headerlink" title="Hello Hexo"></a>Hello Hexo</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
